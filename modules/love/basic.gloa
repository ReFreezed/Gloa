--[[============================================================
--=
--=  LÖVE bindings (love2d.org)
--=
--=  Supported versions: 11.3
--=
--==============================================================

	parseArguments

	-- Types:
	Config
	Data
	Object
	Pointer

	-- Enums:
	ObjectName
	Event
	FullscreenType
	HintingMode

--============================================================]]

local LW  :: !import"love/window" -- FullscreenType
local ffi :: !import "ffi"        -- Cdata



----------------------------------------------------------------
-- Enums.
----------------------------------------------------------------

export ObjectName :: enum {
	BEZIER_CURVE          :: "BezierCurve",
	BODY                  :: "Body",
	BYTE_DATA             :: "ByteData",
	CANVAS                :: "Canvas",
	CHAIN_SHAPE           :: "ChainShape",
	CHANNEL               :: "Channel",
	CIRCLE_SHAPE          :: "CircleShape",
	COMPRESSED_DATA       :: "CompressedData",
	COMPRESSED_IMAGE_DATA :: "CompressedImageData",
	CONTACT               :: "Contact",
	CURSOR                :: "Cursor",
	DATA                  :: "Data",
	DECODER               :: "Decoder",
	DISTANCE_JOINT        :: "DistanceJoint",
	DRAWABLE              :: "Drawable",
	DROPPED_FILE          :: "DroppedFile",
	EDGE_SHAPE            :: "EdgeShape",
	FILE                  :: "File",
	FILE_DATA             :: "FileData",
	FIXTURE               :: "Fixture",
	FONT                  :: "Font",
	FRICTION_JOINT        :: "FrictionJoint",
	GEAR_JOINT            :: "GearJoint",
	GLYPH_DATA            :: "GlyphData",
	IMAGE                 :: "Image",
	IMAGE_DATA            :: "ImageData",
	JOINT                 :: "Joint",
	JOYSTICK              :: "Joystick",
	MESH                  :: "Mesh",
	MOTOR_JOINT           :: "MotorJoint",
	MOUSE_JOINT           :: "MouseJoint",
	PARTICLE_SYSTEM       :: "ParticleSystem",
	POLYGON_SHAPE         :: "PolygonShape",
	PRISMATIC_JOINT       :: "PrismaticJoint",
	PULLEY_JOINT          :: "PulleyJoint",
	QUAD                  :: "Quad",
	RANDOM_GENERATOR      :: "RandomGenerator",
	RASTERIZER            :: "Rasterizer",
	RECORDING_DEVICE      :: "RecordingDevice",
	REVOLUTE_JOINT        :: "RevoluteJoint",
	ROPE_JOINT            :: "RopeJoint",
	SHADER                :: "Shader",
	SHAPE                 :: "Shape",
	SOUND_DATA            :: "SoundData",
	SOURCE                :: "Source",
	SPRITE_BATCH          :: "SpriteBatch",
	TEXT                  :: "Text",
	TEXTURE               :: "Texture",
	THREAD                :: "Thread",
	TRANSFORM             :: "Transform",
	VIDEO                 :: "Video",
	VIDEO_STREAM          :: "VideoStream",
	WELD_JOINT            :: "WeldJoint",
	WHEEL_JOINT           :: "WheelJoint",
	WORLD                 :: "World",
}



----------------------------------------------------------------
-- Types.
----------------------------------------------------------------

export Pointer :: !foreign struct {}

export Object :: !foreign struct {
	release :: (obj:Object) -> (success:bool) !foreign method "release",

	getType :: (obj:Object) -> (name:ObjectName)     !foreign method "type",
	isType  :: (obj:Object, name:ObjectName) -> bool !foreign method "typeOf",
}

export Data :: !foreign struct {
	using Object,

	clone         :: (data:Data) -> Data      !foreign method "clone",
	getFFIPointer :: (data:Data) -> ffi.Cdata !foreign method "getFFIPointer",
	getPointer    :: (data:Data) -> Pointer   !foreign method "getPointer", -- Use getFFIPointer() instead!
	getSize       :: (data:Data) -> int       !foreign method "getSize",
	getString     :: (data:Data) -> string    !foreign method "getString",
}

export Config :: struct {
	identity: string|none = nil,    -- The name of the save directory.
	appendidentity        = false,  -- Search files in source directory before save directory.
	version               = "11.3", -- The LÖVE version this game was made for.
	console               = false,  -- Attach a console. (Windows only.)
	accelerometerjoystick = true,   -- Enable the accelerometer on iOS and Android by exposing it as a Joystick.
	externalstorage       = false,  -- True to save files (and read from the save directory) in external storage on Android.
	gammacorrect          = false,  -- Enable gamma-correct rendering, when supported by the system.

	audio: struct {
		mic           = false, -- Request and use microphone capabilities in Android.
		mixwithsystem = true,  -- Keep background music playing when opening LÖVE. (iOS and Android only.)
	},

	window: struct {
		title             = "Untitled", -- The window title.
		icon: string|none = nil,        -- Filepath to an image to use as the window's icon.
		width             = 800,        -- The window width.
		height            = 600,        -- The window height.
		borderless        = false,      -- Remove all border visuals from the window.
		resizable         = false,      -- Let the window be user-resizable.
		minwidth          = 1,          -- Minimum window width if the window is resizable.
		minheight         = 1,          -- Minimum window height if the window is resizable.
		fullscreen        = false,      -- Enable fullscreen.
		fullscreentype    = LW.FullscreenType.DESKTOP,
		usedpiscale       = true,       -- Enable automatic DPI scaling.
		vsync             = 1,          -- Vertical sync mode.
		msaa              = 0,          -- The number of samples to use with multi-sampled antialiasing.
		depth:   int|none = nil,        -- The number of bits per sample in the depth buffer.
		stencil: int|none = nil,        -- The number of bits per sample in the stencil buffer.
		display           = 1,          -- Index of the monitor to show the window in.
		highdpi           = false,      -- Enable high-dpi mode for the window on a Retina display.
		x: int|none       = nil,        -- The x-coordinate of the window's position in the specified display.
		y: int|none       = nil,        -- The y-coordinate of the window's position in the specified display.
	},

	modules: struct {
		-- Enable/disable modules.
		audio    = true,
		data     = true,
		event    = true,
		font     = true,
		graphics = true,
		image    = true,
		joystick = true,
		keyboard = true,
		math     = true,
		mouse    = true,
		physics  = true,
		sound    = true,
		system   = true,
		thread   = true,
		timer    = true,
		touch    = true,
		video    = true,
		window   = true,
	},
}



----------------------------------------------------------------
-- Functions.
----------------------------------------------------------------

export parseArguments :: (argsRaw:[]string) -> (args:[]string) !foreign lua "love.arg.parseGameArguments"


