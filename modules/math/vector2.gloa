--[[============================================================
--=
--=  GlÃ³a 2D vector module
--=
--==============================================================

	add
	dot
	rotate
	translate, translateTowards

--============================================================]]

local math :: !import "math"

export rotate :: (x,y:float, angle:float) -> (x,y:float) {
	local c = math.cos(angle)
	local s = math.sin(angle)
	return c*x-s*y, s*x+c*y
}

export dot :: (x,y:float, otherX,otherY:float) -> float {
	return x*otherX + y*otherY
}

export translate :: (x1,y1:float, x2,y2:float) -> (x,y:float) {
	return x1+x2, y1+y2
}
export translateTowards :: (x,y:float, angle:float, distance:float) -> (x,y:float) {
	return x+distance*math.cos(angle), y+distance*math.sin(angle)
}
export translateTowards :: (x,y:float, targetX,targetY:float, distance:float) -> (x,y:float) {
	return translate(x,y, math.atan(targetY-y, targetX-x), distance)
}
