--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxcore_picker.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/wxcore_windows"
!import "wx/wxcore_controls"
!import "wx/common"
!import "wx/wxcore_gdi"
!import "wx/wxcore_core"
!import "wx/wxcore_event"
!import "wx/wxbase_datetime"
!import "wx/wxcore_dialogs"

export wxPB_USE_TEXTCTRL:                  int : !foreign lua "wx.wxPB_USE_TEXTCTRL"
export wxCLRP_SHOW_LABEL:                  int : !foreign lua "wx.wxCLRP_SHOW_LABEL"
export wxCLRP_USE_TEXTCTRL:                int : !foreign lua "wx.wxCLRP_USE_TEXTCTRL"
export wxCLRP_DEFAULT_STYLE:               int : !foreign lua "wx.wxCLRP_DEFAULT_STYLE"
export wxDIRP_DIR_MUST_EXIST:              int : !foreign lua "wx.wxDIRP_DIR_MUST_EXIST"
export wxDIRP_CHANGE_DIR:                  int : !foreign lua "wx.wxDIRP_CHANGE_DIR"
export wxDIRP_DEFAULT_STYLE:               int : !foreign lua "wx.wxDIRP_DEFAULT_STYLE"
export wxDIRP_USE_TEXTCTRL:                int : !foreign lua "wx.wxDIRP_USE_TEXTCTRL"
export wxFLP_OPEN:                         int : !foreign lua "wx.wxFLP_OPEN"
export wxFLP_SAVE:                         int : !foreign lua "wx.wxFLP_SAVE"
export wxFLP_OVERWRITE_PROMPT:             int : !foreign lua "wx.wxFLP_OVERWRITE_PROMPT"
export wxFLP_FILE_MUST_EXIST:              int : !foreign lua "wx.wxFLP_FILE_MUST_EXIST"
export wxFLP_CHANGE_DIR:                   int : !foreign lua "wx.wxFLP_CHANGE_DIR"
export wxFLP_DEFAULT_STYLE:                int : !foreign lua "wx.wxFLP_DEFAULT_STYLE"
export wxFLP_USE_TEXTCTRL:                 int : !foreign lua "wx.wxFLP_USE_TEXTCTRL"
export wxFNTP_FONTDESC_AS_LABEL:           int : !foreign lua "wx.wxFNTP_FONTDESC_AS_LABEL"
export wxFNTP_USEFONT_FOR_LABEL:           int : !foreign lua "wx.wxFNTP_USEFONT_FOR_LABEL"
export wxFNTP_USE_TEXTCTRL:                int : !foreign lua "wx.wxFNTP_USE_TEXTCTRL"
export wxFNTP_DEFAULT_STYLE:               int : !foreign lua "wx.wxFNTP_DEFAULT_STYLE"
export wxFNTP_MAXPOINT_SIZE:               int : !foreign lua "wx.wxFNTP_MAXPOINT_SIZE"
export wxEVT_COMMAND_COLOURPICKER_CHANGED: wxEventType : !foreign lua "wx.wxEVT_COMMAND_COLOURPICKER_CHANGED" -- EVT_COLOURPICKER_CHANGED(id, func)
export wxEVT_COMMAND_FILEPICKER_CHANGED:   wxEventType : !foreign lua "wx.wxEVT_COMMAND_FILEPICKER_CHANGED" -- EVT_FILEPICKER_CHANGED(id, fn)
export wxEVT_COMMAND_DIRPICKER_CHANGED:    wxEventType : !foreign lua "wx.wxEVT_COMMAND_DIRPICKER_CHANGED" -- EVT_DIRPICKER_CHANGED(id, fn)
export wxEVT_COMMAND_FONTPICKER_CHANGED:   wxEventType : !foreign lua "wx.wxEVT_COMMAND_FONTPICKER_CHANGED" -- EVT_FONTPICKER_CHANGED(id, fn)

export wxDP_SPIN:        wxEnum : !foreign lua "wx.wxDP_SPIN"
export wxDP_DROPDOWN:    wxEnum : !foreign lua "wx.wxDP_DROPDOWN"
export wxDP_DEFAULT:     wxEnum : !foreign lua "wx.wxDP_DEFAULT"
export wxDP_ALLOWNONE:   wxEnum : !foreign lua "wx.wxDP_ALLOWNONE"
export wxDP_SHOWCENTURY: wxEnum : !foreign lua "wx.wxDP_SHOWCENTURY"

export wxPickerBase :: !foreign struct {
	using wxControl,

	SetInternalMargin        :: (self:wxPickerBase, newmargin:int) !foreign method "SetInternalMargin",
	GetInternalMargin        :: (self:wxPickerBase) -> int !foreign method "GetInternalMargin",
	SetTextCtrlProportion    :: (self:wxPickerBase, prop:int) !foreign method "SetTextCtrlProportion",
	GetTextCtrlProportion    :: (self:wxPickerBase) -> int !foreign method "GetTextCtrlProportion",
	SetPickerCtrlProportion  :: (self:wxPickerBase, prop:int) !foreign method "SetPickerCtrlProportion",
	GetPickerCtrlProportion  :: (self:wxPickerBase) -> int !foreign method "GetPickerCtrlProportion",
	IsTextCtrlGrowable       :: (self:wxPickerBase) -> bool !foreign method "IsTextCtrlGrowable",
	SetTextCtrlGrowable      :: (self:wxPickerBase, grow:bool=true) !foreign method "SetTextCtrlGrowable",
	IsPickerCtrlGrowable     :: (self:wxPickerBase) -> bool !foreign method "IsPickerCtrlGrowable",
	SetPickerCtrlGrowable    :: (self:wxPickerBase, grow:bool=true) !foreign method "SetPickerCtrlGrowable",
	HasTextCtrl              :: (self:wxPickerBase) -> bool !foreign method "HasTextCtrl",
	GetTextCtrl              :: (self:wxPickerBase) -> wxTextCtrl !foreign method "GetTextCtrl",
	GetPickerCtrl            :: (self:wxPickerBase) -> wxControl !foreign method "GetPickerCtrl",
	UpdatePickerFromTextCtrl :: (self:wxPickerBase) !foreign method "UpdatePickerFromTextCtrl",
	UpdateTextCtrlFromPicker :: (self:wxPickerBase) !foreign method "UpdateTextCtrlFromPicker",
}

export wxColourPickerCtrl :: !foreign struct {
	using wxPickerBase,

	!call :: () -> wxColourPickerCtrl !foreign lua "wx.wxColourPickerCtrl",
	!call :: (parent:wxWindow, id:wxWindowID, col:wxColour, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxCLRP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxColourPickerCtrl") -> wxColourPickerCtrl !foreign lua "wx.wxColourPickerCtrl",

	Create    :: (self:wxColourPickerCtrl, parent:wxWindow, id:wxWindowID, col:wxColour, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxCLRP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxColourPickerCtrl") -> bool !foreign method "Create",
	GetColour :: (self:wxColourPickerCtrl) -> wxColour !foreign method "GetColour",
	SetColour :: (self:wxColourPickerCtrl, col:wxColour) !foreign method "SetColour",
	SetColour :: (self:wxColourPickerCtrl, text:wxString|string) -> bool !foreign method "SetColour",
}

export wxColourPickerEvent :: !foreign struct {
	using wxCommandEvent,

	!call :: () -> wxColourPickerEvent !foreign lua "wx.wxColourPickerEvent",
	!call :: (generator:wxObject, id:int, col:wxColour) -> wxColourPickerEvent !foreign lua "wx.wxColourPickerEvent",

	GetColour :: (self:wxColourPickerEvent) -> wxColour !foreign method "GetColour",
	SetColour :: (self:wxColourPickerEvent, c:wxColour) !foreign method "SetColour",
}

export wxDatePickerCtrl :: !foreign struct {
	using wxControl,

	!call :: () -> wxDatePickerCtrl !foreign lua "wx.wxDatePickerCtrl",
	!call :: (parent:wxWindow, id:wxWindowID, dt:wxDateTime=wxDefaultDateTime, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxDP_DEFAULT|wxDP_SHOWCENTURY)]], validator:wxValidator=wxDefaultValidator, name:wxString|string="wxDatePickerCtrl") -> wxDatePickerCtrl !foreign lua "wx.wxDatePickerCtrl",

	Create   :: (self:wxDatePickerCtrl, parent:wxWindow, id:wxWindowID, dt:wxDateTime=wxDefaultDateTime, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxDP_DEFAULT|wxDP_SHOWCENTURY)]], validator:wxValidator=wxDefaultValidator, name:wxString|string="wxDatePickerCtrl") -> bool !foreign method "Create",
	GetRange :: (self:wxDatePickerCtrl) -> bool, wxDateTime, wxDateTime !foreign method "GetRange",
	GetValue :: (self:wxDatePickerCtrl) -> wxDateTime !foreign method "GetValue",
	SetRange :: (self:wxDatePickerCtrl, dt1:wxDateTime, dt2:wxDateTime) !foreign method "SetRange",
	SetValue :: (self:wxDatePickerCtrl, dt:wxDateTime) !foreign method "SetValue",
}

export wxFileDirPickerCtrlBase :: !foreign struct {
	using wxPickerBase,

	GetPath          :: (self:wxFileDirPickerCtrlBase) -> string !foreign method "GetPath",
	SetPath          :: (self:wxFileDirPickerCtrlBase, str:wxString|string) !foreign method "SetPath",
	CheckPath        :: (self:wxFileDirPickerCtrlBase, path:wxString|string) -> bool !foreign method "CheckPath",
	GetTextCtrlValue :: (self:wxFileDirPickerCtrlBase) -> string !foreign method "GetTextCtrlValue",
}

export wxFileDirPickerEvent :: !foreign struct {
	using wxCommandEvent,

	!call :: (type:wxEventType, generator:wxObject, id:int, path:wxString|string) -> wxFileDirPickerEvent !foreign lua "wx.wxFileDirPickerEvent",

	GetPath :: (self:wxFileDirPickerEvent) -> string !foreign method "GetPath",
	SetPath :: (self:wxFileDirPickerEvent, p:wxString|string) !foreign method "SetPath",
}

export wxDirPickerCtrl :: !foreign struct {
	using wxFileDirPickerCtrlBase,

	!call :: () -> wxDirPickerCtrl !foreign lua "wx.wxDirPickerCtrl",
	!call :: (parent:wxWindow, id:wxWindowID, path:wxString|string="", message:wxString|string=wxDirSelectorPromptStr, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDIRP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxDirPickerCtrl") -> wxDirPickerCtrl !foreign lua "wx.wxDirPickerCtrl",

	Create :: (self:wxDirPickerCtrl, parent:wxWindow, id:wxWindowID, path:wxString|string="", message:wxString|string=wxDirSelectorPromptStr, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDIRP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxDirPickerCtrl") -> bool !foreign method "Create",
}

export wxFilePickerCtrl :: !foreign struct {
	using wxFileDirPickerCtrlBase,

	!call :: () -> wxFilePickerCtrl !foreign lua "wx.wxFilePickerCtrl",
	!call :: (parent:wxWindow, id:wxWindowID, path:wxString|string="", message:wxString|string=wxFileSelectorPromptStr, wildcard:wxString|string=wxFileSelectorDefaultWildcardStr, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxFLP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxFilePickerCtrl") -> wxFilePickerCtrl !foreign lua "wx.wxFilePickerCtrl",

	Create :: (self:wxFilePickerCtrl, parent:wxWindow, id:wxWindowID, path:wxString|string="", message:wxString|string=wxFileSelectorPromptStr, wildcard:wxString|string=wxFileSelectorDefaultWildcardStr, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxFLP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxFilePickerCtrl") -> bool !foreign method "Create",
}

export wxFontPickerCtrl :: !foreign struct {
	using wxPickerBase,

	!call :: () -> wxFontPickerCtrl !foreign lua "wx.wxFontPickerCtrl",
	!call :: (parent:wxWindow, id:wxWindowID, initial:wxFont=wxNullFont, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxFNTP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxFontPickerCtrl") -> wxFontPickerCtrl !foreign lua "wx.wxFontPickerCtrl",

	Create          :: (self:wxFontPickerCtrl, parent:wxWindow, id:wxWindowID, initial:wxFont=wxNullFont, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxFNTP_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxFontPickerCtrl") -> bool !foreign method "Create",
	GetSelectedFont :: (self:wxFontPickerCtrl) -> wxFont !foreign method "GetSelectedFont",
	SetSelectedFont :: (self:wxFontPickerCtrl, f:wxFont) !foreign method "SetSelectedFont",
	SetMaxPointSize :: (self:wxFontPickerCtrl, max:int) !foreign method "SetMaxPointSize",
	GetMaxPointSize :: (self:wxFontPickerCtrl) -> int !foreign method "GetMaxPointSize",
}

export wxFontPickerEvent :: !foreign struct {
	using wxCommandEvent,

	!call :: (generator:wxObject, id:int, f:wxFont) -> wxFontPickerEvent !foreign lua "wx.wxFontPickerEvent",

	GetFont :: (self:wxFontPickerEvent) -> wxFont !foreign method "GetFont",
	SetFont :: (self:wxFontPickerEvent, c:wxFont) !foreign method "SetFont",
}
