--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxcore_menutool.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/wxcore_event"
!import "wx/common"
!import "wx/wxcore_windows"
!import "wx/wxcore_defsutils"
!import "wx/wxcore_gdi"
!import "wx/wxbase_data"

export wxMB_DOCKABLE:          int : !foreign lua "wx.wxMB_DOCKABLE"
export wxMENU_TEAROFF:         int : !foreign lua "wx.wxMENU_TEAROFF"
export wxTB_FLAT:              int : !foreign lua "wx.wxTB_FLAT"
export wxTB_DOCKABLE:          int : !foreign lua "wx.wxTB_DOCKABLE"
export wxTB_HORIZONTAL:        int : !foreign lua "wx.wxTB_HORIZONTAL"
export wxTB_VERTICAL:          int : !foreign lua "wx.wxTB_VERTICAL"
export wxTB_3DBUTTONS:         int : !foreign lua "wx.wxTB_3DBUTTONS"
export wxTB_TEXT:              int : !foreign lua "wx.wxTB_TEXT"
export wxTB_NOICONS:           int : !foreign lua "wx.wxTB_NOICONS"
export wxTB_NODIVIDER:         int : !foreign lua "wx.wxTB_NODIVIDER"
export wxTB_NOALIGN:           int : !foreign lua "wx.wxTB_NOALIGN"
export wxTB_HORZ_LAYOUT:       int : !foreign lua "wx.wxTB_HORZ_LAYOUT"
export wxTB_HORZ_TEXT:         int : !foreign lua "wx.wxTB_HORZ_TEXT"
export wxNullAcceleratorTable: wxAcceleratorTable : !foreign lua "wx.wxNullAcceleratorTable"
export wxEVT_MENU_HIGHLIGHT:   wxEventType : !foreign lua "wx.wxEVT_MENU_HIGHLIGHT" -- EVT_MENU_HIGHLIGHT(winid, func) EVT_MENU_HIGHLIGHT_ALL(func)
export wxEVT_MENU_OPEN:        wxEventType : !foreign lua "wx.wxEVT_MENU_OPEN" -- EVT_MENU_OPEN(func)
export wxEVT_MENU_CLOSE:       wxEventType : !foreign lua "wx.wxEVT_MENU_CLOSE" -- EVT_MENU_CLOSE(func)

export wxItemKind :: wxEnum
export wxITEM_SEPARATOR: wxItemKind : !foreign lua "wx.wxITEM_SEPARATOR"
export wxITEM_NORMAL:    wxItemKind : !foreign lua "wx.wxITEM_NORMAL"
export wxITEM_CHECK:     wxItemKind : !foreign lua "wx.wxITEM_CHECK"
export wxITEM_RADIO:     wxItemKind : !foreign lua "wx.wxITEM_RADIO"
export wxITEM_MAX:       wxItemKind : !foreign lua "wx.wxITEM_MAX"

export wxToolBarToolStyle :: wxEnum
export wxTOOL_STYLE_BUTTON:    wxToolBarToolStyle : !foreign lua "wx.wxTOOL_STYLE_BUTTON"
export wxTOOL_STYLE_SEPARATOR: wxToolBarToolStyle : !foreign lua "wx.wxTOOL_STYLE_SEPARATOR"
export wxTOOL_STYLE_CONTROL:   wxToolBarToolStyle : !foreign lua "wx.wxTOOL_STYLE_CONTROL"

export wxACCEL_NORMAL: wxEnum : !foreign lua "wx.wxACCEL_NORMAL"
export wxACCEL_ALT:    wxEnum : !foreign lua "wx.wxACCEL_ALT"
export wxACCEL_CTRL:   wxEnum : !foreign lua "wx.wxACCEL_CTRL"
export wxACCEL_SHIFT:  wxEnum : !foreign lua "wx.wxACCEL_SHIFT"
export wxACCEL_CMD:    wxEnum : !foreign lua "wx.wxACCEL_CMD"

export wxMenu :: !foreign struct {
	using wxEvtHandler,

	null: wxMenu : !foreign lua "wx.NULL",

	new :: (title:wxString|string="", style:int--[[long]]=0) -> wxMenu !foreign lua "wx.wxMenu",
	new :: (arg1:[][](wxWindowID|string--[[|wxItemKind]]), title:wxString|string="", style:int--[[long]]=0) -> wxMenu !foreign lua "wx.wxMenu",

	Append             :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="", kind:wxItemKind=wxITEM_NORMAL) -> wxMenuItem !foreign method "Append",
	Append             :: (self:wxMenu, id:int, item:wxString|string, subMenu:wxMenu, helpString:wxString|string="") -> wxMenuItem !foreign method "Append",
	Append             :: (self:wxMenu, menuItem:wxMenuItem) -> wxMenuItem !foreign method "Append",
	AppendCheckItem    :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "AppendCheckItem",
	AppendRadioItem    :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "AppendRadioItem",
	AppendSeparator    :: (self:wxMenu) -> wxMenuItem !foreign method "AppendSeparator",
	Break              :: (self:wxMenu) !foreign method "Break",
	Check              :: (self:wxMenu, id:int, check:bool) !foreign method "Check",
	Delete             :: (self:wxMenu, id:int) !foreign method "Delete",
	Delete             :: (self:wxMenu, item:wxMenuItem) !foreign method "Delete",
	Destroy            :: (self:wxMenu, id:int) !foreign method "Destroy",
	Destroy            :: (self:wxMenu, item:wxMenuItem) !foreign method "Destroy",
	Enable             :: (self:wxMenu, id:int, enable:bool) !foreign method "Enable",
	FindItem           :: (self:wxMenu, itemString:wxString|string) -> int !foreign method "FindItem",
	FindItem           :: (self:wxMenu, id:int) -> (menuItem:wxMenuItem, ownerMenu:wxMenu) !foreign method "FindItem",
	FindItemByPosition :: (self:wxMenu, position:int--[[size_t]]) -> wxMenuItem !foreign method "FindItemByPosition",
	GetHelpString      :: (self:wxMenu, id:int) -> string !foreign method "GetHelpString",
	GetLabel           :: (self:wxMenu, id:int) -> string !foreign method "GetLabel",
	GetMenuItemCount   :: (self:wxMenu) -> int--[[size_t]] !foreign method "GetMenuItemCount",
	GetMenuItems       :: (self:wxMenu) -> wxMenuItemList !foreign method "GetMenuItems",
	GetTitle           :: (self:wxMenu) -> string !foreign method "GetTitle",
	Insert             :: (self:wxMenu, pos:int--[[size_t]], id:int, item:wxString|string, helpString:wxString|string="", kind:wxItemKind=wxITEM_NORMAL) -> wxMenuItem !foreign method "Insert",
	Insert             :: (self:wxMenu, pos:int--[[size_t]], item:wxMenuItem) -> wxMenuItem !foreign method "Insert",
	InsertCheckItem    :: (self:wxMenu, pos:int--[[size_t]], id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "InsertCheckItem",
	InsertRadioItem    :: (self:wxMenu, pos:int--[[size_t]], id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "InsertRadioItem",
	InsertSeparator    :: (self:wxMenu, pos:int--[[size_t]]) -> wxMenuItem !foreign method "InsertSeparator",
	IsChecked          :: (self:wxMenu, id:int) -> bool !foreign method "IsChecked",
	IsEnabled          :: (self:wxMenu, id:int) -> bool !foreign method "IsEnabled",
	Prepend            :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="", kind:wxItemKind=wxITEM_NORMAL) -> wxMenuItem !foreign method "Prepend",
	Prepend            :: (self:wxMenu, item:wxMenuItem) -> wxMenuItem !foreign method "Prepend",
	PrependCheckItem   :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "PrependCheckItem",
	PrependRadioItem   :: (self:wxMenu, id:int, item:wxString|string, helpString:wxString|string="") -> wxMenuItem !foreign method "PrependRadioItem",
	PrependSeparator   :: (self:wxMenu) -> wxMenuItem !foreign method "PrependSeparator",
	Remove             :: (self:wxMenu, item:wxMenuItem) -> wxMenuItem !foreign method "Remove",
	Remove             :: (self:wxMenu, id:int) -> wxMenuItem !foreign method "Remove",
	SetHelpString      :: (self:wxMenu, id:int, helpString:wxString|string) !foreign method "SetHelpString",
	SetLabel           :: (self:wxMenu, id:int, label:wxString|string) !foreign method "SetLabel",
	SetTitle           :: (self:wxMenu, title:wxString|string) !foreign method "SetTitle",
	UpdateUI           :: (self:wxMenu, source:wxEvtHandler=wxEvtHandler.null) !foreign method "UpdateUI",
}

export wxMenuBar :: !foreign struct {
	using wxWindow,

	new :: (style:int--[[long]]=0) -> wxMenuBar !foreign lua "wx.wxMenuBar",

	Append        :: (self:wxMenuBar, menu:wxMenu, title:wxString|string) -> bool !foreign method "Append",
	Check         :: (self:wxMenuBar, id:int, check:bool) !foreign method "Check",
	Enable        :: (self:wxMenuBar, id:int, enable:bool) !foreign method "Enable",
	EnableTop     :: (self:wxMenuBar, pos:int, enable:bool) !foreign method "EnableTop",
	FindMenu      :: (self:wxMenuBar, title:wxString|string) -> int !foreign method "FindMenu",
	FindMenuItem  :: (self:wxMenuBar, menuString:wxString|string, itemString:wxString|string) -> int !foreign method "FindMenuItem",
	FindItem      :: (self:wxMenuBar, id:int, menu:wxMenu=wxMenu.null) -> wxMenuItem !foreign method "FindItem",
	GetHelpString :: (self:wxMenuBar, id:int) -> string !foreign method "GetHelpString",
	GetLabel      :: (self:wxMenuBar, id:int) -> string !foreign method "GetLabel",
	GetLabelTop   :: (self:wxMenuBar, pos:int) -> string !foreign method "GetLabelTop",
	GetMenu       :: (self:wxMenuBar, menuIndex:int) -> wxMenu !foreign method "GetMenu",
	GetMenuCount  :: (self:wxMenuBar) -> int !foreign method "GetMenuCount",
	Insert        :: (self:wxMenuBar, pos:int--[[size_t]], menu:wxMenu, title:wxString|string) -> bool !foreign method "Insert",
	IsChecked     :: (self:wxMenuBar, id:int) -> bool !foreign method "IsChecked",
	IsEnabled     :: (self:wxMenuBar, id:int) -> bool !foreign method "IsEnabled",
	Refresh       :: (self:wxMenuBar) !foreign method "Refresh",
	Remove        :: (self:wxMenuBar, pos:int--[[size_t]]) -> wxMenu !foreign method "Remove",
	Replace       :: (self:wxMenuBar, pos:int--[[size_t]], menu:wxMenu, title:wxString|string) -> wxMenu !foreign method "Replace",
	SetHelpString :: (self:wxMenuBar, id:int, helpString:wxString|string) !foreign method "SetHelpString",
	SetLabel      :: (self:wxMenuBar, id:int, label:wxString|string) !foreign method "SetLabel",
	SetLabelTop   :: (self:wxMenuBar, pos:int, label:wxString|string) !foreign method "SetLabelTop",
	UpdateMenus   :: (self:wxMenuBar) !foreign method "UpdateMenus",
}

export wxMenuItem :: !foreign struct {
	using wxObject,

	null: wxMenuItem : !foreign lua "wx.NULL",

	new              :: (parentMenu:wxMenu=wxMenu.null, id:int=wxID_SEPARATOR, text:wxString|string="", help:wxString|string="", kind:wxItemKind=wxITEM_NORMAL, subMenu:wxMenu=wxMenu.null) -> wxMenuItem !foreign lua "wx.wxMenuItem",
	GetLabelFromText :: (text:wxString|string) -> string !foreign lua "wx.wxMenuItem.GetLabelFromText",
	GetLabelText     :: (label:wxString|string) -> string !foreign lua "wx.wxMenuItem.GetLabelText",

	Check            :: (self:wxMenuItem, check:bool) !foreign method "Check",
	Enable           :: (self:wxMenuItem, enable:bool) !foreign method "Enable",
	GetHelp          :: (self:wxMenuItem) -> string !foreign method "GetHelp",
	GetId            :: (self:wxMenuItem) -> int !foreign method "GetId",
	GetKind          :: (self:wxMenuItem) -> wxItemKind !foreign method "GetKind",
	GetLabel         :: (self:wxMenuItem) -> string !foreign method "GetLabel",
	GetMenu          :: (self:wxMenuItem) -> wxMenu !foreign method "GetMenu",
	GetText          :: (self:wxMenuItem) -> string !foreign method "GetText",
	GetSubMenu       :: (self:wxMenuItem) -> wxMenu !foreign method "GetSubMenu",
	IsCheckable      :: (self:wxMenuItem) -> bool !foreign method "IsCheckable",
	IsChecked        :: (self:wxMenuItem) -> bool !foreign method "IsChecked",
	IsEnabled        :: (self:wxMenuItem) -> bool !foreign method "IsEnabled",
	IsSeparator      :: (self:wxMenuItem) -> bool !foreign method "IsSeparator",
	IsSubMenu        :: (self:wxMenuItem) -> bool !foreign method "IsSubMenu",
	SetBitmap        :: (self:wxMenuItem, bmp:wxBitmap) !foreign method "SetBitmap",
	SetHelp          :: (self:wxMenuItem, helpString:wxString|string) !foreign method "SetHelp",
	SetSubMenu       :: (self:wxMenuItem, menu:wxMenu) !foreign method "SetSubMenu",
	SetText          :: (self:wxMenuItem, text:wxString|string) !foreign method "SetText",
	SetTextColour    :: (self:wxMenuItem, colour:wxColour) !foreign method "SetTextColour",
	SetItemLabel     :: (self:wxMenuItem, str:wxString|string) !foreign method "SetItemLabel",
	GetItemLabel     :: (self:wxMenuItem) -> string !foreign method "GetItemLabel",
	GetItemLabelText :: (self:wxMenuItem) -> string !foreign method "GetItemLabelText",
}

export wxMenuItemList :: !foreign struct {
	using wxList,
}

export wxMenuEvent :: !foreign struct {
	using wxEvent,

	new :: (\type:wxEventType=wxEVT_NULL, id:int=0, menu:wxMenu=wxMenu.null) -> wxMenuEvent !foreign lua "wx.wxMenuEvent",

	GetMenu   :: (self:wxMenuEvent) -> wxMenu !foreign method "GetMenu",
	GetMenuId :: (self:wxMenuEvent) -> int !foreign method "GetMenuId",
	IsPopup   :: (self:wxMenuEvent) -> bool !foreign method "IsPopup",
}

export wxToolBarBase :: !foreign struct {
	using wxControl,

	AddControl          :: (self:wxToolBarBase, control:wxControl) -> wxToolBarToolBase !foreign method "AddControl",
	AddSeparator        :: (self:wxToolBarBase) -> wxToolBarToolBase !foreign method "AddSeparator",
	AddTool             :: (self:wxToolBarBase, toolId:int, label:wxString|string, bitmap1:wxBitmap, bitmap2:wxBitmap=wxNullBitmap, kind:wxItemKind=wxITEM_NORMAL, shortHelpString:wxString|string="", longHelpString:wxString|string="", clientData:wxObject=wxObject.null) -> wxToolBarToolBase !foreign method "AddTool",
	AddTool             :: (self:wxToolBarBase, toolId:int, label:wxString|string, bitmap1:wxBitmap, shortHelpString:wxString|string, kind:wxItemKind=wxITEM_NORMAL) -> wxToolBarToolBase !foreign method "AddTool",
	AddCheckTool        :: (self:wxToolBarBase, toolid:int, label:wxString|string, bitmap:wxBitmap, bmpDisabled:wxBitmap=wxNullBitmap, shortHelp:wxString|string="", longHelp:wxString|string="", data:wxObject=wxObject.null) -> wxToolBarToolBase !foreign method "AddCheckTool",
	AddRadioTool        :: (self:wxToolBarBase, toolid:int, label:wxString|string, bitmap:wxBitmap, bmpDisabled:wxBitmap=wxNullBitmap, shortHelp:wxString|string="", longHelp:wxString|string="", data:wxObject=wxObject.null) -> wxToolBarToolBase !foreign method "AddRadioTool",
	ClearTools          :: (self:wxToolBarBase) !foreign method "ClearTools",
	DeleteTool          :: (self:wxToolBarBase, toolId:int) -> bool !foreign method "DeleteTool",
	DeleteToolByPos     :: (self:wxToolBarBase, pos:int--[[size_t]]) -> bool !foreign method "DeleteToolByPos",
	EnableTool          :: (self:wxToolBarBase, toolId:int, enable:bool) !foreign method "EnableTool",
	FindById            :: (self:wxToolBarBase, id:int) -> wxToolBarToolBase !foreign method "FindById",
	FindControl         :: (self:wxToolBarBase, id:int) -> wxControl !foreign method "FindControl",
	FindToolForPosition :: (self:wxToolBarBase, x,y:int--[[wxCoord]]) -> wxToolBarToolBase !foreign method "FindToolForPosition",
	GetMaxRows          :: (self:wxToolBarBase) -> int !foreign method "GetMaxRows",
	GetMaxCols          :: (self:wxToolBarBase) -> int !foreign method "GetMaxCols",
	GetToolSize         :: (self:wxToolBarBase) -> wxSize !foreign method "GetToolSize",
	GetToolBitmapSize   :: (self:wxToolBarBase) -> wxSize !foreign method "GetToolBitmapSize",
	GetToolClientData   :: (self:wxToolBarBase, toolId:int) -> wxObject !foreign method "GetToolClientData",
	GetToolEnabled      :: (self:wxToolBarBase, toolId:int) -> bool !foreign method "GetToolEnabled",
	GetToolLongHelp     :: (self:wxToolBarBase, toolId:int) -> string !foreign method "GetToolLongHelp",
	GetToolMargins      :: (self:wxToolBarBase) -> wxSize !foreign method "GetToolMargins",
	GetToolPacking      :: (self:wxToolBarBase) -> int !foreign method "GetToolPacking",
	GetToolPos          :: (self:wxToolBarBase, toolId:int) -> int !foreign method "GetToolPos",
	GetToolSeparation   :: (self:wxToolBarBase) -> int !foreign method "GetToolSeparation",
	GetToolShortHelp    :: (self:wxToolBarBase, toolId:int) -> string !foreign method "GetToolShortHelp",
	GetToolState        :: (self:wxToolBarBase, id:int) -> bool !foreign method "GetToolState",
	InsertControl       :: (self:wxToolBarBase, pos:int--[[size_t]], control:wxControl) -> wxToolBarToolBase !foreign method "InsertControl",
	InsertSeparator     :: (self:wxToolBarBase, pos:int--[[size_t]]) -> wxToolBarToolBase !foreign method "InsertSeparator",
	InsertTool          :: (self:wxToolBarBase, pos:int--[[size_t]], id:int, bitmap:wxBitmap, pushedBitmap:wxBitmap=wxNullBitmap, isToggle:bool=false, clientData:wxObject=wxObject.null, shortHelpString:wxString|string="", longHelpString:wxString|string="") -> wxToolBarToolBase !foreign method "InsertTool",
	InsertTool          :: (self:wxToolBarBase, pos:int--[[size_t]], toolid:int, label:wxString|string, bitmap:wxBitmap, bmpDisabled:wxBitmap=wxNullBitmap, kind:wxItemKind=wxITEM_NORMAL, shortHelp:wxString|string="", longHelp:wxString|string="", clientData:wxObject=wxObject.null) -> wxToolBarToolBase !foreign method "InsertTool",
	RemoveTool          :: (self:wxToolBarBase, id:int) -> wxToolBarToolBase !foreign method "RemoveTool",
	Realize             :: (self:wxToolBarBase) -> bool !foreign method "Realize",
	SetMargins          :: (self:wxToolBarBase, x,y:int) !foreign method "SetMargins",
	SetMargins          :: (self:wxToolBarBase, size:wxSize) !foreign method "SetMargins",
	SetToolBitmapSize   :: (self:wxToolBarBase, size:wxSize) !foreign method "SetToolBitmapSize",
	SetToolClientData   :: (self:wxToolBarBase, id:int, clientData:wxObject) !foreign method "SetToolClientData",
	SetToolLongHelp     :: (self:wxToolBarBase, toolId:int, helpString:wxString|string) !foreign method "SetToolLongHelp",
	SetToolPacking      :: (self:wxToolBarBase, packing:int) !foreign method "SetToolPacking",
	SetToolShortHelp    :: (self:wxToolBarBase, id:int, helpString:wxString|string) !foreign method "SetToolShortHelp",
	SetToolSeparation   :: (self:wxToolBarBase, separation:int) !foreign method "SetToolSeparation",
	SetToggle           :: (self:wxToolBarBase, id:int, toggle:bool) !foreign method "SetToggle",
	SetRows             :: (self:wxToolBarBase, nRows:int) !foreign method "SetRows",
	SetMaxRowsCols      :: (self:wxToolBarBase, rows:int, cols:int) !foreign method "SetMaxRowsCols",
	ToggleTool          :: (self:wxToolBarBase, toolId:int, toggle:bool) !foreign method "ToggleTool",
}

export wxToolBar :: !foreign struct {
	using wxToolBarBase,

	new :: () -> wxToolBar !foreign lua "wx.wxToolBar",
	new :: (parent:wxWindow, id:wxWindowID, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxNO_BORDER|wxTB_HORIZONTAL)]], name:wxString|string="wxToolBar") -> wxToolBar !foreign lua "wx.wxToolBar",

	Create :: (self:wxToolBar, parent:wxWindow, id:wxWindowID, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxNO_BORDER|wxTB_HORIZONTAL)]], name:wxString|string="wxToolBar") -> bool !foreign method "Create",
}

export wxToolBarToolBase :: !foreign struct {
	using wxObject,

	GetId             :: (self:wxToolBarToolBase) -> int !foreign method "GetId",
	GetControl        :: (self:wxToolBarToolBase) -> wxControl !foreign method "GetControl",
	GetToolBar        :: (self:wxToolBarToolBase) -> wxToolBarBase !foreign method "GetToolBar",
	IsButton          :: (self:wxToolBarToolBase) -> int !foreign method "IsButton",
	IsControl         :: (self:wxToolBarToolBase) -> int !foreign method "IsControl",
	IsSeparator       :: (self:wxToolBarToolBase) -> int !foreign method "IsSeparator",
	GetStyle          :: (self:wxToolBarToolBase) -> int !foreign method "GetStyle",
	GetKind           :: (self:wxToolBarToolBase) -> wxItemKind !foreign method "GetKind",
	IsEnabled         :: (self:wxToolBarToolBase) -> bool !foreign method "IsEnabled",
	IsToggled         :: (self:wxToolBarToolBase) -> bool !foreign method "IsToggled",
	CanBeToggled      :: (self:wxToolBarToolBase) -> bool !foreign method "CanBeToggled",
	GetNormalBitmap   :: (self:wxToolBarToolBase) -> wxBitmap !foreign method "GetNormalBitmap",
	GetDisabledBitmap :: (self:wxToolBarToolBase) -> wxBitmap !foreign method "GetDisabledBitmap",
	GetBitmap         :: (self:wxToolBarToolBase) -> wxBitmap !foreign method "GetBitmap",
	GetLabel          :: (self:wxToolBarToolBase) -> string !foreign method "GetLabel",
	GetShortHelp      :: (self:wxToolBarToolBase) -> string !foreign method "GetShortHelp",
	GetLongHelp       :: (self:wxToolBarToolBase) -> string !foreign method "GetLongHelp",
	Enable            :: (self:wxToolBarToolBase, enable:bool) -> bool !foreign method "Enable",
	Toggle            :: (self:wxToolBarToolBase, toggle:bool) -> bool !foreign method "Toggle",
	SetToggle         :: (self:wxToolBarToolBase, toggle:bool) -> bool !foreign method "SetToggle",
	SetShortHelp      :: (self:wxToolBarToolBase, help:wxString|string) -> bool !foreign method "SetShortHelp",
	SetLongHelp       :: (self:wxToolBarToolBase, help:wxString|string) -> bool !foreign method "SetLongHelp",
	SetNormalBitmap   :: (self:wxToolBarToolBase, bmp:wxBitmap) !foreign method "SetNormalBitmap",
	SetDisabledBitmap :: (self:wxToolBarToolBase, bmp:wxBitmap) !foreign method "SetDisabledBitmap",
	SetLabel          :: (self:wxToolBarToolBase, label:wxString|string) !foreign method "SetLabel",
	Detach            :: (self:wxToolBarToolBase) !foreign method "Detach",
	Attach            :: (self:wxToolBarToolBase, tbar:wxToolBarBase) !foreign method "Attach",
	GetClientData     :: (self:wxToolBarToolBase) -> wxObject !foreign method "GetClientData",
	SetClientData     :: (self:wxToolBarToolBase, clientData:wxObject) !foreign method "SetClientData",
}

export wxToolBarTool :: !foreign struct {
	using wxToolBarToolBase,
}

export wxAcceleratorTable :: !foreign struct {
	using wxObject,

	new :: (accelTable:[][]int--[[is int good enough here?]]) -> wxAcceleratorTable !foreign lua "wx.wxAcceleratorTable",
	new :: (accel:wxAcceleratorTable) -> wxAcceleratorTable !foreign lua "wx.wxAcceleratorTable",

	Ok :: (self:wxAcceleratorTable) -> bool !foreign method "Ok",
}

export wxAcceleratorEntry :: !foreign struct {
	using wxLuaUserdata,

	new    :: (flags:int=0, keyCode:int=0, cmd:int=0, item:wxMenuItem=wxMenuItem.null) -> wxAcceleratorEntry !foreign lua "wx.wxAcceleratorEntry",
	new    :: (entry:wxAcceleratorEntry) -> wxAcceleratorEntry !foreign lua "wx.wxAcceleratorEntry",
	Create :: (str:wxString|string) -> wxAcceleratorEntry !foreign lua "wx.wxAcceleratorEntry.Create",

	GetCommand  :: (self:wxAcceleratorEntry) -> int !foreign method "GetCommand",
	GetFlags    :: (self:wxAcceleratorEntry) -> int !foreign method "GetFlags",
	GetKeyCode  :: (self:wxAcceleratorEntry) -> int !foreign method "GetKeyCode",
	Set         :: (self:wxAcceleratorEntry, flags:int, keyCode:int, Cmd:int, item:wxMenuItem=wxMenuItem.null) !foreign method "Set",
	IsOk        :: (self:wxAcceleratorEntry) -> bool !foreign method "IsOk",
	ToString    :: (self:wxAcceleratorEntry) -> string !foreign method "ToString",
	FromString  :: (self:wxAcceleratorEntry, str:wxString|string) -> bool !foreign method "FromString",
	GetMenuItem :: (self:wxAcceleratorEntry) -> wxMenuItem !foreign method "GetMenuItem",
}
