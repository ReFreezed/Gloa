--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxhtml_html.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxbase_data"
!import "wx/wxcore_windows"
!import "wx/wxcore_gdi"
!import "wx/wxcore_event"
!import "wx/wxcore_appframe"
!import "wx/wxbase_file"
!import "wx/wxbase_config"
!import "wx/wxcore_core"
!import "wx/wxcore_print"
!import "wx/wxcore_help"

export wxPAGE_ODD:  wxEnum : !foreign lua "wx.wxPAGE_ODD" -- Does this exist in wxLua?
export wxPAGE_EVEN: wxEnum : !foreign lua "wx.wxPAGE_EVEN"
export wxPAGE_ALL:  wxEnum : !foreign lua "wx.wxPAGE_ALL"

export wxHTML_CLR_FOREGROUND:             int : 0x01 -- Are these available in foreign wxLua?
export wxHTML_CLR_BACKGROUND:             int : 0x02
export wxHTML_CLR_TRANSPARENT_BACKGROUND: int : 0x04

export wxHTML_COND_ISANCHOR:     int : !foreign lua "wxhtml.wxHTML_COND_ISANCHOR"
export wxHTML_COND_ISIMAGEMAP:   int : !foreign lua "wxhtml.wxHTML_COND_ISIMAGEMAP"
export wxHTML_COND_USER:         int : !foreign lua "wxhtml.wxHTML_COND_USER"
export wxHTML_UNITS_PIXELS:      int : !foreign lua "wxhtml.wxHTML_UNITS_PIXELS"
export wxHTML_UNITS_PERCENT:     int : !foreign lua "wxhtml.wxHTML_UNITS_PERCENT"
export wxHTML_INDENT_TOP:        int : !foreign lua "wxhtml.wxHTML_INDENT_TOP"
export wxHTML_INDENT_BOTTOM:     int : !foreign lua "wxhtml.wxHTML_INDENT_BOTTOM"
export wxHTML_INDENT_LEFT:       int : !foreign lua "wxhtml.wxHTML_INDENT_LEFT"
export wxHTML_INDENT_RIGHT:      int : !foreign lua "wxhtml.wxHTML_INDENT_RIGHT"
export wxHTML_INDENT_HORIZONTAL: int : !foreign lua "wxhtml.wxHTML_INDENT_HORIZONTAL"
export wxHTML_INDENT_VERTICAL:   int : !foreign lua "wxhtml.wxHTML_INDENT_VERTICAL"
export wxHTML_INDENT_ALL:        int : !foreign lua "wxhtml.wxHTML_INDENT_ALL"
export wxHTML_ALIGN_LEFT:        int : !foreign lua "wxhtml.wxHTML_ALIGN_LEFT"
export wxHTML_ALIGN_JUSTIFY:     int : !foreign lua "wxhtml.wxHTML_ALIGN_JUSTIFY"
export wxHTML_ALIGN_CENTER:      int : !foreign lua "wxhtml.wxHTML_ALIGN_CENTER"
export wxHTML_ALIGN_RIGHT:       int : !foreign lua "wxhtml.wxHTML_ALIGN_RIGHT"
export wxHTML_ALIGN_BOTTOM:      int : !foreign lua "wxhtml.wxHTML_ALIGN_BOTTOM"
export wxHTML_ALIGN_TOP:         int : !foreign lua "wxhtml.wxHTML_ALIGN_TOP"
export wxHW_SCROLLBAR_NEVER:     int : !foreign lua "wxhtml.wxHW_SCROLLBAR_NEVER"
export wxHW_SCROLLBAR_AUTO:      int : !foreign lua "wxhtml.wxHW_SCROLLBAR_AUTO"
export wxHLB_DEFAULT_STYLE:      int : !foreign lua "wxhtml.wxHLB_DEFAULT_STYLE"
export wxHLB_MULTIPLE:           int : !foreign lua "wxhtml.wxHLB_MULTIPLE"
export wxHF_TOOLBAR:             int : !foreign lua "wxhtml.wxHF_TOOLBAR"
export wxHF_FLAT_TOOLBAR:        int : !foreign lua "wxhtml.wxHF_FLAT_TOOLBAR"
export wxHF_CONTENTS:            int : !foreign lua "wxhtml.wxHF_CONTENTS"
export wxHF_INDEX:               int : !foreign lua "wxhtml.wxHF_INDEX"
export wxHF_SEARCH:              int : !foreign lua "wxhtml.wxHF_SEARCH"
export wxHF_BOOKMARKS:           int : !foreign lua "wxhtml.wxHF_BOOKMARKS"
export wxHF_OPEN_FILES:          int : !foreign lua "wxhtml.wxHF_OPEN_FILES"
export wxHF_PRINT:               int : !foreign lua "wxhtml.wxHF_PRINT"
export wxHF_MERGE_BOOKS:         int : !foreign lua "wxhtml.wxHF_MERGE_BOOKS"
export wxHF_ICONS_BOOK:          int : !foreign lua "wxhtml.wxHF_ICONS_BOOK"
export wxHF_ICONS_FOLDER:        int : !foreign lua "wxhtml.wxHF_ICONS_FOLDER"
export wxHF_ICONS_BOOK_CHAPTER:  int : !foreign lua "wxhtml.wxHF_ICONS_BOOK_CHAPTER"
export wxHF_DEFAULT_STYLE:       int : !foreign lua "wxhtml.wxHF_DEFAULT_STYLE"
export wxEVT_HTML_TAG_HANDLER:   wxEventType : !foreign lua "wxhtml.wxEVT_HTML_TAG_HANDLER" -- EVT_HTML_TAG_HANDLER(id, fn)

export wxHtmlCell :: !foreign struct {
	using wxObject,

	new :: () -> wxHtmlCell !foreign lua "wxhtml.wxHtmlCell",

	AdjustPagebreak :: (self:wxHtmlCell, pagebreak:int) -> bool !foreign method "AdjustPagebreak",
	AdjustPagebreak :: (self:wxHtmlCell, pagebreak:int, known_pagebreaks:wxArrayInt) -> bool !foreign method "AdjustPagebreak",
	Find            :: (self:wxHtmlCell, condition:int) -> wxHtmlCell !foreign method "Find",
	Find            :: (self:wxHtmlCell, condition:int, param:string) -> wxHtmlCell !foreign method "Find",
	Find            :: (self:wxHtmlCell, condition:int, param:int) -> wxHtmlCell !foreign method "Find",
	GetDescent      :: (self:wxHtmlCell) -> int !foreign method "GetDescent",
	GetFirstChild   :: (self:wxHtmlCell) -> wxHtmlCell !foreign method "GetFirstChild",
	GetHeight       :: (self:wxHtmlCell) -> int !foreign method "GetHeight",
	GetId           :: (self:wxHtmlCell) -> string !foreign method "GetId",
	GetLink         :: (self:wxHtmlCell, x,y:int=0) -> wxHtmlLinkInfo !foreign method "GetLink",
	GetNext         :: (self:wxHtmlCell) -> wxHtmlCell !foreign method "GetNext",
	GetParent       :: (self:wxHtmlCell) -> wxHtmlContainerCell !foreign method "GetParent",
	GetPosX         :: (self:wxHtmlCell) -> int !foreign method "GetPosX",
	GetPosY         :: (self:wxHtmlCell) -> int !foreign method "GetPosY",
	GetWidth        :: (self:wxHtmlCell) -> int !foreign method "GetWidth",
	Layout          :: (self:wxHtmlCell, w:int) !foreign method "Layout",
	SetId           :: (self:wxHtmlCell, id:wxString|string) !foreign method "SetId",
	SetLink         :: (self:wxHtmlCell, link:wxHtmlLinkInfo) !foreign method "SetLink",
	SetNext         :: (self:wxHtmlCell, cell:wxHtmlCell) !foreign method "SetNext",
	SetParent       :: (self:wxHtmlCell, p:wxHtmlContainerCell) !foreign method "SetParent",
	SetPos          :: (self:wxHtmlCell, x,y:int) !foreign method "SetPos",
}

export wxHtmlWidgetCell :: !foreign struct {
	using wxHtmlCell,

	new :: (wnd:wxWindow, w:int=0) -> wxHtmlWidgetCell !foreign lua "wxhtml.wxHtmlWidgetCell",
}

export wxHtmlContainerCell :: !foreign struct {
	using wxHtmlCell,

	new :: (parent:wxHtmlContainerCell) -> wxHtmlContainerCell !foreign lua "wxhtml.wxHtmlContainerCell",

	GetAlignHor         :: (self:wxHtmlContainerCell) -> int !foreign method "GetAlignHor",
	GetAlignVer         :: (self:wxHtmlContainerCell) -> int !foreign method "GetAlignVer",
	GetBackgroundColour :: (self:wxHtmlContainerCell) -> wxColour !foreign method "GetBackgroundColour",
	GetIndent           :: (self:wxHtmlContainerCell, ind:int) -> int !foreign method "GetIndent",
	GetIndentUnits      :: (self:wxHtmlContainerCell, ind:int) -> int !foreign method "GetIndentUnits",
	InsertCell          :: (self:wxHtmlContainerCell, cell:wxHtmlCell) !foreign method "InsertCell",
	SetAlign            :: (self:wxHtmlContainerCell, tag:wxHtmlTag) !foreign method "SetAlign",
	SetAlignHor         :: (self:wxHtmlContainerCell, al:int) !foreign method "SetAlignHor",
	SetAlignVer         :: (self:wxHtmlContainerCell, al:int) !foreign method "SetAlignVer",
	SetBackgroundColour :: (self:wxHtmlContainerCell, clr:wxColour) !foreign method "SetBackgroundColour",
	SetBorder           :: (self:wxHtmlContainerCell, clr1:wxColour, clr2:wxColour) !foreign method "SetBorder",
	SetIndent           :: (self:wxHtmlContainerCell, i:int, what:int, units:int=wxHTML_UNITS_PIXELS) !foreign method "SetIndent",
	SetMinHeight        :: (self:wxHtmlContainerCell, h:int, align:int=wxHTML_ALIGN_TOP) !foreign method "SetMinHeight",
	SetWidthFloat       :: (self:wxHtmlContainerCell, w:int, units:int) !foreign method "SetWidthFloat",
	SetWidthFloat       :: (self:wxHtmlContainerCell, tag:wxHtmlTag, pixel_scale:float--[[double]]=1.0) !foreign method "SetWidthFloat",
}

export wxHtmlColourCell :: !foreign struct {
	using wxHtmlCell,

	new :: (clr:wxColour, flags:int=wxHTML_CLR_FOREGROUND) -> wxHtmlColourCell !foreign lua "wxhtml.wxHtmlColourCell",
}

export wxHtmlFontCell :: !foreign struct {
	using wxHtmlCell,

	new :: (font:wxFont) -> wxHtmlFontCell !foreign lua "wxhtml.wxHtmlFontCell",
}

export wxHtmlCellEvent :: !foreign struct {
	using wxCommandEvent,

	new :: () -> wxHtmlCellEvent !foreign lua "wxhtml.wxHtmlCellEvent",
	new :: (commandType:wxEventType, id:int, cell:wxHtmlCell, pt:wxPoint, ev:wxMouseEvent) -> wxHtmlCellEvent !foreign lua "wxhtml.wxHtmlCellEvent",

	GetCell        :: (self:wxHtmlCellEvent) -> wxHtmlCell !foreign method "GetCell",
	GetPoint       :: (self:wxHtmlCellEvent) -> wxPoint !foreign method "GetPoint",
	GetMouseEvent  :: (self:wxHtmlCellEvent) -> wxMouseEvent !foreign method "GetMouseEvent",
	SetLinkClicked :: (self:wxHtmlCellEvent, linkclicked:bool) !foreign method "SetLinkClicked",
	GetLinkClicked :: (self:wxHtmlCellEvent) -> bool !foreign method "GetLinkClicked",
}

export wxHtmlLinkInfo :: !foreign struct {
	using wxLuaUserdata,

	new :: (href:wxString|string, target:wxString|string="") -> wxHtmlLinkInfo !foreign lua "wxhtml.wxHtmlLinkInfo",

	GetEvent    :: (self:wxHtmlLinkInfo) -> wxMouseEvent !foreign method "GetEvent",
	GetHtmlCell :: (self:wxHtmlLinkInfo) -> wxHtmlCell !foreign method "GetHtmlCell",
	GetHref     :: (self:wxHtmlLinkInfo) -> string !foreign method "GetHref",
	GetTarget   :: (self:wxHtmlLinkInfo) -> string !foreign method "GetTarget",
}

export wxHtmlTag :: !foreign struct {
	using wxObject,

	GetAllParams     :: (self:wxHtmlTag) -> string !foreign method "GetAllParams",
	GetBeginPos      :: (self:wxHtmlTag) -> int !foreign method "GetBeginPos",
	GetEndPos1       :: (self:wxHtmlTag) -> int !foreign method "GetEndPos1",
	GetEndPos2       :: (self:wxHtmlTag) -> int !foreign method "GetEndPos2",
	GetName          :: (self:wxHtmlTag) -> string !foreign method "GetName",
	GetParam         :: (self:wxHtmlTag, par:wxString|string, with_commas:bool=false) -> string !foreign method "GetParam",
	GetParamAsColour :: (self:wxHtmlTag, par:wxString|string) -> bool, wxColour !foreign method "GetParamAsColour",
	GetParamAsInt    :: (self:wxHtmlTag, par:wxString|string) -> bool, int !foreign method "GetParamAsInt",
	HasEnding        :: (self:wxHtmlTag) -> bool !foreign method "HasEnding",
	HasParam         :: (self:wxHtmlTag, par:wxString|string) -> bool !foreign method "HasParam",
}

export wxHtmlWindow :: !foreign struct {
	using wxScrolledWindow,

	new :: (parent:wxWindow, id:wxWindowID=-1, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxHW_SCROLLBAR_AUTO, name:wxString|string="wxHtmlWindow") -> wxHtmlWindow !foreign lua "wxhtml.wxHtmlWindow",

	AppendToPage              :: (self:wxHtmlWindow, source:wxString|string) -> bool !foreign method "AppendToPage",
	GetInternalRepresentation :: (self:wxHtmlWindow) -> wxHtmlContainerCell !foreign method "GetInternalRepresentation",
	GetOpenedAnchor           :: (self:wxHtmlWindow) -> string !foreign method "GetOpenedAnchor",
	GetOpenedPage             :: (self:wxHtmlWindow) -> string !foreign method "GetOpenedPage",
	GetOpenedPageTitle        :: (self:wxHtmlWindow) -> string !foreign method "GetOpenedPageTitle",
	GetRelatedFrame           :: (self:wxHtmlWindow) -> wxFrame !foreign method "GetRelatedFrame",
	HistoryBack               :: (self:wxHtmlWindow) -> bool !foreign method "HistoryBack",
	HistoryCanBack            :: (self:wxHtmlWindow) -> bool !foreign method "HistoryCanBack",
	HistoryCanForward         :: (self:wxHtmlWindow) -> bool !foreign method "HistoryCanForward",
	HistoryClear              :: (self:wxHtmlWindow) !foreign method "HistoryClear",
	HistoryForward            :: (self:wxHtmlWindow) -> bool !foreign method "HistoryForward",
	LoadFile                  :: (self:wxHtmlWindow, filename:wxFileName) -> bool !foreign method "LoadFile",
	LoadPage                  :: (self:wxHtmlWindow, location:wxString|string) -> bool !foreign method "LoadPage",
	ReadCustomization         :: (self:wxHtmlWindow, cfg:wxConfigBase, path:wxString|string=wxEmptyString) !foreign method "ReadCustomization",
	SelectAll                 :: (self:wxHtmlWindow) !foreign method "SelectAll",
	SelectionToText           :: (self:wxHtmlWindow) -> string !foreign method "SelectionToText",
	SelectLine                :: (self:wxHtmlWindow, pos:wxPoint) !foreign method "SelectLine",
	SelectWord                :: (self:wxHtmlWindow, pos:wxPoint) !foreign method "SelectWord",
	SetBorders                :: (self:wxHtmlWindow, b:int) !foreign method "SetBorders",
	SetFonts                  :: (self:wxHtmlWindow, normal_face:wxString|string, fixed_face:wxString|string, intArray:[]int) !foreign method "SetFonts",
	SetPage                   :: (self:wxHtmlWindow, source:wxString|string) -> bool !foreign method "SetPage",
	SetRelatedFrame           :: (self:wxHtmlWindow, frame:wxFrame, format:wxString|string) !foreign method "SetRelatedFrame",
	SetRelatedStatusBar       :: (self:wxHtmlWindow, bar:int) !foreign method "SetRelatedStatusBar",
	ToText                    :: (self:wxHtmlWindow) -> string !foreign method "ToText",
	WriteCustomization        :: (self:wxHtmlWindow, cfg:wxConfigBase, path:wxString|string=wxEmptyString) !foreign method "WriteCustomization",
}

export wxLuaHtmlWindow :: !foreign struct {
	using wxHtmlWindow,

	new :: (parent:wxWindow, id:wxWindowID=-1, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxHW_SCROLLBAR_AUTO, name:wxString|string="wxLuaHtmlWindow") -> wxLuaHtmlWindow !foreign lua "wxhtml.wxLuaHtmlWindow",
}

export wxLuaHtmlWinTagEvent :: !foreign struct {
	using wxEvent,

	GetHtmlTag          :: (self:wxLuaHtmlWinTagEvent) -> wxHtmlTag !foreign method "GetHtmlTag",
	GetHtmlParser       :: (self:wxLuaHtmlWinTagEvent) -> wxHtmlWinParser !foreign method "GetHtmlParser",
	SetParseInnerCalled :: (self:wxLuaHtmlWinTagEvent, fParseInnerCalled:bool=true) !foreign method "SetParseInnerCalled",
	GetParseInnerCalled :: (self:wxLuaHtmlWinTagEvent) -> bool !foreign method "GetParseInnerCalled",
}

export wxHtmlParser :: !foreign struct {
	using wxObject,

	DoParsing  :: (self:wxHtmlParser, begin_pos:int, end_pos:int) !foreign method "DoParsing",
	DoParsing  :: (self:wxHtmlParser) !foreign method "DoParsing",
	DoneParser :: (self:wxHtmlParser) !foreign method "DoneParser",
	InitParser :: (self:wxHtmlParser, source:wxString|string) !foreign method "InitParser",
}

export wxHtmlWinParser :: !foreign struct {
	using wxHtmlParser,

	new :: (wnd:wxHtmlWindow) -> wxHtmlWinParser !foreign lua "wxhtml.wxHtmlWinParser",

	CloseContainer     :: (self:wxHtmlWinParser) -> wxHtmlContainerCell !foreign method "CloseContainer",
	CreateCurrentFont  :: (self:wxHtmlWinParser) -> wxFont !foreign method "CreateCurrentFont",
	GetActualColor     :: (self:wxHtmlWinParser) -> wxColour !foreign method "GetActualColor",
	GetAlign           :: (self:wxHtmlWinParser) -> int !foreign method "GetAlign",
	GetCharHeight      :: (self:wxHtmlWinParser) -> int !foreign method "GetCharHeight",
	GetCharWidth       :: (self:wxHtmlWinParser) -> int !foreign method "GetCharWidth",
	GetContainer       :: (self:wxHtmlWinParser) -> wxHtmlContainerCell !foreign method "GetContainer",
	GetDC              :: (self:wxHtmlWinParser) -> wxDC !foreign method "GetDC",
	GetFontBold        :: (self:wxHtmlWinParser) -> int !foreign method "GetFontBold",
	GetFontFace        :: (self:wxHtmlWinParser) -> string !foreign method "GetFontFace",
	GetFontFixed       :: (self:wxHtmlWinParser) -> int !foreign method "GetFontFixed",
	GetFontItalic      :: (self:wxHtmlWinParser) -> int !foreign method "GetFontItalic",
	GetFontSize        :: (self:wxHtmlWinParser) -> int !foreign method "GetFontSize",
	GetFontUnderlined  :: (self:wxHtmlWinParser) -> int !foreign method "GetFontUnderlined",
	GetLink            :: (self:wxHtmlWinParser) -> wxHtmlLinkInfo !foreign method "GetLink",
	GetLinkColor       :: (self:wxHtmlWinParser) -> wxColour !foreign method "GetLinkColor",
	GetWindowInterface :: (self:wxHtmlWinParser) -> wxHtmlWindowInterface !foreign method "GetWindowInterface",
	OpenContainer      :: (self:wxHtmlWinParser) -> wxHtmlContainerCell !foreign method "OpenContainer",
	SetActualColor     :: (self:wxHtmlWinParser, clr:wxColour) !foreign method "SetActualColor",
	SetAlign           :: (self:wxHtmlWinParser, a:int) !foreign method "SetAlign",
	SetContainer       :: (self:wxHtmlWinParser, c:wxHtmlContainerCell) -> wxHtmlContainerCell !foreign method "SetContainer",
	SetDC              :: (self:wxHtmlWinParser, dc:wxDC, pixel_scale:float--[[double]]=1.0) !foreign method "SetDC",
	SetFontBold        :: (self:wxHtmlWinParser, x:int) !foreign method "SetFontBold",
	SetFontFace        :: (self:wxHtmlWinParser, face:wxString|string) !foreign method "SetFontFace",
	SetFontFixed       :: (self:wxHtmlWinParser, x:int) !foreign method "SetFontFixed",
	SetFontItalic      :: (self:wxHtmlWinParser, x:int) !foreign method "SetFontItalic",
	SetFontSize        :: (self:wxHtmlWinParser, s:int) !foreign method "SetFontSize",
	SetFontUnderlined  :: (self:wxHtmlWinParser, x:int) !foreign method "SetFontUnderlined",
	SetFonts           :: (self:wxHtmlWinParser, normal_face:wxString|string, fixed_face:wxString|string, intArray:[]int) !foreign method "SetFonts",
	SetLink            :: (self:wxHtmlWinParser, link:wxHtmlLinkInfo) !foreign method "SetLink",
	SetLinkColor       :: (self:wxHtmlWinParser, clr:wxColour) !foreign method "SetLinkColor",
}

export wxHtmlWindowInterface :: !foreign struct {
	using wxLuaUserdata,

	HTMLCursor :: wxEnum,
	HTMLCursor_Default: HTMLCursor : !foreign lua "wxhtml.wxHtmlWindowInterface.HTMLCursor_Default",
	HTMLCursor_Link:    HTMLCursor : !foreign lua "wxhtml.wxHtmlWindowInterface.HTMLCursor_Link",
	HTMLCursor_Text:    HTMLCursor : !foreign lua "wxhtml.wxHtmlWindowInterface.HTMLCursor_Text",

	SetHTMLWindowTitle      :: (self:wxHtmlWindowInterface, title:wxString|string) !foreign method "SetHTMLWindowTitle",
	OnHTMLLinkClicked       :: (self:wxHtmlWindowInterface, link:wxHtmlLinkInfo) !foreign method "OnHTMLLinkClicked",
	HTMLCoordsToWindow      :: (self:wxHtmlWindowInterface, cell:wxHtmlCell, pos:wxPoint) -> wxPoint !foreign method "HTMLCoordsToWindow",
	GetHTMLWindow           :: (self:wxHtmlWindowInterface) -> wxWindow !foreign method "GetHTMLWindow",
	GetHTMLBackgroundColour :: (self:wxHtmlWindowInterface) -> wxColour !foreign method "GetHTMLBackgroundColour",
	SetHTMLBackgroundColour :: (self:wxHtmlWindowInterface, clr:wxColour) !foreign method "SetHTMLBackgroundColour",
	SetHTMLBackgroundImage  :: (self:wxHtmlWindowInterface, bmpBg:wxBitmap) !foreign method "SetHTMLBackgroundImage",
	SetHTMLStatusText       :: (self:wxHtmlWindowInterface, text:wxString|string) !foreign method "SetHTMLStatusText",
	GetHTMLCursor           :: (self:wxHtmlWindowInterface, \type:wxHtmlWindowInterface.HTMLCursor) -> wxCursor !foreign method "GetHTMLCursor",
}

export wxSimpleHtmlListBox :: !foreign struct {
	using wxHtmlWindowInterface,

	new :: () -> wxSimpleHtmlListBox !foreign lua "wxhtml.wxSimpleHtmlListBox",
	new :: (parent:wxWindow, id:wxWindowID, pos:wxPoint, size:wxSize, choices:wxArrayString|[]string, style:int--[[long]]=wxHLB_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxSimpleHtmlListBox") -> wxSimpleHtmlListBox !foreign lua "wxhtml.wxSimpleHtmlListBox",

	Create       :: (self:wxSimpleHtmlListBox, parent:wxWindow, id:wxWindowID, pos:wxPoint, size:wxSize, choices:wxArrayString|[]string, style:int--[[long]]=wxHLB_DEFAULT_STYLE, validator:wxValidator=wxDefaultValidator, name:wxString|string="wxSimpleHtmlListBox") -> bool !foreign method "Create",
	SetSelection :: (self:wxSimpleHtmlListBox, n:int) !foreign method "SetSelection",
	GetSelection :: (self:wxSimpleHtmlListBox) -> int !foreign method "GetSelection",
	GetCount     :: (self:wxSimpleHtmlListBox) -> int !foreign method "GetCount",
	GetString    :: (self:wxSimpleHtmlListBox, n:int) -> string !foreign method "GetString",
	GetStrings   :: (self:wxSimpleHtmlListBox) -> wxArrayString !foreign method "GetStrings",
	SetString    :: (self:wxSimpleHtmlListBox, n:int, s:wxString|string) !foreign method "SetString",
	Clear        :: (self:wxSimpleHtmlListBox) !foreign method "Clear",
	Delete       :: (self:wxSimpleHtmlListBox, n:int) !foreign method "Delete",
	Append       :: (self:wxSimpleHtmlListBox, strings:wxArrayString|[]string) !foreign method "Append",
	Append       :: (self:wxSimpleHtmlListBox, item:wxString|string) -> int !foreign method "Append",
	Append       :: (self:wxSimpleHtmlListBox, item:wxString|string, number:int--[[voidptr_long]]) -> int !foreign method "Append",
	Append       :: (self:wxSimpleHtmlListBox, item:wxString|string, clientData:wxClientData) -> int !foreign method "Append",
}

export wxHtmlDCRenderer :: !foreign struct {
	using wxObject,

	new :: () -> wxHtmlDCRenderer !foreign lua "wxhtml.wxHtmlDCRenderer",

	SetDC          :: (self:wxHtmlDCRenderer, dc:wxDC, pixel_scale:float--[[double]]=1.0) !foreign method "SetDC",
	SetSize        :: (self:wxHtmlDCRenderer, width,height:int) !foreign method "SetSize",
	SetHtmlText    :: (self:wxHtmlDCRenderer, html:wxString|string, basepath:wxString|string="", isdir:bool=true) !foreign method "SetHtmlText",
	Render         :: (self:wxHtmlDCRenderer, x,y:int, known_pagebreaks:wxArrayInt, from:int=0, dont_render:bool=false, to:int=0--[[INT_MAX]]) -> int !foreign method "Render",
	GetTotalHeight :: (self:wxHtmlDCRenderer) -> int !foreign method "GetTotalHeight",
}

export wxHtmlEasyPrinting :: !foreign struct {
	using wxObject,

	new :: (name:wxString|string="Printing", parent_frame:wxFrame=wxFrame.null) -> wxHtmlEasyPrinting !foreign lua "wxhtml.wxHtmlEasyPrinting",

	PreviewFile      :: (self:wxHtmlEasyPrinting, htmlfile:wxString|string) -> bool !foreign method "PreviewFile",
	PreviewText      :: (self:wxHtmlEasyPrinting, htmltext:wxString|string, basepath:wxString|string="") -> bool !foreign method "PreviewText",
	PrintFile        :: (self:wxHtmlEasyPrinting, htmlfile:wxString|string) -> bool !foreign method "PrintFile",
	PrintText        :: (self:wxHtmlEasyPrinting, htmltext:wxString|string, basepath:wxString|string="") -> bool !foreign method "PrintText",
	PageSetup        :: (self:wxHtmlEasyPrinting) !foreign method "PageSetup",
	SetHeader        :: (self:wxHtmlEasyPrinting, header:wxString|string, pg:int=wxPAGE_ALL) !foreign method "SetHeader",
	SetFooter        :: (self:wxHtmlEasyPrinting, footer:wxString|string, pg:int=wxPAGE_ALL) !foreign method "SetFooter",
	GetPrintData     :: (self:wxHtmlEasyPrinting) -> wxPrintData !foreign method "GetPrintData",
	GetPageSetupData :: (self:wxHtmlEasyPrinting) -> wxPageSetupDialogData !foreign method "GetPageSetupData",
}

export wxHtmlPrintout :: !foreign struct {
	using wxPrintout,

	new :: (title:wxString|string="Printout") -> wxHtmlPrintout !foreign lua "wxhtml.wxHtmlPrintout",

	SetFooter   :: (self:wxHtmlPrintout, footer:wxString|string, pg:int=wxPAGE_ALL) !foreign method "SetFooter",
	SetHeader   :: (self:wxHtmlPrintout, header:wxString|string, pg:int=wxPAGE_ALL) !foreign method "SetHeader",
	SetHtmlFile :: (self:wxHtmlPrintout, htmlfile:wxString|string) !foreign method "SetHtmlFile",
	SetHtmlText :: (self:wxHtmlPrintout, html:wxString|string, basepath:wxString|string="", isdir:bool=true) !foreign method "SetHtmlText",
	SetMargins  :: (self:wxHtmlPrintout, top:float=25.2, bottom:float=25.2, left:float=25.2, right:float=25.2, spaces:float=5) !foreign method "SetMargins",
}

export wxHtmlHelpData :: !foreign struct {
	using wxObject,

	new :: () -> wxHtmlHelpData !foreign lua "wxhtml.wxHtmlHelpData",

	AddBook        :: (self:wxHtmlHelpData, book:wxString|string) -> bool !foreign method "AddBook",
	FindPageById   :: (self:wxHtmlHelpData, id:int) -> string !foreign method "FindPageById",
	FindPageByName :: (self:wxHtmlHelpData, page:wxString|string) -> string !foreign method "FindPageByName",
	SetTempDir     :: (self:wxHtmlHelpData, path:wxString|string) !foreign method "SetTempDir",
}

export wxHtmlHelpController :: !foreign struct {
	using wxHelpControllerBase,

	new :: (style:int=wxHF_DEFAULT_STYLE) -> wxHtmlHelpController !foreign lua "wxhtml.wxHtmlHelpController",

	AddBook            :: (self:wxHtmlHelpController, book:wxString|string, show_wait_msg:bool) -> bool !foreign method "AddBook",
	AddBook            :: (self:wxHtmlHelpController, book_file:wxFileName, show_wait_msg:bool) -> bool !foreign method "AddBook",
	Display            :: (self:wxHtmlHelpController, x:wxString|string) !foreign method "Display",
	Display            :: (self:wxHtmlHelpController, id:int) !foreign method "Display",
	DisplayIndex       :: (self:wxHtmlHelpController) !foreign method "DisplayIndex",
	ReadCustomization  :: (self:wxHtmlHelpController, cfg:wxConfigBase, path:wxString|string="") !foreign method "ReadCustomization",
	SetTempDir         :: (self:wxHtmlHelpController, path:wxString|string) !foreign method "SetTempDir",
	SetTitleFormat     :: (self:wxHtmlHelpController, format:wxString|string) !foreign method "SetTitleFormat",
	UseConfig          :: (self:wxHtmlHelpController, config:wxConfigBase, rootpath:wxString|string="") !foreign method "UseConfig",
	WriteCustomization :: (self:wxHtmlHelpController, cfg:wxConfigBase, path:wxString|string="") !foreign method "WriteCustomization",
}
