--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxlua.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxcore_appframe"
!import "wx/wxcore_event"

export wxLUA_MAJOR_VERSION:     int : !foreign lua "wxlua.wxLUA_MAJOR_VERSION"
export wxLUA_MINOR_VERSION:     int : !foreign lua "wxlua.wxLUA_MINOR_VERSION"
export wxLUA_RELEASE_NUMBER:    int : !foreign lua "wxlua.wxLUA_RELEASE_NUMBER"
export wxLUA_SUBRELEASE_NUMBER: int : !foreign lua "wxlua.wxLUA_SUBRELEASE_NUMBER"
export WXLUA_TNONE:             int : !foreign lua "wxlua.WXLUA_TNONE"
export WXLUA_TNIL:              int : !foreign lua "wxlua.WXLUA_TNIL"
export WXLUA_TBOOLEAN:          int : !foreign lua "wxlua.WXLUA_TBOOLEAN"
export WXLUA_TLIGHTUSERDATA:    int : !foreign lua "wxlua.WXLUA_TLIGHTUSERDATA"
export WXLUA_TNUMBER:           int : !foreign lua "wxlua.WXLUA_TNUMBER"
export WXLUA_TSTRING:           int : !foreign lua "wxlua.WXLUA_TSTRING"
export WXLUA_TTABLE:            int : !foreign lua "wxlua.WXLUA_TTABLE"
export WXLUA_TFUNCTION:         int : !foreign lua "wxlua.WXLUA_TFUNCTION"
export WXLUA_TUSERDATA:         int : !foreign lua "wxlua.WXLUA_TUSERDATA"
export WXLUA_TTHREAD:           int : !foreign lua "wxlua.WXLUA_TTHREAD"
export WXLUA_TINTEGER:          int : !foreign lua "wxlua.WXLUA_TINTEGER"
export WXLUA_TCFUNCTION:        int : !foreign lua "wxlua.WXLUA_TCFUNCTION"
export WXLUA_T_MAX:             int : !foreign lua "wxlua.WXLUA_T_MAX"
export LUA_TNONE:               int : !foreign lua "wxlua.LUA_TNONE"
export LUA_TNIL:                int : !foreign lua "wxlua.LUA_TNIL"
export LUA_TBOOLEAN:            int : !foreign lua "wxlua.LUA_TBOOLEAN"
export LUA_TLIGHTUSERDATA:      int : !foreign lua "wxlua.LUA_TLIGHTUSERDATA"
export LUA_TNUMBER:             int : !foreign lua "wxlua.LUA_TNUMBER"
export LUA_TSTRING:             int : !foreign lua "wxlua.LUA_TSTRING"
export LUA_TTABLE:              int : !foreign lua "wxlua.LUA_TTABLE"
export LUA_TFUNCTION:           int : !foreign lua "wxlua.LUA_TFUNCTION"
export LUA_TUSERDATA:           int : !foreign lua "wxlua.LUA_TUSERDATA"
export LUA_TTHREAD:             int : !foreign lua "wxlua.LUA_TTHREAD"
export wxLUA_VERSION_STRING:    string : !foreign lua "wxlua.wxLUA_VERSION_STRING"

export wxLuaMethod_Type :: wxEnum
export WXLUAMETHOD_CONSTRUCTOR:      wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_CONSTRUCTOR"
export WXLUAMETHOD_METHOD:           wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_METHOD"
export WXLUAMETHOD_CFUNCTION:        wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_CFUNCTION"
export WXLUAMETHOD_GETPROP:          wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_GETPROP"
export WXLUAMETHOD_SETPROP:          wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_SETPROP"
export WXLUAMETHOD_STATIC:           wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_STATIC"
export WXLUAMETHOD_DELETE:           wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_DELETE"
export WXLUAMETHOD_CHECKED_OVERLOAD: wxLuaMethod_Type : !foreign lua "wxlua.WXLUAMETHOD_CHECKED_OVERLOAD"

export wxLuaObject_Type :: wxEnum
export wxLUAOBJECT_NONE:     wxLuaObject_Type : !foreign lua "wxlua.wxLUAOBJECT_NONE"
export wxLUAOBJECT_BOOL:     wxLuaObject_Type : !foreign lua "wxlua.wxLUAOBJECT_BOOL"
export wxLUAOBJECT_INT:      wxLuaObject_Type : !foreign lua "wxlua.wxLUAOBJECT_INT"
export wxLUAOBJECT_STRING:   wxLuaObject_Type : !foreign lua "wxlua.wxLUAOBJECT_STRING"
export wxLUAOBJECT_ARRAYINT: wxLuaObject_Type : !foreign lua "wxlua.wxLUAOBJECT_ARRAYINT"

export wxLuaState :: !foreign struct {
	using wxObject,
}

export wxLuaObject :: !foreign struct {
	using wxObject,

	null: wxLuaObject : !foreign lua "wx.NULL",

	!call :: (arg1:any) -> wxLuaObject !foreign lua "wxlua.wxLuaObject",

	SetObject         :: (self:wxLuaObject, arg1:any) !foreign method "SetObject",
	GetObject         :: (self:wxLuaObject) -> any !foreign method "GetObject",
	GetAllocationFlag :: (self:wxLuaObject) -> int !foreign method "GetAllocationFlag",
}

export wxLUA_CHECK_VERSION              :: (major:int, minor:int, release:int) -> bool !foreign lua "wxlua.wxLUA_CHECK_VERSION"
export wxLUA_CHECK_VERSION_FULL         :: (major:int, minor:int, release:int, subrel:int) -> bool !foreign lua "wxlua.wxLUA_CHECK_VERSION_FULL"
export CompileLuaScript                 :: (luaScript:wxString|string, fileName:wxString|string) -> (\return:int, err_msg:string, line_number:int) !foreign lua "wxlua.CompileLuaScript"
export GetTrackedWindowInfo             :: (as_string:bool=false) -> ([]wxTopLevelWindow)|([]string) !foreign lua "wxlua.GetTrackedWindowInfo"
export GetGCUserdataInfo                :: (as_string:bool=false) -> ([]wxLuaUserdata)|([]string) !foreign lua "wxlua.GetGCUserdataInfo"
export GetTrackedObjectInfo             :: (as_string:bool=false) -> ([]wxLuaUserdata)|([]string) !foreign lua "wxlua.GetTrackedObjectInfo"
export GetTrackedEventCallbackInfo      :: (as_string:bool=false) -> ([](event:wxEvent)->void)|([]string) !foreign lua "wxlua.GetTrackedEventCallbackInfo"
export GetTrackedWinDestroyCallbackInfo :: (as_string:bool=false) -> ([]wxLuaUserdata)|([]string) !foreign lua "wxlua.GetTrackedWinDestroyCallbackInfo"
export isgcobject                       :: (object:wxLuaUserdata--[[void*]]) -> bool !foreign lua "wxlua.isgcobject"
export istrackedobject                  :: (object:wxLuaUserdata--[[void*]]) -> bool !foreign lua "wxlua.istrackedobject"
export isrefed                          :: (object:wxLuaUserdata--[[void*]]) -> bool !foreign lua "wxlua.isrefed"
export ungcobject                       :: (object:wxLuaUserdata--[[void*]]) -> bool !foreign lua "wxlua.ungcobject"
export iswxluatype                      :: (luatype:int, wxluaarg_tag:int) -> int !foreign lua "wxlua.iswxluatype"
export \type                             :: (arg1:any) -> (wxlua_typename:string, wxlua_typenum:int, lua_typename:string, lua_typenum:int) !foreign lua "wxlua.type"
export typename                         :: (wxluaarg_tag:int) -> string !foreign lua "wxlua.typename"
export GetBindings                      :: () -> []table--[[wxLuaBinding]] !foreign lua "wxlua.GetBindings"
