--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxbase_base.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxbase_data"

export wxMAJOR_VERSION:     int : !foreign lua "wx.wxMAJOR_VERSION"
export wxMINOR_VERSION:     int : !foreign lua "wx.wxMINOR_VERSION"
export wxRELEASE_NUMBER:    int : !foreign lua "wx.wxRELEASE_NUMBER"
export wxSUBRELEASE_NUMBER: int : !foreign lua "wx.wxSUBRELEASE_NUMBER"
export wxABI_VERSION:       int : !foreign lua "wx.wxABI_VERSION"
export wxVERSION_STRING:    string : !foreign lua "wx.wxVERSION_STRING"
export wxTRACE_MemAlloc:    string : !foreign lua "wx.wxTRACE_MemAlloc"
export wxTRACE_Messages:    string : !foreign lua "wx.wxTRACE_Messages"
export wxTRACE_ResAlloc:    string : !foreign lua "wx.wxTRACE_ResAlloc"
export wxTRACE_RefCount:    string : !foreign lua "wx.wxTRACE_RefCount"
export wxTRACE_OleCalls:    string : !foreign lua "wx.wxTRACE_OleCalls"

export wxOperatingSystemId :: wxEnum
export wxOS_UNKNOWN:        wxOperatingSystemId : !foreign lua "wx.wxOS_UNKNOWN"
export wxOS_MAC_OS:         wxOperatingSystemId : !foreign lua "wx.wxOS_MAC_OS"
export wxOS_MAC_OSX_DARWIN: wxOperatingSystemId : !foreign lua "wx.wxOS_MAC_OSX_DARWIN"
export wxOS_MAC:            wxOperatingSystemId : !foreign lua "wx.wxOS_MAC"
export wxOS_WINDOWS_9X:     wxOperatingSystemId : !foreign lua "wx.wxOS_WINDOWS_9X"
export wxOS_WINDOWS_NT:     wxOperatingSystemId : !foreign lua "wx.wxOS_WINDOWS_NT"
export wxOS_WINDOWS_MICRO:  wxOperatingSystemId : !foreign lua "wx.wxOS_WINDOWS_MICRO"
export wxOS_WINDOWS_CE:     wxOperatingSystemId : !foreign lua "wx.wxOS_WINDOWS_CE"
export wxOS_WINDOWS:        wxOperatingSystemId : !foreign lua "wx.wxOS_WINDOWS"
export wxOS_UNIX_LINUX:     wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_LINUX"
export wxOS_UNIX_FREEBSD:   wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_FREEBSD"
export wxOS_UNIX_OPENBSD:   wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_OPENBSD"
export wxOS_UNIX_NETBSD:    wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_NETBSD"
export wxOS_UNIX_SOLARIS:   wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_SOLARIS"
export wxOS_UNIX_AIX:       wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_AIX"
export wxOS_UNIX_HPUX:      wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX_HPUX"
export wxOS_UNIX:           wxOperatingSystemId : !foreign lua "wx.wxOS_UNIX"
export wxOS_DOS:            wxOperatingSystemId : !foreign lua "wx.wxOS_DOS"
export wxOS_OS2:            wxOperatingSystemId : !foreign lua "wx.wxOS_OS2"

export wxPortId :: wxEnum
export wxPORT_UNKNOWN: wxPortId : !foreign lua "wx.wxPORT_UNKNOWN"
export wxPORT_BASE:    wxPortId : !foreign lua "wx.wxPORT_BASE"
export wxPORT_MSW:     wxPortId : !foreign lua "wx.wxPORT_MSW"
export wxPORT_MOTIF:   wxPortId : !foreign lua "wx.wxPORT_MOTIF"
export wxPORT_GTK:     wxPortId : !foreign lua "wx.wxPORT_GTK"
export wxPORT_MGL:     wxPortId : !foreign lua "wx.wxPORT_MGL"
export wxPORT_X11:     wxPortId : !foreign lua "wx.wxPORT_X11"
export wxPORT_PM:      wxPortId : !foreign lua "wx.wxPORT_PM"
export wxPORT_OS2:     wxPortId : !foreign lua "wx.wxPORT_OS2"
export wxPORT_MAC:     wxPortId : !foreign lua "wx.wxPORT_MAC"
export wxPORT_COCOA:   wxPortId : !foreign lua "wx.wxPORT_COCOA"
export wxPORT_WINCE:   wxPortId : !foreign lua "wx.wxPORT_WINCE"
export wxPORT_PALMOS:  wxPortId : !foreign lua "wx.wxPORT_PALMOS"
export wxPORT_DFB:     wxPortId : !foreign lua "wx.wxPORT_DFB"

export wxArchitecture :: wxEnum
export wxARCH_INVALID: wxArchitecture : !foreign lua "wx.wxARCH_INVALID"
export wxARCH_32:      wxArchitecture : !foreign lua "wx.wxARCH_32"
export wxARCH_64:      wxArchitecture : !foreign lua "wx.wxARCH_64"
export wxARCH_MAX:     wxArchitecture : !foreign lua "wx.wxARCH_MAX"

export wxEndianness :: wxEnum
export wxENDIAN_INVALID: wxEndianness : !foreign lua "wx.wxENDIAN_INVALID"
export wxENDIAN_BIG:     wxEndianness : !foreign lua "wx.wxENDIAN_BIG"
export wxENDIAN_LITTLE:  wxEndianness : !foreign lua "wx.wxENDIAN_LITTLE"
export wxENDIAN_PDP:     wxEndianness : !foreign lua "wx.wxENDIAN_PDP"
export wxENDIAN_MAX:     wxEndianness : !foreign lua "wx.wxENDIAN_MAX"

export wxLOG_FatalError: wxEnum : !foreign lua "wx.wxLOG_FatalError"
export wxLOG_Error:      wxEnum : !foreign lua "wx.wxLOG_Error"
export wxLOG_Warning:    wxEnum : !foreign lua "wx.wxLOG_Warning"
export wxLOG_Message:    wxEnum : !foreign lua "wx.wxLOG_Message"
export wxLOG_Status:     wxEnum : !foreign lua "wx.wxLOG_Status"
export wxLOG_Info:       wxEnum : !foreign lua "wx.wxLOG_Info"
export wxLOG_Debug:      wxEnum : !foreign lua "wx.wxLOG_Debug"
export wxLOG_Trace:      wxEnum : !foreign lua "wx.wxLOG_Trace"
export wxLOG_Progress:   wxEnum : !foreign lua "wx.wxLOG_Progress"
export wxLOG_User:       wxEnum : !foreign lua "wx.wxLOG_User"
export wxLOG_Max:        wxEnum : !foreign lua "wx.wxLOG_Max"

export wxDLFlags :: wxEnum
export wxDL_LAZY:     wxDLFlags : !foreign lua "wx.wxDL_LAZY"
export wxDL_NOW:      wxDLFlags : !foreign lua "wx.wxDL_NOW"
export wxDL_GLOBAL:   wxDLFlags : !foreign lua "wx.wxDL_GLOBAL"
export wxDL_VERBATIM: wxDLFlags : !foreign lua "wx.wxDL_VERBATIM"
export wxDL_NOSHARE:  wxDLFlags : !foreign lua "wx.wxDL_NOSHARE"
export wxDL_DEFAULT:  wxDLFlags : !foreign lua "wx.wxDL_DEFAULT"

export wxDynamicLibraryCategory :: wxEnum
export wxDL_LIBRARY: wxDynamicLibraryCategory : !foreign lua "wx.wxDL_LIBRARY"
export wxDL_MODULE:  wxDynamicLibraryCategory : !foreign lua "wx.wxDL_MODULE"

export wxPluginCategory :: wxEnum
export wxDL_PLUGIN_GUI:  wxPluginCategory : !foreign lua "wx.wxDL_PLUGIN_GUI"
export wxDL_PLUGIN_BASE: wxPluginCategory : !foreign lua "wx.wxDL_PLUGIN_BASE"

export wxRE_EXTENDED: wxEnum : !foreign lua "wx.wxRE_EXTENDED"
export wxRE_BASIC:    wxEnum : !foreign lua "wx.wxRE_BASIC"
export wxRE_ICASE:    wxEnum : !foreign lua "wx.wxRE_ICASE"
export wxRE_NOSUB:    wxEnum : !foreign lua "wx.wxRE_NOSUB"
export wxRE_NEWLINE:  wxEnum : !foreign lua "wx.wxRE_NEWLINE"
export wxRE_DEFAULT:  wxEnum : !foreign lua "wx.wxRE_DEFAULT"

export wxRE_NOTBOL: wxEnum : !foreign lua "wx.wxRE_NOTBOL"
export wxRE_NOTEOL: wxEnum : !foreign lua "wx.wxRE_NOTEOL"

export wxSystemOptions :: !foreign struct {
	using wxObject,

	GetOption    :: (name:wxString|string) -> string !foreign lua "wx.wxSystemOptions.GetOption",
	GetOptionInt :: (name:wxString|string) -> int !foreign lua "wx.wxSystemOptions.GetOptionInt",
	HasOption    :: (name:wxString|string) -> bool !foreign lua "wx.wxSystemOptions.HasOption",
	IsFalse      :: (name:wxString|string) -> bool !foreign lua "wx.wxSystemOptions.IsFalse",
	SetOption    :: (name:wxString|string, value:wxString|string) !foreign lua "wx.wxSystemOptions.SetOption",
	SetOption    :: (name:wxString|string, value:int) !foreign lua "wx.wxSystemOptions.SetOption",
}

export wxPlatformInfo :: !foreign struct {
	using wxLuaUserdata,

	Get                          :: () -> wxPlatformInfo !foreign lua "wx.wxPlatformInfo.Get",
	GetOperatingSystemId         :: (name:wxString|string) -> wxOperatingSystemId !foreign lua "wx.wxPlatformInfo.GetOperatingSystemId",
	GetPortId                    :: (portname:wxString|string) -> wxPortId !foreign lua "wx.wxPlatformInfo.GetPortId",
	GetArch                      :: (arch:wxString|string) -> wxArchitecture !foreign lua "wx.wxPlatformInfo.GetArch",
	GetEndianness                :: (end:wxString|string) -> wxEndianness !foreign lua "wx.wxPlatformInfo.GetEndianness",
	GetOperatingSystemFamilyName :: (os:wxOperatingSystemId) -> string !foreign lua "wx.wxPlatformInfo.GetOperatingSystemFamilyName",
	GetOperatingSystemIdName     :: (os:wxOperatingSystemId) -> string !foreign lua "wx.wxPlatformInfo.GetOperatingSystemIdName",
	GetPortIdName                :: (port:wxPortId, usingUniversal:bool) -> string !foreign lua "wx.wxPlatformInfo.GetPortIdName",
	GetPortIdShortName           :: (port:wxPortId, usingUniversal:bool) -> string !foreign lua "wx.wxPlatformInfo.GetPortIdShortName",
	GetArchName                  :: (arch:wxArchitecture) -> string !foreign lua "wx.wxPlatformInfo.GetArchName",
	GetEndiannessName            :: (end:wxEndianness) -> string !foreign lua "wx.wxPlatformInfo.GetEndiannessName",

	GetOSMajorVersion            :: (self:wxPlatformInfo) -> int !foreign method "GetOSMajorVersion",
	GetOSMinorVersion            :: (self:wxPlatformInfo) -> int !foreign method "GetOSMinorVersion",
	CheckOSVersion               :: (self:wxPlatformInfo, major:int, minor:int) -> bool !foreign method "CheckOSVersion",
	GetToolkitMajorVersion       :: (self:wxPlatformInfo) -> int !foreign method "GetToolkitMajorVersion",
	GetToolkitMinorVersion       :: (self:wxPlatformInfo) -> int !foreign method "GetToolkitMinorVersion",
	CheckToolkitVersion          :: (self:wxPlatformInfo, major:int, minor:int) -> bool !foreign method "CheckToolkitVersion",
	IsUsingUniversalWidgets      :: (self:wxPlatformInfo) -> bool !foreign method "IsUsingUniversalWidgets",
	GetOperatingSystemId         :: (self:wxPlatformInfo) -> wxOperatingSystemId !foreign method "GetOperatingSystemId",
	GetPortId                    :: (self:wxPlatformInfo) -> wxPortId !foreign method "GetPortId",
	GetArchitecture              :: (self:wxPlatformInfo) -> wxArchitecture !foreign method "GetArchitecture",
	GetEndianness                :: (self:wxPlatformInfo) -> wxEndianness !foreign method "GetEndianness",
	GetOperatingSystemFamilyName :: (self:wxPlatformInfo) -> string !foreign method "GetOperatingSystemFamilyName",
	GetOperatingSystemIdName     :: (self:wxPlatformInfo) -> string !foreign method "GetOperatingSystemIdName",
	GetPortIdName                :: (self:wxPlatformInfo) -> string !foreign method "GetPortIdName",
	GetPortIdShortName           :: (self:wxPlatformInfo) -> string !foreign method "GetPortIdShortName",
	GetArchName                  :: (self:wxPlatformInfo) -> string !foreign method "GetArchName",
	GetEndiannessName            :: (self:wxPlatformInfo) -> string !foreign method "GetEndiannessName",
	SetOSVersion                 :: (self:wxPlatformInfo, major:int, minor:int) !foreign method "SetOSVersion",
	SetToolkitVersion            :: (self:wxPlatformInfo, major:int, minor:int) !foreign method "SetToolkitVersion",
	SetOperatingSystemId         :: (self:wxPlatformInfo, n:wxOperatingSystemId) !foreign method "SetOperatingSystemId",
	SetPortId                    :: (self:wxPlatformInfo, n:wxPortId) !foreign method "SetPortId",
	SetArchitecture              :: (self:wxPlatformInfo, n:wxArchitecture) !foreign method "SetArchitecture",
	SetEndianness                :: (self:wxPlatformInfo, n:wxEndianness) !foreign method "SetEndianness",
	IsOk                         :: (self:wxPlatformInfo) -> bool !foreign method "IsOk",
}

export wxSingleInstanceChecker :: !foreign struct {
	using wxLuaUserdata,

	!call :: () -> wxSingleInstanceChecker !foreign lua "wx.wxSingleInstanceChecker",

	Create           :: (self:wxSingleInstanceChecker, name:wxString|string, path:wxString|string="") -> bool !foreign method "Create",
	IsAnotherRunning :: (self:wxSingleInstanceChecker) -> bool !foreign method "IsAnotherRunning",
}

export wxLog :: !foreign struct {
	using wxLuaUserdata,

	IsEnabled             :: () -> bool !foreign lua "wx.wxLog.IsEnabled",
	EnableLogging         :: (doIt:bool=true) -> bool !foreign lua "wx.wxLog.EnableLogging",
	FlushActive           :: () !foreign lua "wx.wxLog.FlushActive",
	GetActiveTarget       :: () -> wxLog !foreign lua "wx.wxLog.GetActiveTarget",
	SetActiveTarget       :: (pLogger:wxLog) -> wxLog !foreign lua "wx.wxLog.SetActiveTarget",
	Suspend               :: () !foreign lua "wx.wxLog.Suspend",
	Resume                :: () !foreign lua "wx.wxLog.Resume",
	SetVerbose            :: (bVerbose:bool=true) !foreign lua "wx.wxLog.SetVerbose",
	SetLogLevel           :: (logLevel:wxLogLevel) !foreign lua "wx.wxLog.SetLogLevel",
	DontCreateOnDemand    :: () !foreign lua "wx.wxLog.DontCreateOnDemand",
	SetRepetitionCounting :: (bRepetCounting:bool=true) !foreign lua "wx.wxLog.SetRepetitionCounting",
	GetRepetitionCounting :: () -> bool !foreign lua "wx.wxLog.GetRepetitionCounting",
	SetTraceMask          :: (ulMask:wxTraceMask) !foreign lua "wx.wxLog.SetTraceMask",
	AddTraceMask          :: (str:wxString|string) !foreign lua "wx.wxLog.AddTraceMask",
	RemoveTraceMask       :: (str:wxString|string) !foreign lua "wx.wxLog.RemoveTraceMask",
	ClearTraceMasks       :: () !foreign lua "wx.wxLog.ClearTraceMasks",
	GetTraceMasks         :: () -> wxArrayString !foreign lua "wx.wxLog.GetTraceMasks",
	SetTimestamp          :: (ts:wxString|string) !foreign lua "wx.wxLog.SetTimestamp",
	GetVerbose            :: () -> bool !foreign lua "wx.wxLog.GetVerbose",
	GetTraceMask          :: () -> wxTraceMask !foreign lua "wx.wxLog.GetTraceMask",
	IsAllowedTraceMask    :: (mask:wxString|string) -> bool !foreign lua "wx.wxLog.IsAllowedTraceMask",
	GetLogLevel           :: () -> wxLogLevel !foreign lua "wx.wxLog.GetLogLevel",
	GetTimestamp          :: () -> string !foreign lua "wx.wxLog.GetTimestamp",

	Flush :: (self:wxLog) !foreign method "Flush",
}

export wxLogBuffer :: !foreign struct {
	using wxLog,

	!call :: () -> wxLogBuffer !foreign lua "wx.wxLogBuffer",

	GetBuffer :: (self:wxLogBuffer) -> string !foreign method "GetBuffer",
}

export wxLogChain :: !foreign struct {
	using wxLog,

	!call :: (logger:wxLog) -> wxLogChain !foreign lua "wx.wxLogChain",

	SetLog            :: (self:wxLogChain, logger:wxLog) !foreign method "SetLog",
	PassMessages      :: (self:wxLogChain, bDoPass:bool) !foreign method "PassMessages",
	IsPassingMessages :: (self:wxLogChain) -> bool !foreign method "IsPassingMessages",
	GetOldLog         :: (self:wxLogChain) -> wxLog !foreign method "GetOldLog",
}

export wxLogNull :: !foreign struct {
	using wxLog,

	!call :: () -> wxLogNull !foreign lua "wx.wxLogNull",
}

export wxLogPassThrough :: !foreign struct {
	using wxLogChain,

	!call :: () -> wxLogPassThrough !foreign lua "wx.wxLogPassThrough",
}

export wxDynamicLibraryDetails :: !foreign struct {
	using wxLuaUserdata,

	GetName    :: (self:wxDynamicLibraryDetails) -> string !foreign method "GetName",
	GetPath    :: (self:wxDynamicLibraryDetails) -> string !foreign method "GetPath",
	GetVersion :: (self:wxDynamicLibraryDetails) -> string !foreign method "GetVersion",
}

export wxDynamicLibraryDetailsArray :: !foreign struct {
	using wxLuaUserdata,

	GetCount :: (self:wxDynamicLibraryDetailsArray) -> int !foreign method "GetCount",
	Item     :: (self:wxDynamicLibraryDetailsArray, n:int) -> wxDynamicLibraryDetails !foreign method "Item",
}

export wxDynamicLibrary :: !foreign struct {
	using wxLuaUserdata,

	!call                  :: () -> wxDynamicLibrary !foreign lua "wx.wxDynamicLibrary",
	!call                  :: (libname:wxString|string, flags:int=wxDL_DEFAULT) -> wxDynamicLibrary !foreign lua "wx.wxDynamicLibrary",
	GetDllExt              :: () -> string !foreign lua "wx.wxDynamicLibrary.GetDllExt",
	ListLoaded             :: () -> wxDynamicLibraryDetailsArray !foreign lua "wx.wxDynamicLibrary.ListLoaded",
	CanonicalizeName       :: (name:wxString|string, cat:wxDynamicLibraryCategory=wxDL_LIBRARY) -> string !foreign lua "wx.wxDynamicLibrary.CanonicalizeName",
	CanonicalizePluginName :: (name:wxString|string, cat:wxPluginCategory=wxDL_PLUGIN_GUI) -> string !foreign lua "wx.wxDynamicLibrary.CanonicalizePluginName",
	GetPluginsDirectory    :: () -> string !foreign lua "wx.wxDynamicLibrary.GetPluginsDirectory",

	IsLoaded  :: (self:wxDynamicLibrary) -> bool !foreign method "IsLoaded",
	Load      :: (self:wxDynamicLibrary, libname:wxString|string, flags:int=wxDL_DEFAULT) -> bool !foreign method "Load",
	Unload    :: (self:wxDynamicLibrary) !foreign method "Unload",
	HasSymbol :: (self:wxDynamicLibrary, name:wxString|string) -> bool !foreign method "HasSymbol",
}

export wxCriticalSection :: !foreign struct {
	using wxLuaUserdata,

	!call :: () -> wxCriticalSection !foreign lua "wx.wxCriticalSection",

	Enter :: (self:wxCriticalSection) !foreign method "Enter",
	Leave :: (self:wxCriticalSection) !foreign method "Leave",
}

export wxCriticalSectionLocker :: !foreign struct {
	using wxLuaUserdata,

	!call :: (cs:wxCriticalSection) -> wxCriticalSectionLocker !foreign lua "wx.wxCriticalSectionLocker",
}

export wxRegEx :: !foreign struct {
	using wxLuaUserdata,

	!call :: () -> wxRegEx !foreign lua "wx.wxRegEx",
	!call :: (expr:wxString|string, flags:int=wxRE_DEFAULT) -> wxRegEx !foreign lua "wx.wxRegEx",

	Compile       :: (self:wxRegEx, pattern:wxString|string, flags:int=wxRE_DEFAULT) -> bool !foreign method "Compile",
	IsValid       :: (self:wxRegEx) -> bool !foreign method "IsValid",
	GetMatch      :: (self:wxRegEx, text:wxString|string, index:int--[[size_t]]=0) -> string !foreign method "GetMatch",
	GetMatch      :: (self:wxRegEx, index:int--[[size_t]]=0) -> bool, int--[[size_t]], int--[[size_t]] !foreign method "GetMatch",
	GetMatchCount :: (self:wxRegEx) -> int--[[size_t]] !foreign method "GetMatchCount",
	Matches       :: (self:wxRegEx, text:wxString|string, flags:int=0) -> bool !foreign method "Matches",
	Replace       :: (self:wxRegEx, text:wxString|string, replacement:wxString|string, maxMatches:int--[[size_t]]=0) -> int, string !foreign method "Replace",
	ReplaceAll    :: (self:wxRegEx, text:wxString|string, replacement:wxString|string) -> int, string !foreign method "ReplaceAll",
	ReplaceFirst  :: (self:wxRegEx, text:wxString|string, replacement:wxString|string) -> int, string !foreign method "ReplaceFirst",
}

export wxCHECK_VERSION         :: (major:int, minor:int, release:int) -> bool !foreign lua "wx.wxCHECK_VERSION"
export wxCHECK_VERSION_FULL    :: (major:int, minor:int, release:int, subrel:int) -> bool !foreign lua "wx.wxCHECK_VERSION_FULL"
export wxHandleFatalExceptions :: (doIt:bool=true) -> bool !foreign lua "wx.wxHandleFatalExceptions"
export wxGetEmailAddress       :: () -> string !foreign lua "wx.wxGetEmailAddress"
export wxGetFreeMemory         :: () -> wxLongLong !foreign lua "wx.wxGetFreeMemory"
export wxGetFullHostName       :: () -> string !foreign lua "wx.wxGetFullHostName"
export wxGetHomeDir            :: () -> string !foreign lua "wx.wxGetHomeDir"
export wxGetHostName           :: () -> string !foreign lua "wx.wxGetHostName"
export wxGetOsDescription      :: () -> string !foreign lua "wx.wxGetOsDescription"
export wxGetOsVersion          :: () -> (version:int, major:int, minor:int) !foreign lua "wx.wxGetOsVersion"
export wxGetUserHome           :: (user:wxString|string="") -> string !foreign lua "wx.wxGetUserHome"
export wxGetUserId             :: () -> string !foreign lua "wx.wxGetUserId"
export wxGetUserName           :: () -> string !foreign lua "wx.wxGetUserName"
export wxGetEnv                :: (var:wxString|string, value:wxString|string) -> bool !foreign lua "wx.wxGetEnv"
export wxSetEnv                :: (var:wxString|string, value:wxString|string) -> bool !foreign lua "wx.wxSetEnv"
export wxUnsetEnv              :: (var:wxString|string) -> bool !foreign lua "wx.wxUnsetEnv"
export wxSysErrorCode          :: () -> int--[[unsigned long]] !foreign lua "wx.wxSysErrorCode"
export wxSysErrorMsg           :: (nErrCode:int--[[unsigned long]]=0) -> string !foreign lua "wx.wxSysErrorMsg"
export wxSafeShowMessage       :: (title:wxString|string, text:wxString|string) !foreign lua "wx.wxSafeShowMessage"
export wxLogError              :: (message:wxString|string) !foreign lua "wx.wxLogError"
export wxLogFatalError         :: (message:wxString|string) !foreign lua "wx.wxLogFatalError"
export wxLogWarning            :: (message:wxString|string) !foreign lua "wx.wxLogWarning"
export wxLogMessage            :: (message:wxString|string) !foreign lua "wx.wxLogMessage"
export wxLogVerbose            :: (message:wxString|string) !foreign lua "wx.wxLogVerbose"
export wxLogSysError           :: (message:wxString|string) !foreign lua "wx.wxLogSysError"
export wxLogDebug              :: (message:wxString|string) !foreign lua "wx.wxLogDebug"
export wxLogTrace              :: (mask:wxString|string, message:wxString|string) !foreign lua "wx.wxLogTrace"
