--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxluasocket.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/wxcore_event"
!import "wx/common"
!import "wx/wxcore_windows"
!import "wx/wxcore_defsutils"

export wxEVT_WXLUA_DEBUGGER_DEBUGGEE_CONNECTED:    wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_DEBUGGEE_CONNECTED" -- EVT_WXLUA_DEBUGGER_DEBUGGEE_CONNECTED(id, fn)
export wxEVT_WXLUA_DEBUGGER_DEBUGGEE_DISCONNECTED: wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_DEBUGGEE_DISCONNECTED" -- EVT_WXLUA_DEBUGGER_DEBUGGEE_DISCONNECTED(id, fn)
export wxEVT_WXLUA_DEBUGGER_BREAK:                 wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_BREAK" -- EVT_WXLUA_DEBUGGER_BREAK(id, fn)
export wxEVT_WXLUA_DEBUGGER_PRINT:                 wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_PRINT" -- EVT_WXLUA_DEBUGGER_PRINT(id, fn)
export wxEVT_WXLUA_DEBUGGER_ERROR:                 wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_ERROR" -- EVT_WXLUA_DEBUGGER_ERROR(id, fn)
export wxEVT_WXLUA_DEBUGGER_EXIT:                  wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_EXIT" -- EVT_WXLUA_DEBUGGER_EXIT(id, fn)
export wxEVT_WXLUA_DEBUGGER_STACK_ENUM:            wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_STACK_ENUM" -- EVT_WXLUA_DEBUGGER_STACK_ENUM(id, fn)
export wxEVT_WXLUA_DEBUGGER_STACK_ENTRY_ENUM:      wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_STACK_ENTRY_ENUM" -- EVT_WXLUA_DEBUGGER_STACK_ENTRY_ENUM(id, fn)
export wxEVT_WXLUA_DEBUGGER_TABLE_ENUM:            wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_TABLE_ENUM" -- EVT_WXLUA_DEBUGGER_TABLE_ENUM(id, fn)
export wxEVT_WXLUA_DEBUGGER_EVALUATE_EXPR:         wxEventType : !foreign lua "wxlua.wxEVT_WXLUA_DEBUGGER_EVALUATE_EXPR" -- EVT_WXLUA_DEBUGGER_EVALUATE_EXPR(id, fn)

export wxLuaDebuggerServer :: !foreign struct {
	using wxEvtHandler,

	!call          :: (portNumber:int) -> wxLuaDebuggerServer !foreign lua "wxlua.wxLuaDebuggerServer",
	GetProgramName :: () -> string !foreign lua "wxlua.wxLuaDebuggerServer.GetProgramName",
	GetNetworkName :: () -> string !foreign lua "wxlua.wxLuaDebuggerServer.GetNetworkName",

	StartServer          :: (self:wxLuaDebuggerServer) -> bool !foreign method "StartServer",
	StopServer           :: (self:wxLuaDebuggerServer) -> bool !foreign method "StopServer",
	StartClient          :: (self:wxLuaDebuggerServer) -> int--[[long]] !foreign method "StartClient",
	AddBreakPoint        :: (self:wxLuaDebuggerServer, fileName:wxString|string, lineNumber:int) -> bool !foreign method "AddBreakPoint",
	RemoveBreakPoint     :: (self:wxLuaDebuggerServer, fileName:wxString|string, lineNumber:int) -> bool !foreign method "RemoveBreakPoint",
	ClearAllBreakPoints  :: (self:wxLuaDebuggerServer) -> bool !foreign method "ClearAllBreakPoints",
	Run                  :: (self:wxLuaDebuggerServer, fileName:wxString|string, buffer:wxString|string) -> bool !foreign method "Run",
	Step                 :: (self:wxLuaDebuggerServer) -> bool !foreign method "Step",
	StepOver             :: (self:wxLuaDebuggerServer) -> bool !foreign method "StepOver",
	StepOut              :: (self:wxLuaDebuggerServer) -> bool !foreign method "StepOut",
	Continue             :: (self:wxLuaDebuggerServer) -> bool !foreign method "Continue",
	Break                :: (self:wxLuaDebuggerServer) -> bool !foreign method "Break",
	Reset                :: (self:wxLuaDebuggerServer) -> bool !foreign method "Reset",
	EvaluateExpr         :: (self:wxLuaDebuggerServer, exprRef:int, expr:wxString|string) -> bool !foreign method "EvaluateExpr",
	DisplayStackDialog   :: (self:wxLuaDebuggerServer, pParent:wxWindow, id:wxWindowID=wxID_ANY) !foreign method "DisplayStackDialog",
	GetDebuggeeProcessId :: (self:wxLuaDebuggerServer) -> int--[[long]] !foreign method "GetDebuggeeProcessId",
	KillDebuggee         :: (self:wxLuaDebuggerServer) -> bool !foreign method "KillDebuggee",
}

export wxLuaDebuggerEvent :: !foreign struct {
	using wxEvent,

	GetLineNumber :: (self:wxLuaDebuggerEvent) -> int !foreign method "GetLineNumber",
	GetReference  :: (self:wxLuaDebuggerEvent) -> int !foreign method "GetReference",
	GetFileName   :: (self:wxLuaDebuggerEvent) -> string !foreign method "GetFileName",
	GetMessage    :: (self:wxLuaDebuggerEvent) -> string !foreign method "GetMessage",
}

export StackDialog :: () !foreign lua "wxlua.StackDialog"
