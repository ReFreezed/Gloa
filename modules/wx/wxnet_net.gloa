--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxnet_net.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxcore_event"
!import "wx/wxbase_file"
!import "wx/wxbase_data"

export wxEVT_SOCKET: wxEventType : !foreign lua "wx.wxEVT_SOCKET" -- EVT_SOCKET(id, func)

export wxSocketError :: wxEnum
export wxSOCKET_NOERROR:    wxSocketError : !foreign lua "wx.wxSOCKET_NOERROR"
export wxSOCKET_INVOP:      wxSocketError : !foreign lua "wx.wxSOCKET_INVOP"
export wxSOCKET_IOERR:      wxSocketError : !foreign lua "wx.wxSOCKET_IOERR"
export wxSOCKET_INVADDR:    wxSocketError : !foreign lua "wx.wxSOCKET_INVADDR"
export wxSOCKET_INVSOCK:    wxSocketError : !foreign lua "wx.wxSOCKET_INVSOCK"
export wxSOCKET_NOHOST:     wxSocketError : !foreign lua "wx.wxSOCKET_NOHOST"
export wxSOCKET_INVPORT:    wxSocketError : !foreign lua "wx.wxSOCKET_INVPORT"
export wxSOCKET_WOULDBLOCK: wxSocketError : !foreign lua "wx.wxSOCKET_WOULDBLOCK"
export wxSOCKET_TIMEDOUT:   wxSocketError : !foreign lua "wx.wxSOCKET_TIMEDOUT"
export wxSOCKET_MEMERR:     wxSocketError : !foreign lua "wx.wxSOCKET_MEMERR"

export wxSocketFlags :: wxEnum
export wxSOCKET_NONE:      wxSocketFlags : !foreign lua "wx.wxSOCKET_NONE"
export wxSOCKET_NOWAIT:    wxSocketFlags : !foreign lua "wx.wxSOCKET_NOWAIT"
export wxSOCKET_WAITALL:   wxSocketFlags : !foreign lua "wx.wxSOCKET_WAITALL"
export wxSOCKET_BLOCK:     wxSocketFlags : !foreign lua "wx.wxSOCKET_BLOCK"
export wxSOCKET_REUSEADDR: wxSocketFlags : !foreign lua "wx.wxSOCKET_REUSEADDR"

export wxSocketNotify :: wxEnum
export wxSOCKET_INPUT:      wxSocketNotify : !foreign lua "wx.wxSOCKET_INPUT"
export wxSOCKET_OUTPUT:     wxSocketNotify : !foreign lua "wx.wxSOCKET_OUTPUT"
export wxSOCKET_CONNECTION: wxSocketNotify : !foreign lua "wx.wxSOCKET_CONNECTION"
export wxSOCKET_LOST:       wxSocketNotify : !foreign lua "wx.wxSOCKET_LOST"

export wxSocketEventFlags :: wxEnum
export wxSOCKET_INPUT_FLAG:      wxSocketEventFlags : !foreign lua "wx.wxSOCKET_INPUT_FLAG"
export wxSOCKET_OUTPUT_FLAG:     wxSocketEventFlags : !foreign lua "wx.wxSOCKET_OUTPUT_FLAG"
export wxSOCKET_CONNECTION_FLAG: wxSocketEventFlags : !foreign lua "wx.wxSOCKET_CONNECTION_FLAG"
export wxSOCKET_LOST_FLAG:       wxSocketEventFlags : !foreign lua "wx.wxSOCKET_LOST_FLAG"

export wxSocketType :: wxEnum
export wxSOCKET_UNINIT:   wxSocketType : !foreign lua "wx.wxSOCKET_UNINIT"
export wxSOCKET_CLIENT:   wxSocketType : !foreign lua "wx.wxSOCKET_CLIENT"
export wxSOCKET_SERVER:   wxSocketType : !foreign lua "wx.wxSOCKET_SERVER"
export wxSOCKET_BASE:     wxSocketType : !foreign lua "wx.wxSOCKET_BASE"
export wxSOCKET_DATAGRAM: wxSocketType : !foreign lua "wx.wxSOCKET_DATAGRAM"

export wxProtocolError :: wxEnum
export wxPROTO_NOERR:     wxProtocolError : !foreign lua "wx.wxPROTO_NOERR"
export wxPROTO_NETERR:    wxProtocolError : !foreign lua "wx.wxPROTO_NETERR"
export wxPROTO_PROTERR:   wxProtocolError : !foreign lua "wx.wxPROTO_PROTERR"
export wxPROTO_CONNERR:   wxProtocolError : !foreign lua "wx.wxPROTO_CONNERR"
export wxPROTO_INVVAL:    wxProtocolError : !foreign lua "wx.wxPROTO_INVVAL"
export wxPROTO_NOHNDLR:   wxProtocolError : !foreign lua "wx.wxPROTO_NOHNDLR"
export wxPROTO_NOFILE:    wxProtocolError : !foreign lua "wx.wxPROTO_NOFILE"
export wxPROTO_ABRT:      wxProtocolError : !foreign lua "wx.wxPROTO_ABRT"
export wxPROTO_RCNCT:     wxProtocolError : !foreign lua "wx.wxPROTO_RCNCT"
export wxPROTO_STREAMING: wxProtocolError : !foreign lua "wx.wxPROTO_STREAMING"

export wxURIHostType :: wxEnum
export wxURI_REGNAME:     wxURIHostType : !foreign lua "wx.wxURI_REGNAME"
export wxURI_IPV4ADDRESS: wxURIHostType : !foreign lua "wx.wxURI_IPV4ADDRESS"
export wxURI_IPV6ADDRESS: wxURIHostType : !foreign lua "wx.wxURI_IPV6ADDRESS"
export wxURI_IPVFUTURE:   wxURIHostType : !foreign lua "wx.wxURI_IPVFUTURE"

export wxURIFieldType :: wxEnum
export wxURI_SCHEME:   wxURIFieldType : !foreign lua "wx.wxURI_SCHEME"
export wxURI_USERINFO: wxURIFieldType : !foreign lua "wx.wxURI_USERINFO"
export wxURI_SERVER:   wxURIFieldType : !foreign lua "wx.wxURI_SERVER"
export wxURI_PORT:     wxURIFieldType : !foreign lua "wx.wxURI_PORT"
export wxURI_PATH:     wxURIFieldType : !foreign lua "wx.wxURI_PATH"
export wxURI_QUERY:    wxURIFieldType : !foreign lua "wx.wxURI_QUERY"
export wxURI_FRAGMENT: wxURIFieldType : !foreign lua "wx.wxURI_FRAGMENT"

export wxURIFlags :: wxEnum
export wxURI_STRICT: wxURIFlags : !foreign lua "wx.wxURI_STRICT"

export wxURLError :: wxEnum
export wxURL_NOERR:    wxURLError : !foreign lua "wx.wxURL_NOERR"
export wxURL_SNTXERR:  wxURLError : !foreign lua "wx.wxURL_SNTXERR"
export wxURL_NOPROTO:  wxURLError : !foreign lua "wx.wxURL_NOPROTO"
export wxURL_NOHOST:   wxURLError : !foreign lua "wx.wxURL_NOHOST"
export wxURL_NOPATH:   wxURLError : !foreign lua "wx.wxURL_NOPATH"
export wxURL_CONNERR:  wxURLError : !foreign lua "wx.wxURL_CONNERR"
export wxURL_PROTOERR: wxURLError : !foreign lua "wx.wxURL_PROTOERR"

export wxSocketBase :: !foreign struct {
	using wxObject,

	Close           :: (self:wxSocketBase) !foreign method "Close",
	Destroy         :: (self:wxSocketBase) -> bool !foreign method "Destroy",
	Discard         :: (self:wxSocketBase) !foreign method "Discard",
	Error           :: (self:wxSocketBase) -> bool !foreign method "Error",
	GetClientData   :: (self:wxSocketBase) -> int--[[voidptr_long]] !foreign method "GetClientData",
	GetLocal        :: (self:wxSocketBase, addr:wxSockAddress) -> bool !foreign method "GetLocal",
	GetFlags        :: (self:wxSocketBase) -> wxSocketFlags !foreign method "GetFlags",
	GetPeer         :: (self:wxSocketBase, addr:wxSockAddress) -> bool !foreign method "GetPeer",
	InterruptWait   :: (self:wxSocketBase) !foreign method "InterruptWait",
	IsConnected     :: (self:wxSocketBase) -> bool !foreign method "IsConnected",
	IsData          :: (self:wxSocketBase) -> bool !foreign method "IsData",
	IsDisconnected  :: (self:wxSocketBase) -> bool !foreign method "IsDisconnected",
	LastCount       :: (self:wxSocketBase) -> int--[[unsigned long]] !foreign method "LastCount",
	LastError       :: (self:wxSocketBase) -> wxSocketError !foreign method "LastError",
	Notify          :: (self:wxSocketBase, notify:bool) !foreign method "Notify",
	Ok              :: (self:wxSocketBase) -> bool !foreign method "Ok",
	RestoreState    :: (self:wxSocketBase) !foreign method "RestoreState",
	SaveState       :: (self:wxSocketBase) !foreign method "SaveState",
	SetClientData   :: (self:wxSocketBase, number:int--[[voidptr_long]]) !foreign method "SetClientData",
	SetEventHandler :: (self:wxSocketBase, handler:wxEvtHandler, id:int=-1) !foreign method "SetEventHandler",
	SetFlags        :: (self:wxSocketBase, flags:wxSocketFlags) !foreign method "SetFlags",
	SetNotify       :: (self:wxSocketBase, flags:wxSocketEventFlags) !foreign method "SetNotify",
	SetTimeout      :: (self:wxSocketBase, seconds:int) !foreign method "SetTimeout",
	Peek            :: (self:wxSocketBase, nbytes:int--[[unsigned long]]) -> string !foreign method "Peek",
	Read            :: (self:wxSocketBase, nbytes:int--[[unsigned long]]) -> string !foreign method "Read",
	ReadMsg         :: (self:wxSocketBase, nbytes:int--[[unsigned long]]) -> string !foreign method "ReadMsg",
	Unread          :: (self:wxSocketBase, str:string) !foreign method "Unread",
	Unread          :: (self:wxSocketBase, arg1:string, nbytes:int--[[unsigned long]]) !foreign method "Unread",
	Wait            :: (self:wxSocketBase, seconds:int--[[long]]=-1, millisecond:int--[[long]]=0) -> bool !foreign method "Wait",
	WaitForLost     :: (self:wxSocketBase, seconds:int--[[long]]=-1, millisecond:int--[[long]]=0) -> bool !foreign method "WaitForLost",
	WaitForRead     :: (self:wxSocketBase, seconds:int--[[long]]=-1, millisecond:int--[[long]]=0) -> bool !foreign method "WaitForRead",
	WaitForWrite    :: (self:wxSocketBase, seconds:int--[[long]]=-1, millisecond:int--[[long]]=0) -> bool !foreign method "WaitForWrite",
	Write           :: (self:wxSocketBase, str:string) !foreign method "Write",
	Write           :: (self:wxSocketBase, arg1:string, nbytes:int--[[unsigned long]]) !foreign method "Write",
	WriteMsg        :: (self:wxSocketBase, str:string) !foreign method "WriteMsg",
	WriteMsg        :: (self:wxSocketBase, arg1:string, nbytes:int--[[unsigned long]]) !foreign method "WriteMsg",
}

export wxSocketClient :: !foreign struct {
	using wxSocketBase,

	!call :: (flags:wxSocketFlags=wxSOCKET_NONE) -> wxSocketClient !foreign lua "wx.wxSocketClient",

	Connect       :: (self:wxSocketClient, address:wxSockAddress, wait:bool=true) -> bool !foreign method "Connect",
	WaitOnConnect :: (self:wxSocketClient, seconds:int--[[long]]=-1, milliseconds:int--[[long]]=0) -> bool !foreign method "WaitOnConnect",
}

export wxSocketServer :: !foreign struct {
	using wxSocketBase,

	!call :: (address:wxSockAddress, flags:wxSocketFlags=wxSOCKET_NONE) -> wxSocketServer !foreign lua "wx.wxSocketServer",

	Accept        :: (self:wxSocketServer, wait:bool=true) -> wxSocketBase !foreign method "Accept",
	AcceptWith    :: (self:wxSocketServer, socket:wxSocketBase, wait:bool=true) -> bool !foreign method "AcceptWith",
	WaitForAccept :: (self:wxSocketServer, seconds:int--[[long]]=-1, millisecond:int--[[long]]=0) -> bool !foreign method "WaitForAccept",
}

export wxSocketEvent :: !foreign struct {
	using wxEvent,

	!call :: (id:int=0) -> wxSocketEvent !foreign lua "wx.wxSocketEvent",

	GetClientData  :: (self:wxSocketEvent) -> int--[[voidptr_long]] !foreign method "GetClientData",
	GetSocket      :: (self:wxSocketEvent) -> wxSocketBase !foreign method "GetSocket",
	GetSocketEvent :: (self:wxSocketEvent) -> wxSocketNotify !foreign method "GetSocketEvent",
}

export wxSockAddress :: !foreign struct {
	using wxObject,

	Clear :: (self:wxSockAddress) !foreign method "Clear",
}

export wxIPaddress :: !foreign struct {
	using wxSockAddress,

	Hostname    :: (self:wxIPaddress, hostname:wxString|string) -> bool !foreign method "Hostname",
	Hostname    :: (self:wxIPaddress) -> string !foreign method "Hostname",
	IPAddress   :: (self:wxIPaddress) -> string !foreign method "IPAddress",
	Service     :: (self:wxIPaddress, service:wxString|string) -> bool !foreign method "Service",
	Service     :: (self:wxIPaddress, service:int--[[unsigned short]]) -> bool !foreign method "Service",
	Service     :: (self:wxIPaddress) -> int--[[unsigned short]] !foreign method "Service",
	AnyAddress  :: (self:wxIPaddress) -> bool !foreign method "AnyAddress",
	LocalHost   :: (self:wxIPaddress) -> bool !foreign method "LocalHost",
	IsLocalHost :: (self:wxIPaddress) -> bool !foreign method "IsLocalHost",
}

export wxIPV4address :: !foreign struct {
	using wxIPaddress,

	!call :: () -> wxIPV4address !foreign lua "wx.wxIPV4address",
	!call :: (other:wxIPV4address) -> wxIPV4address !foreign lua "wx.wxIPV4address",

	Hostname :: (self:wxIPV4address, addr:int--[[unsigned long]]) -> bool !foreign method "Hostname",
}

export wxProtocol :: !foreign struct {
	using wxSocketClient,

	Reconnect      :: (self:wxProtocol) -> bool !foreign method "Reconnect",
	GetInputStream :: (self:wxProtocol, path:wxString|string) -> wxInputStream !foreign method "GetInputStream",
	Abort          :: (self:wxProtocol) -> bool !foreign method "Abort",
	GetError       :: (self:wxProtocol) -> wxProtocolError !foreign method "GetError",
	GetContentType :: (self:wxProtocol) -> string !foreign method "GetContentType",
	SetUser        :: (self:wxProtocol, user:wxString|string) !foreign method "SetUser",
	SetPassword    :: (self:wxProtocol, user:wxString|string) !foreign method "SetPassword",
}

export wxHTTP :: !foreign struct {
	using wxProtocol,

	!call :: () -> wxHTTP !foreign lua "wx.wxHTTP",

	GetResponse :: (self:wxHTTP) -> int !foreign method "GetResponse",
	SetHeader   :: (self:wxHTTP, header:wxString|string, h_data:wxString|string) !foreign method "SetHeader",
	GetHeader   :: (self:wxHTTP, header:wxString|string) -> string !foreign method "GetHeader",
}

export wxFTP :: !foreign struct {
	using wxProtocol,

	TransferMode :: wxEnum,
	NONE:   TransferMode : !foreign lua "wx.wxFTP.NONE",
	ASCII:  TransferMode : !foreign lua "wx.wxFTP.ASCII",
	BINARY: TransferMode : !foreign lua "wx.wxFTP.BINARY",

	!call :: () -> wxFTP !foreign lua "wx.wxFTP",

	CheckCommand    :: (self:wxFTP, command:wxString|string, ret:int--[[char]]) -> bool !foreign method "CheckCommand",
	SendCommand     :: (self:wxFTP, command:wxString|string) -> int--[[char]] !foreign method "SendCommand",
	GetLastResult   :: (self:wxFTP) -> string !foreign method "GetLastResult",
	ChDir           :: (self:wxFTP, dir:wxString|string) -> bool !foreign method "ChDir",
	MkDir           :: (self:wxFTP, dir:wxString|string) -> bool !foreign method "MkDir",
	RmDir           :: (self:wxFTP, dir:wxString|string) -> bool !foreign method "RmDir",
	Pwd             :: (self:wxFTP) -> string !foreign method "Pwd",
	Rename          :: (self:wxFTP, src:wxString|string, dst:wxString|string) -> bool !foreign method "Rename",
	RmFile          :: (self:wxFTP, path:wxString|string) -> bool !foreign method "RmFile",
	SetAscii        :: (self:wxFTP) -> bool !foreign method "SetAscii",
	SetBinary       :: (self:wxFTP) -> bool !foreign method "SetBinary",
	SetPassive      :: (self:wxFTP, pasv:bool) !foreign method "SetPassive",
	SetTransferMode :: (self:wxFTP, mode:wxFTP.TransferMode) -> bool !foreign method "SetTransferMode",
	FileExists      :: (self:wxFTP, filename:wxString|string) -> bool !foreign method "FileExists",
	GetFileSize     :: (self:wxFTP, filename:wxString|string) -> int !foreign method "GetFileSize",
	GetDirList      :: (self:wxFTP, files:wxArrayString|[]string, wildcard:wxString|string="") -> bool !foreign method "GetDirList",
	GetFilesList    :: (self:wxFTP, files:wxArrayString|[]string, wildcard:wxString|string="") -> bool !foreign method "GetFilesList",
	GetOutputStream :: (self:wxFTP, file:wxString|string) -> wxOutputStream !foreign method "GetOutputStream",
}

export wxURI :: !foreign struct {
	using wxObject,

	!call    :: () -> wxURI !foreign lua "wx.wxURI",
	!call    :: (uri:wxString|string) -> wxURI !foreign lua "wx.wxURI",
	!call    :: (uri:wxURI) -> wxURI !foreign lua "wx.wxURI",
	Unescape :: (szEscapedURI:wxString|string) -> string !foreign lua "wx.wxURI.Unescape",

	Create            :: (self:wxURI, uri:wxString|string) -> string !foreign method "Create",
	HasScheme         :: (self:wxURI) -> bool !foreign method "HasScheme",
	HasUserInfo       :: (self:wxURI) -> bool !foreign method "HasUserInfo",
	HasServer         :: (self:wxURI) -> bool !foreign method "HasServer",
	HasPort           :: (self:wxURI) -> bool !foreign method "HasPort",
	HasPath           :: (self:wxURI) -> bool !foreign method "HasPath",
	HasQuery          :: (self:wxURI) -> bool !foreign method "HasQuery",
	HasFragment       :: (self:wxURI) -> bool !foreign method "HasFragment",
	GetScheme         :: (self:wxURI) -> string !foreign method "GetScheme",
	GetPath           :: (self:wxURI) -> string !foreign method "GetPath",
	GetQuery          :: (self:wxURI) -> string !foreign method "GetQuery",
	GetFragment       :: (self:wxURI) -> string !foreign method "GetFragment",
	GetPort           :: (self:wxURI) -> string !foreign method "GetPort",
	GetUserInfo       :: (self:wxURI) -> string !foreign method "GetUserInfo",
	GetServer         :: (self:wxURI) -> string !foreign method "GetServer",
	GetHostType       :: (self:wxURI) -> wxURIHostType !foreign method "GetHostType",
	GetUser           :: (self:wxURI) -> string !foreign method "GetUser",
	GetPassword       :: (self:wxURI) -> string !foreign method "GetPassword",
	BuildURI          :: (self:wxURI) -> string !foreign method "BuildURI",
	BuildUnescapedURI :: (self:wxURI) -> string !foreign method "BuildUnescapedURI",
	Resolve           :: (self:wxURI, base:wxURI, flags:int=wxURI_STRICT) !foreign method "Resolve",
	IsReference       :: (self:wxURI) -> bool !foreign method "IsReference",
}

export wxURL :: !foreign struct {
	using wxURI,

	!call           :: (sUrl:wxString|string) -> wxURL !foreign lua "wx.wxURL",
	!call           :: (url:wxURI) -> wxURL !foreign lua "wx.wxURL",
	SetDefaultProxy :: (url_proxy:wxString|string) !foreign lua "wx.wxURL.SetDefaultProxy",

	GetProtocol    :: (self:wxURL) -> wxProtocol !foreign method "GetProtocol",
	GetError       :: (self:wxURL) -> wxURLError !foreign method "GetError",
	GetURL         :: (self:wxURL) -> string !foreign method "GetURL",
	GetInputStream :: (self:wxURL) -> wxInputStream !foreign method "GetInputStream",
	SetProxy       :: (self:wxURL, url_proxy:wxString|string) !foreign method "SetProxy",
}
