--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxcore_geometry.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxcore_gdi"


export wxOutCode :: wxEnum
export wxInside:    wxOutCode : !foreign lua "wx.wxInside"
export wxOutLeft:   wxOutCode : !foreign lua "wx.wxOutLeft"
export wxOutRight:  wxOutCode : !foreign lua "wx.wxOutRight"
export wxOutTop:    wxOutCode : !foreign lua "wx.wxOutTop"
export wxOutBottom: wxOutCode : !foreign lua "wx.wxOutBottom"

export wxPoint2DInt :: !foreign struct {
	using wxLuaUserdata,

	X: wxInt32,
	Y: wxInt32,

	GetX :: (self:wxPoint2DInt) -> wxInt32 !foreign method "GetX",
	SetX :: (self:wxPoint2DInt, value:wxInt32) !foreign method "SetX",
	GetY :: (self:wxPoint2DInt) -> wxInt32 !foreign method "GetY",
	SetY :: (self:wxPoint2DInt, value:wxInt32) !foreign method "SetY",

	new :: (x,y:wxInt32=0) -> wxPoint2DInt !foreign lua "wx.wxPoint2DInt",
	new :: (pt:wxPoint2DInt) -> wxPoint2DInt !foreign lua "wx.wxPoint2DInt",
	new :: (pt:wxPoint) -> wxPoint2DInt !foreign lua "wx.wxPoint2DInt",

	GetVectorLength   :: (self:wxPoint2DInt) -> wxDouble !foreign method "GetVectorLength",
	GetVectorAngle    :: (self:wxPoint2DInt) -> wxDouble !foreign method "GetVectorAngle",
	SetVectorLength   :: (self:wxPoint2DInt, length:wxDouble) !foreign method "SetVectorLength",
	SetVectorAngle    :: (self:wxPoint2DInt, degrees:wxDouble) !foreign method "SetVectorAngle",
	Normalize         :: (self:wxPoint2DInt) !foreign method "Normalize",
	GetDistance       :: (self:wxPoint2DInt, pt:wxPoint2DInt) -> wxDouble !foreign method "GetDistance",
	GetDistanceSquare :: (self:wxPoint2DInt, pt:wxPoint2DInt) -> wxDouble !foreign method "GetDistanceSquare",
	GetDotProduct     :: (self:wxPoint2DInt, vec:wxPoint2DInt) -> wxInt32 !foreign method "GetDotProduct",
	GetCrossProduct   :: (self:wxPoint2DInt, vec:wxPoint2DInt) -> wxInt32 !foreign method "GetCrossProduct",
}

export wxPoint2DDouble :: !foreign struct {
	using wxLuaUserdata,

	X: wxDouble,
	Y: wxDouble,

	GetX :: (self:wxPoint2DDouble) -> wxDouble !foreign method "GetX",
	SetX :: (self:wxPoint2DDouble, value:wxDouble) !foreign method "SetX",
	GetY :: (self:wxPoint2DDouble) -> wxDouble !foreign method "GetY",
	SetY :: (self:wxPoint2DDouble, value:wxDouble) !foreign method "SetY",

	new :: (x,y:wxDouble=0) -> wxPoint2DDouble !foreign lua "wx.wxPoint2DDouble",
	new :: (pt:wxPoint2DDouble) -> wxPoint2DDouble !foreign lua "wx.wxPoint2DDouble",
	new :: (pt:wxPoint2DInt) -> wxPoint2DDouble !foreign lua "wx.wxPoint2DDouble",
	new :: (pt:wxPoint) -> wxPoint2DDouble !foreign lua "wx.wxPoint2DDouble",

	GetVectorLength   :: (self:wxPoint2DDouble) -> wxDouble !foreign method "GetVectorLength",
	GetVectorAngle    :: (self:wxPoint2DDouble) -> wxDouble !foreign method "GetVectorAngle",
	SetVectorLength   :: (self:wxPoint2DDouble, length:wxDouble) !foreign method "SetVectorLength",
	SetVectorAngle    :: (self:wxPoint2DDouble, degrees:wxDouble) !foreign method "SetVectorAngle",
	GetDistance       :: (self:wxPoint2DDouble, pt:wxPoint2DDouble) -> wxDouble !foreign method "GetDistance",
	GetDistanceSquare :: (self:wxPoint2DDouble, pt:wxPoint2DDouble) -> wxDouble !foreign method "GetDistanceSquare",
	GetDotProduct     :: (self:wxPoint2DDouble, vec:wxPoint2DDouble) -> wxDouble !foreign method "GetDotProduct",
	GetCrossProduct   :: (self:wxPoint2DDouble, vec:wxPoint2DDouble) -> wxDouble !foreign method "GetCrossProduct",
}

export wxRect2DDouble :: !foreign struct {
	using wxLuaUserdata,

	X:      wxDouble,
	Y:      wxDouble,
	Width:  wxDouble,
	Height: wxDouble,

	GetX      :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetX",
	SetX      :: (self:wxRect2DDouble, value:wxDouble) !foreign method "SetX",
	GetY      :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetY",
	SetY      :: (self:wxRect2DDouble, value:wxDouble) !foreign method "SetY",
	GetWidth  :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetWidth",
	SetWidth  :: (self:wxRect2DDouble, value:wxDouble) !foreign method "SetWidth",
	GetHeight :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetHeight",
	SetHeight :: (self:wxRect2DDouble, value:wxDouble) !foreign method "SetHeight",

	new :: (x,y:wxDouble=0, w,h:wxDouble=0) -> wxRect2DDouble !foreign lua "wx.wxRect2DDouble",
	new :: (rect:wxRect2DDouble) -> wxRect2DDouble !foreign lua "wx.wxRect2DDouble",

	GetPosition        :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetPosition",
	GetSize            :: (self:wxRect2DDouble) -> wxSize !foreign method "GetSize",
	GetLeft            :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetLeft",
	SetLeft            :: (self:wxRect2DDouble, n:wxDouble) !foreign method "SetLeft",
	MoveLeftTo         :: (self:wxRect2DDouble, n:wxDouble) !foreign method "MoveLeftTo",
	GetTop             :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetTop",
	SetTop             :: (self:wxRect2DDouble, n:wxDouble) !foreign method "SetTop",
	MoveTopTo          :: (self:wxRect2DDouble, n:wxDouble) !foreign method "MoveTopTo",
	GetBottom          :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetBottom",
	SetBottom          :: (self:wxRect2DDouble, n:wxDouble) !foreign method "SetBottom",
	MoveBottomTo       :: (self:wxRect2DDouble, n:wxDouble) !foreign method "MoveBottomTo",
	GetRight           :: (self:wxRect2DDouble) -> wxDouble !foreign method "GetRight",
	SetRight           :: (self:wxRect2DDouble, n:wxDouble) !foreign method "SetRight",
	MoveRightTo        :: (self:wxRect2DDouble, n:wxDouble) !foreign method "MoveRightTo",
	GetLeftTop         :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetLeftTop",
	SetLeftTop         :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "SetLeftTop",
	MoveLeftTopTo      :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "MoveLeftTopTo",
	GetLeftBottom      :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetLeftBottom",
	SetLeftBottom      :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "SetLeftBottom",
	MoveLeftBottomTo   :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "MoveLeftBottomTo",
	GetRightTop        :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetRightTop",
	SetRightTop        :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "SetRightTop",
	MoveRightTopTo     :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "MoveRightTopTo",
	GetRightBottom     :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetRightBottom",
	SetRightBottom     :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "SetRightBottom",
	MoveRightBottomTo  :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "MoveRightBottomTo",
	GetCentre          :: (self:wxRect2DDouble) -> wxPoint2DDouble !foreign method "GetCentre",
	SetCentre          :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "SetCentre",
	MoveCentreTo       :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "MoveCentreTo",
	GetOutCode         :: (self:wxRect2DDouble, pt:wxPoint2DDouble) -> wxOutCode !foreign method "GetOutCode",
	Contains           :: (self:wxRect2DDouble, pt:wxPoint2DDouble) -> bool !foreign method "Contains",
	Contains           :: (self:wxRect2DDouble, rect:wxRect2DDouble) -> bool !foreign method "Contains",
	IsEmpty            :: (self:wxRect2DDouble) -> bool !foreign method "IsEmpty",
	HaveEqualSize      :: (self:wxRect2DDouble, rect:wxRect2DDouble) -> bool !foreign method "HaveEqualSize",
	Inset              :: (self:wxRect2DDouble, left:wxDouble, top:wxDouble, right:wxDouble, bottom:wxDouble) !foreign method "Inset",
	Offset             :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "Offset",
	ConstrainTo        :: (self:wxRect2DDouble, rect:wxRect2DDouble) !foreign method "ConstrainTo",
	Interpolate        :: (self:wxRect2DDouble, widthfactor:wxInt32, heightfactor:wxInt32) -> wxPoint2DDouble !foreign method "Interpolate",
	Intersect          :: (self:wxRect2DDouble, otherRect:wxRect2DDouble) !foreign method "Intersect",
	CreateIntersection :: (self:wxRect2DDouble, otherRect:wxRect2DDouble) -> wxRect2DDouble !foreign method "CreateIntersection",
	Intersects         :: (self:wxRect2DDouble, rect:wxRect2DDouble) -> bool !foreign method "Intersects",
	Union              :: (self:wxRect2DDouble, otherRect:wxRect2DDouble) !foreign method "Union",
	Union              :: (self:wxRect2DDouble, pt:wxPoint2DDouble) !foreign method "Union",
	CreateUnion        :: (self:wxRect2DDouble, otherRect:wxRect2DDouble) -> wxRect2DDouble !foreign method "CreateUnion",
	Scale              :: (self:wxRect2DDouble, f:wxDouble) !foreign method "Scale",
}

export wxRect2DInt :: !foreign struct {
	using wxLuaUserdata,

	X:      wxInt32,
	Y:      wxInt32,
	Width:  wxInt32,
	Height: wxInt32,

	GetX      :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetX",
	SetX      :: (self:wxRect2DInt, value:wxInt32) !foreign method "SetX",
	GetY      :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetY",
	SetY      :: (self:wxRect2DInt, value:wxInt32) !foreign method "SetY",
	GetWidth  :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetWidth",
	SetWidth  :: (self:wxRect2DInt, value:wxInt32) !foreign method "SetWidth",
	GetHeight :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetHeight",
	SetHeight :: (self:wxRect2DInt, value:wxInt32) !foreign method "SetHeight",

	new :: (x,y:wxInt32=0, w,h:wxInt32=0) -> wxRect2DInt !foreign lua "wx.wxRect2DInt",
	new :: (rect:wxRect2DInt) -> wxRect2DInt !foreign lua "wx.wxRect2DInt",
	new :: (r:wxRect) -> wxRect2DInt !foreign lua "wx.wxRect2DInt",
	new :: (topLeft:wxPoint2DInt, bottomRight:wxPoint2DInt) -> wxRect2DInt !foreign lua "wx.wxRect2DInt",
	new :: (pos:wxPoint2DInt, size:wxSize) -> wxRect2DInt !foreign lua "wx.wxRect2DInt",

	GetPosition        :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetPosition",
	GetSize            :: (self:wxRect2DInt) -> wxSize !foreign method "GetSize",
	GetLeft            :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetLeft",
	SetLeft            :: (self:wxRect2DInt, n:wxInt32) !foreign method "SetLeft",
	MoveLeftTo         :: (self:wxRect2DInt, n:wxInt32) !foreign method "MoveLeftTo",
	GetTop             :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetTop",
	SetTop             :: (self:wxRect2DInt, n:wxInt32) !foreign method "SetTop",
	MoveTopTo          :: (self:wxRect2DInt, n:wxInt32) !foreign method "MoveTopTo",
	GetBottom          :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetBottom",
	SetBottom          :: (self:wxRect2DInt, n:wxInt32) !foreign method "SetBottom",
	MoveBottomTo       :: (self:wxRect2DInt, n:wxInt32) !foreign method "MoveBottomTo",
	GetRight           :: (self:wxRect2DInt) -> wxInt32 !foreign method "GetRight",
	SetRight           :: (self:wxRect2DInt, n:wxInt32) !foreign method "SetRight",
	MoveRightTo        :: (self:wxRect2DInt, n:wxInt32) !foreign method "MoveRightTo",
	GetLeftTop         :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetLeftTop",
	SetLeftTop         :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "SetLeftTop",
	MoveLeftTopTo      :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "MoveLeftTopTo",
	GetLeftBottom      :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetLeftBottom",
	SetLeftBottom      :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "SetLeftBottom",
	MoveLeftBottomTo   :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "MoveLeftBottomTo",
	GetRightTop        :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetRightTop",
	SetRightTop        :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "SetRightTop",
	MoveRightTopTo     :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "MoveRightTopTo",
	GetRightBottom     :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetRightBottom",
	SetRightBottom     :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "SetRightBottom",
	MoveRightBottomTo  :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "MoveRightBottomTo",
	GetCentre          :: (self:wxRect2DInt) -> wxPoint2DInt !foreign method "GetCentre",
	SetCentre          :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "SetCentre",
	MoveCentreTo       :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "MoveCentreTo",
	GetOutCode         :: (self:wxRect2DInt, pt:wxPoint2DInt) -> wxOutCode !foreign method "GetOutCode",
	Contains           :: (self:wxRect2DInt, pt:wxPoint2DInt) -> bool !foreign method "Contains",
	Contains           :: (self:wxRect2DInt, rect:wxRect2DInt) -> bool !foreign method "Contains",
	IsEmpty            :: (self:wxRect2DInt) -> bool !foreign method "IsEmpty",
	HaveEqualSize      :: (self:wxRect2DInt, rect:wxRect2DInt) -> bool !foreign method "HaveEqualSize",
	Inset              :: (self:wxRect2DInt, left:wxInt32, top:wxInt32, right:wxInt32, bottom:wxInt32) !foreign method "Inset",
	Offset             :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "Offset",
	ConstrainTo        :: (self:wxRect2DInt, rect:wxRect2DInt) !foreign method "ConstrainTo",
	Interpolate        :: (self:wxRect2DInt, widthfactor:wxInt32, heightfactor:wxInt32) -> wxPoint2DInt !foreign method "Interpolate",
	Intersect          :: (self:wxRect2DInt, otherRect:wxRect2DInt) !foreign method "Intersect",
	CreateIntersection :: (self:wxRect2DInt, otherRect:wxRect2DInt) -> wxRect2DInt !foreign method "CreateIntersection",
	Intersects         :: (self:wxRect2DInt, rect:wxRect2DInt) -> bool !foreign method "Intersects",
	Union              :: (self:wxRect2DInt, otherRect:wxRect2DInt) !foreign method "Union",
	Union              :: (self:wxRect2DInt, pt:wxPoint2DInt) !foreign method "Union",
	CreateUnion        :: (self:wxRect2DInt, otherRect:wxRect2DInt) -> wxRect2DInt !foreign method "CreateUnion",
	Scale              :: (self:wxRect2DInt, f:wxInt32) !foreign method "Scale",
}
