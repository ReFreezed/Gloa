--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: (generator)
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]


!preload [=[
	local _print = print

	_G.wx = require"wx" -- Adds globals: wx, wxlua, wxaui, wxstc, bit.

	-- wxLua loves making life miserable, so let's undo some damage it has made...
	_G.print = _print
]=]

export time_t       :: int
export wxEnum       :: int
export wxEventType  :: int
export wxFileOffset :: int
export wxWindowID   :: int

export wxLuaUserdata :: !foreign struct {
	delete :: (obj:wxLuaUserdata) !foreign method "delete", -- wxLua adds this method to all class userdata.
}
export wxNULL: wxLuaUserdata : !foreign lua "wx.NULL"

export wxEmptyString: wxString: !foreign lua "wx.wxEmptyString"

export wxTraceMask :: int--[[unsigned long]]
export wxLogLevel  :: int--[[unsigned long]]
export wxTextCoord :: int--[[long]]
export wxInt32     :: int
export wxDouble    :: float--[[double]]

export wxString :: !foreign struct {
	using wxLuaUserdata,

	null: wxString : !foreign lua "wx.NULL",

	new :: (str:wxString|string="") -> wxString !foreign lua "wx.wxString",

	GetData :: (self:wxString) -> string !foreign method "GetData",
}

export wxObject :: !foreign struct {
	using wxLuaUserdata,

	null: wxObject : !foreign lua "wx.NULL",

	new :: () -> wxObject !foreign lua "wx.wxObject",

	DynamicCast  :: (self:wxObject, classname:wxString|string) -> wxObject--[[new class type]] !foreign method "DynamicCast",
	GetClassInfo :: (self:wxObject) -> wxClassInfo !foreign method "GetClassInfo",
	GetRefData   :: (self:wxObject) -> wxObjectRefData !foreign method "GetRefData",
	IsKindOf     :: (self:wxObject, info:wxClassInfo) -> bool !foreign method "IsKindOf",
	IsSameAs     :: (self:wxObject, o:wxObject) -> bool !foreign method "IsSameAs",
	Ref          :: (self:wxObject, clone:wxObject) !foreign method "Ref",
	SetRefData   :: (self:wxObject, data:wxObjectRefData) !foreign method "SetRefData",
	UnRef        :: (self:wxObject) !foreign method "UnRef",
}

export wxObjectRefData :: !foreign struct {
	using wxLuaUserdata,

	GetRefCount :: (self:wxObjectRefData) -> int !foreign method "GetRefCount",
}

export wxClassInfo :: !foreign struct {
	using wxLuaUserdata,

	null: wxClassInfo : !foreign lua "wx.NULL",

	new       :: () -> wxClassInfo !foreign lua "wx.wxClassInfo",
	FindClass :: (name:wxString|string) -> wxClassInfo !foreign lua "wx.wxClassInfo.FindClass",
	GetFirst  :: () -> wxClassInfo !foreign lua "wx.wxClassInfo.GetFirst",

	CreateObject      :: (self:wxClassInfo) -> wxObject !foreign method "CreateObject",
	GetBaseClassName1 :: (self:wxClassInfo) -> string !foreign method "GetBaseClassName1",
	GetBaseClassName2 :: (self:wxClassInfo) -> string !foreign method "GetBaseClassName2",
	GetBaseClass1     :: (self:wxClassInfo) -> wxClassInfo !foreign method "GetBaseClass1",
	GetBaseClass2     :: (self:wxClassInfo) -> wxClassInfo !foreign method "GetBaseClass2",
	GetClassName      :: (self:wxClassInfo) -> string !foreign method "GetClassName",
	GetSize           :: (self:wxClassInfo) -> int !foreign method "GetSize",
	IsDynamic         :: (self:wxClassInfo) -> bool !foreign method "IsDynamic",
	IsKindOf          :: (self:wxClassInfo, info:wxClassInfo) -> bool !foreign method "IsKindOf",
	GetNext           :: (self:wxClassInfo) -> wxClassInfo !foreign method "GetNext",
}

export wxCreateDynamicObject :: (className:wxString|string) -> wxObject !foreign lua "wx.wxCreateDynamicObject"
