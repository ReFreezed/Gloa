--[[============================================================
--=
--=  wxLua/wxWidget bindings for Gl√≥a
--=  Interface source: wxcore_image.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/common"
!import "wx/wxcore_gdi"
!import "wx/wxbase_file"
!import "wx/wxbase_data"

export wxIMAGE_OPTION_QUALITY         :: "quality"
export wxIMAGE_OPTION_FILENAME        :: "FileName"
export wxIMAGE_OPTION_RESOLUTION      :: "Resolution"
export wxIMAGE_OPTION_RESOLUTIONX     :: "ResolutionX"
export wxIMAGE_OPTION_RESOLUTIONY     :: "ResolutionY"
export wxIMAGE_OPTION_RESOLUTIONUNIT  :: "ResolutionUnit"
export wxIMAGE_OPTION_BMP_FORMAT      :: "wxBMP_FORMAT"
export wxIMAGE_OPTION_BITSPERSAMPLE   :: "BitsPerSample"
export wxIMAGE_OPTION_SAMPLESPERPIXEL :: "SamplesPerPixel"
export wxIMAGE_OPTION_COMPRESSION     :: "Compression"
export wxIMAGE_OPTION_IMAGEDESCRIPTOR :: "ImageDescriptor"
export wxIMAGE_ALPHA_TRANSPARENT:          int : !foreign lua "wx.wxIMAGE_ALPHA_TRANSPARENT"
export wxIMAGE_ALPHA_THRESHOLD:            int : !foreign lua "wx.wxIMAGE_ALPHA_THRESHOLD"
export wxIMAGE_ALPHA_OPAQUE:               int : !foreign lua "wx.wxIMAGE_ALPHA_OPAQUE"
export wxQUANTIZE_INCLUDE_WINDOWS_COLOURS: int : !foreign lua "wx.wxQUANTIZE_INCLUDE_WINDOWS_COLOURS"
export wxQUANTIZE_RETURN_8BIT_DATA:        int : !foreign lua "wx.wxQUANTIZE_RETURN_8BIT_DATA"
export wxQUANTIZE_FILL_DESTINATION_IMAGE:  int : !foreign lua "wx.wxQUANTIZE_FILL_DESTINATION_IMAGE"
export wxIMAGE_OPTION_CUR_HOTSPOT_X:       string : !foreign lua "wx.wxIMAGE_OPTION_CUR_HOTSPOT_X"
export wxIMAGE_OPTION_CUR_HOTSPOT_Y:       string : !foreign lua "wx.wxIMAGE_OPTION_CUR_HOTSPOT_Y"
export wxIMAGE_OPTION_PNG_FORMAT:          string : !foreign lua "wx.wxIMAGE_OPTION_PNG_FORMAT"
export wxIMAGE_OPTION_PNG_BITDEPTH:        string : !foreign lua "wx.wxIMAGE_OPTION_PNG_BITDEPTH"
export wxART_TOOLBAR:                      string : !foreign lua "wx.wxART_TOOLBAR"
export wxART_MENU:                         string : !foreign lua "wx.wxART_MENU"
export wxART_FRAME_ICON:                   string : !foreign lua "wx.wxART_FRAME_ICON"
export wxART_CMN_DIALOG:                   string : !foreign lua "wx.wxART_CMN_DIALOG"
export wxART_HELP_BROWSER:                 string : !foreign lua "wx.wxART_HELP_BROWSER"
export wxART_MESSAGE_BOX:                  string : !foreign lua "wx.wxART_MESSAGE_BOX"
export wxART_BUTTON:                       string : !foreign lua "wx.wxART_BUTTON"
export wxART_OTHER:                        string : !foreign lua "wx.wxART_OTHER"
export wxART_ADD_BOOKMARK:                 string : !foreign lua "wx.wxART_ADD_BOOKMARK"
export wxART_DEL_BOOKMARK:                 string : !foreign lua "wx.wxART_DEL_BOOKMARK"
export wxART_HELP_SIDE_PANEL:              string : !foreign lua "wx.wxART_HELP_SIDE_PANEL"
export wxART_HELP_SETTINGS:                string : !foreign lua "wx.wxART_HELP_SETTINGS"
export wxART_HELP_BOOK:                    string : !foreign lua "wx.wxART_HELP_BOOK"
export wxART_HELP_FOLDER:                  string : !foreign lua "wx.wxART_HELP_FOLDER"
export wxART_HELP_PAGE:                    string : !foreign lua "wx.wxART_HELP_PAGE"
export wxART_GO_BACK:                      string : !foreign lua "wx.wxART_GO_BACK"
export wxART_GO_FORWARD:                   string : !foreign lua "wx.wxART_GO_FORWARD"
export wxART_GO_UP:                        string : !foreign lua "wx.wxART_GO_UP"
export wxART_GO_DOWN:                      string : !foreign lua "wx.wxART_GO_DOWN"
export wxART_GO_TO_PARENT:                 string : !foreign lua "wx.wxART_GO_TO_PARENT"
export wxART_GO_HOME:                      string : !foreign lua "wx.wxART_GO_HOME"
export wxART_FILE_OPEN:                    string : !foreign lua "wx.wxART_FILE_OPEN"
export wxART_FILE_SAVE:                    string : !foreign lua "wx.wxART_FILE_SAVE"
export wxART_FILE_SAVE_AS:                 string : !foreign lua "wx.wxART_FILE_SAVE_AS"
export wxART_PRINT:                        string : !foreign lua "wx.wxART_PRINT"
export wxART_HELP:                         string : !foreign lua "wx.wxART_HELP"
export wxART_TIP:                          string : !foreign lua "wx.wxART_TIP"
export wxART_REPORT_VIEW:                  string : !foreign lua "wx.wxART_REPORT_VIEW"
export wxART_LIST_VIEW:                    string : !foreign lua "wx.wxART_LIST_VIEW"
export wxART_NEW_DIR:                      string : !foreign lua "wx.wxART_NEW_DIR"
export wxART_HARDDISK:                     string : !foreign lua "wx.wxART_HARDDISK"
export wxART_FLOPPY:                       string : !foreign lua "wx.wxART_FLOPPY"
export wxART_CDROM:                        string : !foreign lua "wx.wxART_CDROM"
export wxART_REMOVABLE:                    string : !foreign lua "wx.wxART_REMOVABLE"
export wxART_FOLDER:                       string : !foreign lua "wx.wxART_FOLDER"
export wxART_FOLDER_OPEN:                  string : !foreign lua "wx.wxART_FOLDER_OPEN"
export wxART_GO_DIR_UP:                    string : !foreign lua "wx.wxART_GO_DIR_UP"
export wxART_EXECUTABLE_FILE:              string : !foreign lua "wx.wxART_EXECUTABLE_FILE"
export wxART_NORMAL_FILE:                  string : !foreign lua "wx.wxART_NORMAL_FILE"
export wxART_TICK_MARK:                    string : !foreign lua "wx.wxART_TICK_MARK"
export wxART_CROSS_MARK:                   string : !foreign lua "wx.wxART_CROSS_MARK"
export wxART_ERROR:                        string : !foreign lua "wx.wxART_ERROR"
export wxART_QUESTION:                     string : !foreign lua "wx.wxART_QUESTION"
export wxART_WARNING:                      string : !foreign lua "wx.wxART_WARNING"
export wxART_INFORMATION:                  string : !foreign lua "wx.wxART_INFORMATION"
export wxART_MISSING_IMAGE:                string : !foreign lua "wx.wxART_MISSING_IMAGE"
export wxART_COPY:                         string : !foreign lua "wx.wxART_COPY"
export wxART_CUT:                          string : !foreign lua "wx.wxART_CUT"
export wxART_PASTE:                        string : !foreign lua "wx.wxART_PASTE"
export wxART_DELETE:                       string : !foreign lua "wx.wxART_DELETE"
export wxART_NEW:                          string : !foreign lua "wx.wxART_NEW"
export wxART_UNDO:                         string : !foreign lua "wx.wxART_UNDO"
export wxART_REDO:                         string : !foreign lua "wx.wxART_REDO"
export wxART_QUIT:                         string : !foreign lua "wx.wxART_QUIT"
export wxART_FIND:                         string : !foreign lua "wx.wxART_FIND"
export wxART_FIND_AND_REPLACE:             string : !foreign lua "wx.wxART_FIND_AND_REPLACE"
export wxNullImage:                        wxImage : !foreign lua "wx.wxNullImage"

export wxBitmapType :: wxEnum
export wxBITMAP_TYPE_INVALID:            wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_INVALID"
export wxBITMAP_TYPE_BMP:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_BMP"
export wxBITMAP_TYPE_BMP_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_BMP_RESOURCE"
export wxBITMAP_TYPE_RESOURCE:           wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_RESOURCE"
export wxBITMAP_TYPE_ICO:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ICO"
export wxBITMAP_TYPE_ICO_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ICO_RESOURCE"
export wxBITMAP_TYPE_CUR:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_CUR"
export wxBITMAP_TYPE_CUR_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_CUR_RESOURCE"
export wxBITMAP_TYPE_XBM:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_XBM"
export wxBITMAP_TYPE_XBM_DATA:           wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_XBM_DATA"
export wxBITMAP_TYPE_XPM:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_XPM"
export wxBITMAP_TYPE_XPM_DATA:           wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_XPM_DATA"
export wxBITMAP_TYPE_TIF:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_TIF"
export wxBITMAP_TYPE_TIF_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_TIF_RESOURCE"
export wxBITMAP_TYPE_GIF:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_GIF"
export wxBITMAP_TYPE_GIF_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_GIF_RESOURCE"
export wxBITMAP_TYPE_PNG:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PNG"
export wxBITMAP_TYPE_PNG_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PNG_RESOURCE"
export wxBITMAP_TYPE_JPEG:               wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_JPEG"
export wxBITMAP_TYPE_JPEG_RESOURCE:      wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_JPEG_RESOURCE"
export wxBITMAP_TYPE_PNM:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PNM"
export wxBITMAP_TYPE_PNM_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PNM_RESOURCE"
export wxBITMAP_TYPE_PCX:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PCX"
export wxBITMAP_TYPE_PCX_RESOURCE:       wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PCX_RESOURCE"
export wxBITMAP_TYPE_PICT:               wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PICT"
export wxBITMAP_TYPE_PICT_RESOURCE:      wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_PICT_RESOURCE"
export wxBITMAP_TYPE_ICON:               wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ICON"
export wxBITMAP_TYPE_ICON_RESOURCE:      wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ICON_RESOURCE"
export wxBITMAP_TYPE_ANI:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ANI"
export wxBITMAP_TYPE_IFF:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_IFF"
export wxBITMAP_TYPE_TGA:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_TGA"
export wxBITMAP_TYPE_MACCURSOR:          wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_MACCURSOR"
export wxBITMAP_TYPE_MACCURSOR_RESOURCE: wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_MACCURSOR_RESOURCE"
export wxBITMAP_TYPE_ANY:                wxBitmapType : !foreign lua "wx.wxBITMAP_TYPE_ANY"

export wxIMAGE_RESOLUTION_INCHES: wxEnum : !foreign lua "wx.wxIMAGE_RESOLUTION_INCHES"
export wxIMAGE_RESOLUTION_CM:     wxEnum : !foreign lua "wx.wxIMAGE_RESOLUTION_CM"
export wxIMAGE_QUALITY_NORMAL:    wxEnum : !foreign lua "wx.wxIMAGE_QUALITY_NORMAL"
export wxIMAGE_QUALITY_HIGH:      wxEnum : !foreign lua "wx.wxIMAGE_QUALITY_HIGH"

export wxBMP_24BPP:        wxEnum : !foreign lua "wx.wxBMP_24BPP"
export wxBMP_8BPP:         wxEnum : !foreign lua "wx.wxBMP_8BPP"
export wxBMP_8BPP_GREY:    wxEnum : !foreign lua "wx.wxBMP_8BPP_GREY"
export wxBMP_8BPP_GRAY:    wxEnum : !foreign lua "wx.wxBMP_8BPP_GRAY"
export wxBMP_8BPP_RED:     wxEnum : !foreign lua "wx.wxBMP_8BPP_RED"
export wxBMP_8BPP_PALETTE: wxEnum : !foreign lua "wx.wxBMP_8BPP_PALETTE"
export wxBMP_4BPP:         wxEnum : !foreign lua "wx.wxBMP_4BPP"
export wxBMP_1BPP:         wxEnum : !foreign lua "wx.wxBMP_1BPP"
export wxBMP_1BPP_BW:      wxEnum : !foreign lua "wx.wxBMP_1BPP_BW"

export wxPNG_TYPE_COLOUR:   wxEnum : !foreign lua "wx.wxPNG_TYPE_COLOUR"
export wxPNG_TYPE_GREY:     wxEnum : !foreign lua "wx.wxPNG_TYPE_GREY"
export wxPNG_TYPE_GREY_RED: wxEnum : !foreign lua "wx.wxPNG_TYPE_GREY_RED"

export wxImage :: !foreign struct {
	using wxObject,

	!call                :: () -> wxImage !foreign lua "wx.wxImage",
	!call                :: (image:wxImage) -> wxImage !foreign lua "wx.wxImage",
	!call                :: (width,height:int, clear:bool=true) -> wxImage !foreign lua "wx.wxImage",
	!call                :: (name:wxString|string, \type:int--[[long]]=wxBITMAP_TYPE_ANY) -> wxImage !foreign lua "wx.wxImage",
	!call                :: (width,height:int, data:int--[[unsigned char]], static_data:bool=false) -> wxImage !foreign lua "wx.wxImage",
	!call                :: (bitmap:wxBitmap) -> wxImage !foreign lua "wx.wxImage",
	AddHandler           :: (handler:wxImageHandler) !foreign lua "wx.wxImage.AddHandler",
	CleanUpHandlers      :: () !foreign lua "wx.wxImage.CleanUpHandlers",
	FindHandler          :: (name:wxString|string) -> wxImageHandler !foreign lua "wx.wxImage.FindHandler",
	FindHandler          :: (extension:wxString|string, imageType:int--[[long]]) -> wxImageHandler !foreign lua "wx.wxImage.FindHandler",
	FindHandler          :: (imageType:int--[[long]]) -> wxImageHandler !foreign lua "wx.wxImage.FindHandler",
	FindHandlerMime      :: (mimetype:wxString|string) -> wxImageHandler !foreign lua "wx.wxImage.FindHandlerMime",
	GetImageExtWildcard  :: () -> string !foreign lua "wx.wxImage.GetImageExtWildcard",
	GetImageCount        :: (filename:wxString|string, \type:int--[[long]]=wxBITMAP_TYPE_ANY) -> int !foreign lua "wx.wxImage.GetImageCount",
	GetImageCount        :: (stream:wxInputStream, \type:int--[[long]]=wxBITMAP_TYPE_ANY) -> int !foreign lua "wx.wxImage.GetImageCount",
	GetHandlers          :: () -> wxList !foreign lua "wx.wxImage.GetHandlers",
	InitStandardHandlers :: () !foreign lua "wx.wxImage.InitStandardHandlers",
	InsertHandler        :: (handler:wxImageHandler) !foreign lua "wx.wxImage.InsertHandler",
	RemoveHandler        :: (name:wxString|string) -> bool !foreign lua "wx.wxImage.RemoveHandler",

	Blur                  :: (self:wxImage, radius:int) -> wxImage !foreign method "Blur",
	BlurHorizontal        :: (self:wxImage, radius:int) -> wxImage !foreign method "BlurHorizontal",
	BlurVertical          :: (self:wxImage, radius:int) -> wxImage !foreign method "BlurVertical",
	ComputeHistogram      :: (self:wxImage, histogram:wxImageHistogram) -> int--[[unsigned long]] !foreign method "ComputeHistogram",
	ConvertToGreyscale    :: (self:wxImage, lr:float--[[double]]=0.299, lg:float--[[double]]=0.587, lb:float--[[double]]=0.114) -> wxImage !foreign method "ConvertToGreyscale",
	ConvertToMono         :: (self:wxImage, r,g,b:int--[[unsigned char]]) -> wxImage !foreign method "ConvertToMono",
	Copy                  :: (self:wxImage) -> wxImage !foreign method "Copy",
	Create                :: (self:wxImage, width,height:int, clear:bool=true) !foreign method "Create",
	Destroy               :: (self:wxImage) !foreign method "Destroy",
	FindFirstUnusedColour :: (self:wxImage, startR:int--[[unsigned char]]=1, startG:int--[[unsigned char]]=0, startB:int--[[unsigned char]]=0) -> bool, int--[[uchar]], int--[[uchar]], int--[[char]] !foreign method "FindFirstUnusedColour",
	GetAlpha              :: (self:wxImage, x,y:int) -> int--[[unsigned char]] !foreign method "GetAlpha",
	GetBlue               :: (self:wxImage, x,y:int) -> int--[[unsigned char]] !foreign method "GetBlue",
	GetData               :: (self:wxImage) -> string !foreign method "GetData",
	GetGreen              :: (self:wxImage, x,y:int) -> int--[[unsigned char]] !foreign method "GetGreen",
	GetHeight             :: (self:wxImage) -> int !foreign method "GetHeight",
	GetMaskBlue           :: (self:wxImage) -> int--[[unsigned char]] !foreign method "GetMaskBlue",
	GetMaskGreen          :: (self:wxImage) -> int--[[unsigned char]] !foreign method "GetMaskGreen",
	GetMaskRed            :: (self:wxImage) -> int--[[unsigned char]] !foreign method "GetMaskRed",
	GetOrFindMaskColour   :: (self:wxImage) -> bool, int--[[uchar]], int--[[uchar]], int--[[uchar]] !foreign method "GetOrFindMaskColour",
	GetPalette            :: (self:wxImage) -> wxPalette !foreign method "GetPalette",
	GetRed                :: (self:wxImage, x,y:int) -> int--[[unsigned char]] !foreign method "GetRed",
	GetSubImage           :: (self:wxImage, rect:wxRect) -> wxImage !foreign method "GetSubImage",
	GetWidth              :: (self:wxImage) -> int !foreign method "GetWidth",
	HSVtoRGB              :: (self:wxImage, h,s,v:float--[[double]]) -> (r:int--[[uchar]], g:int--[[uchar]], b:int--[[uchar]]) !foreign method "HSVtoRGB",
	RGBtoHSV              :: (self:wxImage, r,g,b:int--[[unsigned char]]) -> (h:float--[[double]], s:float--[[double]], v:float--[[double]]) !foreign method "RGBtoHSV",
	HasAlpha              :: (self:wxImage) -> bool !foreign method "HasAlpha",
	HasMask               :: (self:wxImage) -> bool !foreign method "HasMask",
	GetOption             :: (self:wxImage, name:wxString|string) -> string !foreign method "GetOption",
	GetOptionInt          :: (self:wxImage, name:wxString|string) -> int !foreign method "GetOptionInt",
	HasOption             :: (self:wxImage, name:wxString|string) -> int !foreign method "HasOption",
	InitAlpha             :: (self:wxImage) !foreign method "InitAlpha",
	IsTransparent         :: (self:wxImage, x,y:int, threshold:int--[[unsigned char]]=128) -> bool !foreign method "IsTransparent",
	LoadFile              :: (self:wxImage, name:wxString|string, \type:int--[[long]]=wxBITMAP_TYPE_ANY, index:int=-1) -> bool !foreign method "LoadFile",
	LoadFile              :: (self:wxImage, name:wxString|string, mimetype:wxString|string, index:int=-1) -> bool !foreign method "LoadFile",
	LoadFile              :: (self:wxImage, stream:wxInputStream, \type:int--[[long]]=wxBITMAP_TYPE_ANY, index:int=-1) -> bool !foreign method "LoadFile",
	LoadFile              :: (self:wxImage, stream:wxInputStream, mimetype:wxString|string, index:int=-1) -> bool !foreign method "LoadFile",
	Ok                    :: (self:wxImage) -> bool !foreign method "Ok",
	Mirror                :: (self:wxImage, horizontally:bool=true) -> wxImage !foreign method "Mirror",
	Replace               :: (self:wxImage, r1,g1,b1:int--[[unsigned char]], r2,g2,b2:int--[[unsigned char]]) !foreign method "Replace",
	ResampleBox           :: (self:wxImage, width,height:int) -> wxImage !foreign method "ResampleBox",
	ResampleBicubic       :: (self:wxImage, width,height:int) -> wxImage !foreign method "ResampleBicubic",
	Rescale               :: (self:wxImage, width,height:int, quality:int=wxIMAGE_QUALITY_NORMAL) -> wxImage !foreign method "Rescale",
	Resize                :: (self:wxImage, size:wxSize, pos:wxPoint, red:int=-1, green:int=-1, blue:int=-1) -> wxImage !foreign method "Resize",
	Rotate                :: (self:wxImage, angle:float--[[double]], rotationCentre:wxPoint, interpolating:bool=true, offsetAfterRotation:wxPoint=wxPoint.null) -> wxImage !foreign method "Rotate",
	RotateHue             :: (self:wxImage, angle:float--[[double]]) !foreign method "RotateHue",
	Rotate90              :: (self:wxImage, clockwise:bool=true) -> wxImage !foreign method "Rotate90",
	SaveFile              :: (self:wxImage, name:wxString|string) -> bool !foreign method "SaveFile",
	SaveFile              :: (self:wxImage, name:wxString|string, \type:int) -> bool !foreign method "SaveFile",
	SaveFile              :: (self:wxImage, name:wxString|string, mimetype:wxString|string) -> bool !foreign method "SaveFile",
	Scale                 :: (self:wxImage, width,height:int, quality:int=wxIMAGE_QUALITY_NORMAL) -> wxImage !foreign method "Scale",
	Size                  :: (self:wxImage, size:wxSize, pos:wxPoint, red:int=-1, green:int=-1, blue:int=-1) -> wxImage !foreign method "Size",
	SetAlpha              :: (self:wxImage, x,y:int, alpha:int--[[unsigned char]]) !foreign method "SetAlpha",
	SetAlpha              :: (self:wxImage, str:string) !foreign method "SetAlpha",
	SetData               :: (self:wxImage, str:string) !foreign method "SetData",
	SetMask               :: (self:wxImage, hasMask:bool=true) !foreign method "SetMask",
	SetMaskColour         :: (self:wxImage, red:int--[[unsigned char]], blue:int--[[unsigned char]], green:int--[[unsigned char]]) !foreign method "SetMaskColour",
	SetMaskFromImage      :: (self:wxImage, mask:wxImage, mr:int--[[unsigned char]], mg:int--[[unsigned char]], mb:int--[[unsigned char]]) -> bool !foreign method "SetMaskFromImage",
	SetOption             :: (self:wxImage, name:wxString|string, value:wxString|string) !foreign method "SetOption",
	SetOption             :: (self:wxImage, name:wxString|string, value:int) !foreign method "SetOption",
	SetPalette            :: (self:wxImage, palette:wxPalette) !foreign method "SetPalette",
	SetRGB                :: (self:wxImage, x,y:int, red:int--[[unsigned char]], green:int--[[unsigned char]], blue:int--[[unsigned char]]) !foreign method "SetRGB",
	SetRGB                :: (self:wxImage, rect:wxRect, red:int--[[unsigned char]], green:int--[[unsigned char]], blue:int--[[unsigned char]]) !foreign method "SetRGB",
}

export wxImageHistogramEntry :: !foreign struct {
	using wxLuaUserdata,

	index: int--[[unsigned long]],
	value: int--[[unsigned long]],

	!call :: () -> wxImageHistogramEntry !foreign lua "wx.wxImageHistogramEntry",
}

export wxImageHistogram :: !foreign struct {
	using wxLuaUserdata,

	iterator :: !foreign struct {
		using wxLuaUserdata,

		first:  int--[[long]],
		second: wxImageHistogramEntry,
	},

	!call   :: () -> wxImageHistogram !foreign lua "wx.wxImageHistogram",
	MakeKey :: (r,g,b:int--[[unsigned char]]) -> int--[[unsigned long]] !foreign lua "wx.wxImageHistogram.MakeKey",

	begin :: (self:wxImageHistogram) -> wxImageHistogram.iterator !foreign method "begin",
	clear :: (self:wxImageHistogram) !foreign method "clear",
	count :: (self:wxImageHistogram, key:int--[[long]]) -> int--[[size_t]] !foreign method "count",
	empty :: (self:wxImageHistogram) -> bool !foreign method "empty",
	end   :: (self:wxImageHistogram) -> wxImageHistogram.iterator !foreign method "end",
	erase :: (self:wxImageHistogram, key:int--[[long]]) -> int--[[size_t]] !foreign method "erase",
	find  :: (self:wxImageHistogram, key:int--[[long]]) -> wxImageHistogram.iterator !foreign method "find",
	size  :: (self:wxImageHistogram) -> int--[[size_t]] !foreign method "size",
}

export wxQuantize :: !foreign struct {
	using wxObject,

	Quantize :: (self:wxQuantize, src:wxImage, dest:wxImage, desiredNoColours:int=236, flags:int=0--[[bitwise(wxQUANTIZE_INCLUDE_WINDOWS_COLOURS|wxQUANTIZE_FILL_DESTINATION_IMAGE|wxQUANTIZE_RETURN_8BIT_DATA)]]) -> bool !foreign method "Quantize",
}

export wxImageHandler :: !foreign struct {
	using wxObject,

	GetName       :: (self:wxImageHandler) -> string !foreign method "GetName",
	GetExtension  :: (self:wxImageHandler) -> string !foreign method "GetExtension",
	GetImageCount :: (self:wxImageHandler, stream:wxInputStream) -> int !foreign method "GetImageCount",
	GetType       :: (self:wxImageHandler) -> int--[[long]] !foreign method "GetType",
	GetMimeType   :: (self:wxImageHandler) -> string !foreign method "GetMimeType",
	LoadFile      :: (self:wxImageHandler, image:wxImage, stream:wxInputStream, verbose:bool=true, index:int=0) -> bool !foreign method "LoadFile",
	SaveFile      :: (self:wxImageHandler, image:wxImage, stream:wxOutputStream) -> bool !foreign method "SaveFile",
	SetName       :: (self:wxImageHandler, name:wxString|string) !foreign method "SetName",
	SetExtension  :: (self:wxImageHandler, extension:wxString|string) !foreign method "SetExtension",
	SetMimeType   :: (self:wxImageHandler, mimetype:wxString|string) !foreign method "SetMimeType",
	SetType       :: (self:wxImageHandler, \type:int--[[long]]) !foreign method "SetType",
}

export wxBMPHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxBMPHandler !foreign lua "wx.wxBMPHandler",
}

export wxICOHandler :: !foreign struct {
	using wxBMPHandler,

	!call :: () -> wxICOHandler !foreign lua "wx.wxICOHandler",
}

export wxCURHandler :: !foreign struct {
	using wxICOHandler,

	!call :: () -> wxCURHandler !foreign lua "wx.wxCURHandler",
}

export wxANIHandler :: !foreign struct {
	using wxCURHandler,

	!call :: () -> wxANIHandler !foreign lua "wx.wxANIHandler",
}

export wxIFFHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxIFFHandler !foreign lua "wx.wxIFFHandler",
}

export wxGIFHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxGIFHandler !foreign lua "wx.wxGIFHandler",
}

export wxJPEGHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxJPEGHandler !foreign lua "wx.wxJPEGHandler",
}

export wxPCXHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxPCXHandler !foreign lua "wx.wxPCXHandler",
}

export wxPNGHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxPNGHandler !foreign lua "wx.wxPNGHandler",
}

export wxPNMHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxPNMHandler !foreign lua "wx.wxPNMHandler",
}

export wxTIFFHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxTIFFHandler !foreign lua "wx.wxTIFFHandler",
}

export wxTGAHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxTGAHandler !foreign lua "wx.wxTGAHandler",
}

export wxXPMHandler :: !foreign struct {
	using wxImageHandler,

	!call :: () -> wxXPMHandler !foreign lua "wx.wxXPMHandler",
}

export wxArtProvider :: !foreign struct {
	using wxObject,

	Push        :: (provider:wxArtProvider) !foreign lua "wx.wxArtProvider.Push",
	Insert      :: (provider:wxArtProvider) !foreign lua "wx.wxArtProvider.Insert",
	Pop         :: () -> bool !foreign lua "wx.wxArtProvider.Pop",
	Remove      :: (provider:wxArtProvider) -> bool !foreign lua "wx.wxArtProvider.Remove",
	Delete      :: (provider:wxArtProvider) -> bool !foreign lua "wx.wxArtProvider.Delete",
	GetBitmap   :: (id:wxString|string, client:wxString|string=wxART_OTHER, size:wxSize=wxDefaultSize) -> wxBitmap !foreign lua "wx.wxArtProvider.GetBitmap",
	GetIcon     :: (id:wxString|string, client:wxString|string=wxART_OTHER, size:wxSize=wxDefaultSize) -> wxIcon !foreign lua "wx.wxArtProvider.GetIcon",
	GetSizeHint :: (client:wxString|string, platform_dependent:bool=false) -> wxSize !foreign lua "wx.wxArtProvider.GetSizeHint",
}

export wxLuaArtProvider :: !foreign struct {
	using wxArtProvider,

	!call :: () -> wxLuaArtProvider !foreign lua "wx.wxLuaArtProvider",

	DoGetSizeHint :: (self:wxLuaArtProvider, client:wxString|string) -> wxSize !foreign method "DoGetSizeHint",
	CreateBitmap  :: (self:wxLuaArtProvider, id:wxString|string, client:wxString|string, size:wxSize) -> wxBitmap !foreign method "CreateBitmap",
}
