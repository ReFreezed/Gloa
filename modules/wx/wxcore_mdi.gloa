--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxcore_mdi.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/wxcore_windows"
!import "wx/wxcore_appframe"
!import "wx/common"
!import "wx/wxcore_gdi"
!import "wx/wxcore_menutool"
!import "wx/wxcore_defsutils"
!import "wx/wxcore_event"
!import "wx/wxbase_config"
!import "wx/wxbase_data"
!import "wx/wxcore_print"

export wxDEFAULT_DOCMAN_FLAGS:   int : !foreign lua "wx.wxDEFAULT_DOCMAN_FLAGS"
export wxDOC_NEW:                int : !foreign lua "wx.wxDOC_NEW"
export wxDOC_SILENT:             int : !foreign lua "wx.wxDOC_SILENT"
export wxTEMPLATE_VISIBLE:       int : !foreign lua "wx.wxTEMPLATE_VISIBLE"
export wxTEMPLATE_INVISIBLE:     int : !foreign lua "wx.wxTEMPLATE_INVISIBLE"
export wxDEFAULT_TEMPLATE_FLAGS: int : !foreign lua "wx.wxDEFAULT_TEMPLATE_FLAGS"

export wxMDIClientWindow :: !foreign struct {
	using wxWindow,
}

export wxMDIParentFrame :: !foreign struct {
	using wxFrame,

	!call :: () -> wxMDIParentFrame !foreign lua "wx.wxMDIParentFrame",
	!call :: (parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxDEFAULT_FRAME_STYLE|wxVSCROLL|wxHSCROLL)]], name:wxString|string="wxMDIParentFrame") -> wxMDIParentFrame !foreign lua "wx.wxMDIParentFrame",

	Create           :: (self:wxMDIParentFrame, parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=0--[[bitwise(wxDEFAULT_FRAME_STYLE|wxVSCROLL|wxHSCROLL)]], name:wxString|string="wxMDIParentFrame") -> bool !foreign method "Create",
	ActivateNext     :: (self:wxMDIParentFrame) !foreign method "ActivateNext",
	ActivatePrevious :: (self:wxMDIParentFrame) !foreign method "ActivatePrevious",
	ArrangeIcons     :: (self:wxMDIParentFrame) !foreign method "ArrangeIcons",
	Cascade          :: (self:wxMDIParentFrame) !foreign method "Cascade",
	GetActiveChild   :: (self:wxMDIParentFrame) -> wxMDIChildFrame !foreign method "GetActiveChild",
	GetClientWindow  :: (self:wxMDIParentFrame) -> wxMDIClientWindow !foreign method "GetClientWindow",
	GetWindowMenu    :: (self:wxMDIParentFrame) -> wxMenu !foreign method "GetWindowMenu",
	SetWindowMenu    :: (self:wxMDIParentFrame, menu:wxMenu) !foreign method "SetWindowMenu",
	Tile             :: (self:wxMDIParentFrame, orient:wxOrientation=wxHORIZONTAL) !foreign method "Tile",
}

export wxMDIChildFrame :: !foreign struct {
	using wxFrame,

	!call :: () -> wxMDIChildFrame !foreign lua "wx.wxMDIChildFrame",
	!call :: (parent:wxMDIParentFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxMDIChildFrame") -> wxMDIChildFrame !foreign lua "wx.wxMDIChildFrame",

	Create   :: (self:wxMDIChildFrame, parent:wxMDIParentFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxMDIChildFrame") -> bool !foreign method "Create",
	Activate :: (self:wxMDIChildFrame) !foreign method "Activate",
	Maximize :: (self:wxMDIChildFrame) !foreign method "Maximize",
	Restore  :: (self:wxMDIChildFrame) !foreign method "Restore",
}

export wxDocMDIParentFrame :: !foreign struct {
	using wxMDIParentFrame,

	!call :: () -> wxDocMDIParentFrame !foreign lua "wx.wxDocMDIParentFrame",
	!call :: (manager:wxDocManager, parent:wxFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocMDIParentFrame") -> wxDocMDIParentFrame !foreign lua "wx.wxDocMDIParentFrame",

	Create             :: (self:wxDocMDIParentFrame, manager:wxDocManager, parent:wxFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocMDIParentFrame") -> bool !foreign method "Create",
	GetDocumentManager :: (self:wxDocMDIParentFrame) -> wxDocManager !foreign method "GetDocumentManager",
}

export wxDocMDIChildFrame :: !foreign struct {
	using wxMDIChildFrame,

	!call :: () -> wxDocMDIChildFrame !foreign lua "wx.wxDocMDIChildFrame",
	!call :: (doc:wxDocument, view:wxView, frame:wxMDIParentFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, type:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocMDIChildFrame") -> wxDocMDIChildFrame !foreign lua "wx.wxDocMDIChildFrame",

	Create      :: (self:wxDocMDIChildFrame, doc:wxDocument, view:wxView, frame:wxMDIParentFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, type:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocMDIChildFrame") -> bool !foreign method "Create",
	GetDocument :: (self:wxDocMDIChildFrame) -> wxDocument !foreign method "GetDocument",
	GetView     :: (self:wxDocMDIChildFrame) -> wxView !foreign method "GetView",
	SetDocument :: (self:wxDocMDIChildFrame, doc:wxDocument) !foreign method "SetDocument",
	SetView     :: (self:wxDocMDIChildFrame, view:wxView) !foreign method "SetView",
}

export wxDocChildFrame :: !foreign struct {
	using wxFrame,

	!call :: (doc:wxDocument, view:wxView, parent:wxFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocChildFrame") -> wxDocChildFrame !foreign lua "wx.wxDocChildFrame",

	GetDocument :: (self:wxDocChildFrame) -> wxDocument !foreign method "GetDocument",
	GetView     :: (self:wxDocChildFrame) -> wxView !foreign method "GetView",
	SetDocument :: (self:wxDocChildFrame, doc:wxDocument) !foreign method "SetDocument",
	SetView     :: (self:wxDocChildFrame, view:wxView) !foreign method "SetView",
}

export wxDocManager :: !foreign struct {
	using wxEvtHandler,

	!call :: (flags:int--[[long]]=wxDEFAULT_DOCMAN_FLAGS, initialize:bool=true) -> wxDocManager !foreign lua "wx.wxDocManager",

	ActivateView              :: (self:wxDocManager, view:wxView, activate:bool) !foreign method "ActivateView",
	AddDocument               :: (self:wxDocManager, doc:wxDocument) !foreign method "AddDocument",
	AddFileToHistory          :: (self:wxDocManager, filename:wxString|string) !foreign method "AddFileToHistory",
	AssociateTemplate         :: (self:wxDocManager, temp:wxDocTemplate) !foreign method "AssociateTemplate",
	CloseDocuments            :: (self:wxDocManager, force:bool=true) -> bool !foreign method "CloseDocuments",
	CreateDocument            :: (self:wxDocManager, path:wxString|string, flags:int--[[long]]) -> wxDocument !foreign method "CreateDocument",
	CreateView                :: (self:wxDocManager, doc:wxDocument, flags:int--[[long]]) -> wxView !foreign method "CreateView",
	DisassociateTemplate      :: (self:wxDocManager, temp:wxDocTemplate) !foreign method "DisassociateTemplate",
	FileHistoryAddFilesToMenu :: (self:wxDocManager) !foreign method "FileHistoryAddFilesToMenu",
	FileHistoryAddFilesToMenu :: (self:wxDocManager, menu:wxMenu) !foreign method "FileHistoryAddFilesToMenu",
	FileHistoryLoad           :: (self:wxDocManager, config:wxConfigBase) !foreign method "FileHistoryLoad",
	FileHistoryRemoveMenu     :: (self:wxDocManager, menu:wxMenu) !foreign method "FileHistoryRemoveMenu",
	FileHistorySave           :: (self:wxDocManager, resourceFile:wxConfigBase) !foreign method "FileHistorySave",
	FileHistoryUseMenu        :: (self:wxDocManager, menu:wxMenu) !foreign method "FileHistoryUseMenu",
	FindTemplateForPath       :: (self:wxDocManager, path:wxString|string) -> wxDocTemplate !foreign method "FindTemplateForPath",
	GetCurrentDocument        :: (self:wxDocManager) -> wxDocument !foreign method "GetCurrentDocument",
	GetCurrentView            :: (self:wxDocManager) -> wxView !foreign method "GetCurrentView",
	GetDocuments              :: (self:wxDocManager) -> wxList !foreign method "GetDocuments",
	GetFileHistory            :: (self:wxDocManager) -> wxFileHistory !foreign method "GetFileHistory",
	GetLastDirectory          :: (self:wxDocManager) -> string !foreign method "GetLastDirectory",
	GetMaxDocsOpen            :: (self:wxDocManager) -> int !foreign method "GetMaxDocsOpen",
	GetHistoryFilesCount      :: (self:wxDocManager) -> int--[[size_t]] !foreign method "GetHistoryFilesCount",
	GetTemplates              :: (self:wxDocManager) -> wxList !foreign method "GetTemplates",
	Initialize                :: (self:wxDocManager) -> bool !foreign method "Initialize",
	MakeDefaultName           :: (self:wxDocManager, buf:wxString|string) -> bool, string !foreign method "MakeDefaultName",
	OnCreateFileHistory       :: (self:wxDocManager) -> wxFileHistory !foreign method "OnCreateFileHistory",
	OnFileClose               :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileClose",
	OnFileCloseAll            :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileCloseAll",
	OnFileNew                 :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileNew",
	OnFileOpen                :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileOpen",
	OnFileRevert              :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileRevert",
	OnFileSave                :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileSave",
	OnFileSaveAs              :: (self:wxDocManager, event:wxCommandEvent) !foreign method "OnFileSaveAs",
	RemoveDocument            :: (self:wxDocManager, doc:wxDocument) !foreign method "RemoveDocument",
	SetLastDirectory          :: (self:wxDocManager, dir:wxString|string) !foreign method "SetLastDirectory",
	SetMaxDocsOpen            :: (self:wxDocManager, n:int) !foreign method "SetMaxDocsOpen",
}

export wxDocParentFrame :: !foreign struct {
	using wxFrame,

	!call :: (manager:wxDocManager, parent:wxFrame, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxDocParentFrame") -> wxDocParentFrame !foreign lua "wx.wxDocParentFrame",
}

export wxDocTemplate :: !foreign struct {
	using wxObject,

	!call :: (manager:wxDocManager, descr:wxString|string, filter:wxString|string, dir:wxString|string, ext:wxString|string, docTypeName:wxString|string, viewTypeName:wxString|string, docClassInfo:wxClassInfo=wxClassInfo.null, viewClassInfo:wxClassInfo=wxClassInfo.null, flags:int--[[long]]=wxDEFAULT_TEMPLATE_FLAGS) -> wxDocTemplate !foreign lua "wx.wxDocTemplate",

	CreateDocument      :: (self:wxDocTemplate, path:wxString|string, flags:int--[[long]]=0) -> wxDocument !foreign method "CreateDocument",
	CreateView          :: (self:wxDocTemplate, doc:wxDocument, flags:int--[[long]]=0) -> wxView !foreign method "CreateView",
	GetDefaultExtension :: (self:wxDocTemplate) -> string !foreign method "GetDefaultExtension",
	GetDescription      :: (self:wxDocTemplate) -> string !foreign method "GetDescription",
	GetDirectory        :: (self:wxDocTemplate) -> string !foreign method "GetDirectory",
	GetDocumentManager  :: (self:wxDocTemplate) -> wxDocManager !foreign method "GetDocumentManager",
	GetDocumentName     :: (self:wxDocTemplate) -> string !foreign method "GetDocumentName",
	GetFileFilter       :: (self:wxDocTemplate) -> string !foreign method "GetFileFilter",
	GetFlags            :: (self:wxDocTemplate) -> int--[[long]] !foreign method "GetFlags",
	GetViewName         :: (self:wxDocTemplate) -> string !foreign method "GetViewName",
	InitDocument        :: (self:wxDocTemplate, doc:wxDocument, path:wxString|string, flags:int--[[long]]=0) -> bool !foreign method "InitDocument",
	IsVisible           :: (self:wxDocTemplate) -> bool !foreign method "IsVisible",
	SetDefaultExtension :: (self:wxDocTemplate, ext:wxString|string) !foreign method "SetDefaultExtension",
	SetDescription      :: (self:wxDocTemplate, descr:wxString|string) !foreign method "SetDescription",
	SetDirectory        :: (self:wxDocTemplate, dir:wxString|string) !foreign method "SetDirectory",
	SetDocumentManager  :: (self:wxDocTemplate, manager:wxDocManager) !foreign method "SetDocumentManager",
	SetFileFilter       :: (self:wxDocTemplate, filter:wxString|string) !foreign method "SetFileFilter",
	SetFlags            :: (self:wxDocTemplate, flags:int--[[long]]) !foreign method "SetFlags",
}

export wxDocument :: !foreign struct {
	using wxEvtHandler,

	!call :: () -> wxDocument !foreign lua "wx.wxDocument",

	AddView                  :: (self:wxDocument, view:wxView) -> bool !foreign method "AddView",
	Close                    :: (self:wxDocument) -> bool !foreign method "Close",
	DeleteAllViews           :: (self:wxDocument) -> bool !foreign method "DeleteAllViews",
	GetCommandProcessor      :: (self:wxDocument) -> wxCommandProcessor !foreign method "GetCommandProcessor",
	GetDocumentTemplate      :: (self:wxDocument) -> wxDocTemplate !foreign method "GetDocumentTemplate",
	GetDocumentManager       :: (self:wxDocument) -> wxDocManager !foreign method "GetDocumentManager",
	GetDocumentName          :: (self:wxDocument) -> string !foreign method "GetDocumentName",
	GetDocumentWindow        :: (self:wxDocument) -> wxWindow !foreign method "GetDocumentWindow",
	GetFilename              :: (self:wxDocument) -> string !foreign method "GetFilename",
	GetFirstView             :: (self:wxDocument) -> wxView !foreign method "GetFirstView",
	GetPrintableName         :: (self:wxDocument, name:wxString|string) -> (name:string) !foreign method "GetPrintableName",
	GetTitle                 :: (self:wxDocument) -> string !foreign method "GetTitle",
	GetViews                 :: (self:wxDocument) -> wxList !foreign method "GetViews",
	IsModified               :: (self:wxDocument) -> bool !foreign method "IsModified",
	Modify                   :: (self:wxDocument, modify:bool) !foreign method "Modify",
	OnChangedViewList        :: (self:wxDocument) !foreign method "OnChangedViewList",
	OnCloseDocument          :: (self:wxDocument) -> bool !foreign method "OnCloseDocument",
	OnCreate                 :: (self:wxDocument, path:wxString|string, flags:int--[[long]]) -> bool !foreign method "OnCreate",
	OnCreateCommandProcessor :: (self:wxDocument) -> wxCommandProcessor !foreign method "OnCreateCommandProcessor",
	OnNewDocument            :: (self:wxDocument) -> bool !foreign method "OnNewDocument",
	OnOpenDocument           :: (self:wxDocument, filename:wxString|string) -> bool !foreign method "OnOpenDocument",
	OnSaveDocument           :: (self:wxDocument, filename:wxString|string) -> bool !foreign method "OnSaveDocument",
	OnSaveModified           :: (self:wxDocument) -> bool !foreign method "OnSaveModified",
	RemoveView               :: (self:wxDocument, view:wxView) -> bool !foreign method "RemoveView",
	Save                     :: (self:wxDocument) -> bool !foreign method "Save",
	SaveAs                   :: (self:wxDocument) -> bool !foreign method "SaveAs",
	SetCommandProcessor      :: (self:wxDocument, processor:wxCommandProcessor) !foreign method "SetCommandProcessor",
	SetDocumentName          :: (self:wxDocument, name:wxString|string) !foreign method "SetDocumentName",
	SetDocumentTemplate      :: (self:wxDocument, templ:wxDocTemplate) !foreign method "SetDocumentTemplate",
	SetFilename              :: (self:wxDocument, filename:wxString|string, notifyViews:bool=false) !foreign method "SetFilename",
	SetTitle                 :: (self:wxDocument, title:wxString|string) !foreign method "SetTitle",
	UpdateAllViews           :: (self:wxDocument, sender:wxView=wxView.null, hint:wxObject=wxObject.null) !foreign method "UpdateAllViews",
}

export wxView :: !foreign struct {
	using wxEvtHandler,

	null: wxView : !foreign lua "wx.NULL",

	Activate           :: (self:wxView, activate:bool) !foreign method "Activate",
	Close              :: (self:wxView, deleteWindow:bool=true) -> bool !foreign method "Close",
	GetDocument        :: (self:wxView) -> wxDocument !foreign method "GetDocument",
	GetDocumentManager :: (self:wxView) -> wxDocManager !foreign method "GetDocumentManager",
	GetFrame           :: (self:wxView) -> wxWindow !foreign method "GetFrame",
	GetViewName        :: (self:wxView) -> string !foreign method "GetViewName",
	OnActivateView     :: (self:wxView, activate:bool, activeView:wxView, deactiveView:wxView) !foreign method "OnActivateView",
	OnChangeFilename   :: (self:wxView) !foreign method "OnChangeFilename",
	OnClose            :: (self:wxView, deleteWindow:bool) -> bool !foreign method "OnClose",
	OnCreate           :: (self:wxView, doc:wxDocument, flags:int--[[long]]) -> bool !foreign method "OnCreate",
	OnCreatePrintout   :: (self:wxView) -> wxPrintout !foreign method "OnCreatePrintout",
	OnUpdate           :: (self:wxView, sender:wxView, hint:wxObject) !foreign method "OnUpdate",
	SetDocument        :: (self:wxView, doc:wxDocument) !foreign method "SetDocument",
	SetFrame           :: (self:wxView, frame:wxFrame) !foreign method "SetFrame",
	SetViewName        :: (self:wxView, name:wxString|string) !foreign method "SetViewName",
}

export wxCommandProcessor :: !foreign struct {
	using wxObject,

	!call :: (maxCommands:int=-1) -> wxCommandProcessor !foreign lua "wx.wxCommandProcessor",

	CanRedo            :: (self:wxCommandProcessor) -> bool !foreign method "CanRedo",
	CanUndo            :: (self:wxCommandProcessor) -> bool !foreign method "CanUndo",
	Redo               :: (self:wxCommandProcessor) -> bool !foreign method "Redo",
	Undo               :: (self:wxCommandProcessor) -> bool !foreign method "Undo",
	ClearCommands      :: (self:wxCommandProcessor) !foreign method "ClearCommands",
	GetCommands        :: (self:wxCommandProcessor) -> wxList !foreign method "GetCommands",
	GetMaxCommands     :: (self:wxCommandProcessor) -> int !foreign method "GetMaxCommands",
	GetEditMenu        :: (self:wxCommandProcessor) -> wxMenu !foreign method "GetEditMenu",
	GetRedoAccelerator :: (self:wxCommandProcessor) -> string !foreign method "GetRedoAccelerator",
	GetRedoMenuLabel   :: (self:wxCommandProcessor) -> string !foreign method "GetRedoMenuLabel",
	GetUndoAccelerator :: (self:wxCommandProcessor) -> string !foreign method "GetUndoAccelerator",
	GetUndoMenuLabel   :: (self:wxCommandProcessor) -> string !foreign method "GetUndoMenuLabel",
	Initialize         :: (self:wxCommandProcessor) !foreign method "Initialize",
	IsDirty            :: (self:wxCommandProcessor) -> bool !foreign method "IsDirty",
	MarkAsSaved        :: (self:wxCommandProcessor) !foreign method "MarkAsSaved",
	SetEditMenu        :: (self:wxCommandProcessor, menu:wxMenu) !foreign method "SetEditMenu",
	SetMenuStrings     :: (self:wxCommandProcessor) !foreign method "SetMenuStrings",
	SetRedoAccelerator :: (self:wxCommandProcessor, accel:wxString|string) !foreign method "SetRedoAccelerator",
	SetUndoAccelerator :: (self:wxCommandProcessor, accel:wxString|string) !foreign method "SetUndoAccelerator",
	Submit             :: (self:wxCommandProcessor, command:wxCommand, storeIt:bool=true) -> bool !foreign method "Submit",
	Store              :: (self:wxCommandProcessor, command:wxCommand) !foreign method "Store",
	GetCurrentCommand  :: (self:wxCommandProcessor) -> wxCommand !foreign method "GetCurrentCommand",
}

export wxCommand :: !foreign struct {
	using wxObject,

	CanUndo :: (self:wxCommand) -> bool !foreign method "CanUndo",
	Do      :: (self:wxCommand) -> bool !foreign method "Do",
	GetName :: (self:wxCommand) -> string !foreign method "GetName",
	Undo    :: (self:wxCommand) -> bool !foreign method "Undo",
}

export wxFileHistory :: !foreign struct {
	using wxObject,

	!call :: (maxFiles:int=9, idBase:wxWindowID=wxID_FILE1) -> wxFileHistory !foreign lua "wx.wxFileHistory",

	AddFileToHistory      :: (self:wxFileHistory, filename:wxString|string) !foreign method "AddFileToHistory",
	AddFilesToMenu        :: (self:wxFileHistory) !foreign method "AddFilesToMenu",
	AddFilesToMenu        :: (self:wxFileHistory, menu:wxMenu) !foreign method "AddFilesToMenu",
	GetHistoryFile        :: (self:wxFileHistory, index:int) -> string !foreign method "GetHistoryFile",
	GetMaxFiles           :: (self:wxFileHistory) -> int !foreign method "GetMaxFiles",
	GetCount              :: (self:wxFileHistory) -> int--[[size_t]] !foreign method "GetCount",
	Load                  :: (self:wxFileHistory, config:wxConfigBase) !foreign method "Load",
	RemoveFileFromHistory :: (self:wxFileHistory, i:int--[[size_t]]) !foreign method "RemoveFileFromHistory",
	RemoveMenu            :: (self:wxFileHistory, menu:wxMenu) !foreign method "RemoveMenu",
	Save                  :: (self:wxFileHistory, config:wxConfigBase) !foreign method "Save",
	UseMenu               :: (self:wxFileHistory, menu:wxMenu) !foreign method "UseMenu",
}
