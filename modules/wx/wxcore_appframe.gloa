--[[============================================================
--=
--=  wxLua/wxWidget bindings for GlÃ³a
--=  Interface source: wxcore_appframe.i
--=
--=  Tested with:
--=  - wxLua 2.8.7.0 / wxWidgets 2.8.8
--=
--=  Note: Most bindings have not been tested yet!
--=
--============================================================]]

!import "wx/wxcore_event"
!import "wx/common"
!import "wx/wxcore_windows"
!import "wx/wxcore_gdi"
!import "wx/wxcore_defsutils"
!import "wx/wxcore_menutool"

export wxDEFAULT_FRAME_STYLE:   int : !foreign lua "wx.wxDEFAULT_FRAME_STYLE"
export wxICONIZE:               int : !foreign lua "wx.wxICONIZE"
export wxCAPTION:               int : !foreign lua "wx.wxCAPTION"
export wxMINIMIZE:              int : !foreign lua "wx.wxMINIMIZE"
export wxMINIMIZE_BOX:          int : !foreign lua "wx.wxMINIMIZE_BOX"
export wxMAXIMIZE:              int : !foreign lua "wx.wxMAXIMIZE"
export wxMAXIMIZE_BOX:          int : !foreign lua "wx.wxMAXIMIZE_BOX"
export wxCLOSE_BOX:             int : !foreign lua "wx.wxCLOSE_BOX"
export wxSTAY_ON_TOP:           int : !foreign lua "wx.wxSTAY_ON_TOP"
export wxSYSTEM_MENU:           int : !foreign lua "wx.wxSYSTEM_MENU"
export wxRESIZE_BORDER:         int : !foreign lua "wx.wxRESIZE_BORDER"
export wxFRAME_TOOL_WINDOW:     int : !foreign lua "wx.wxFRAME_TOOL_WINDOW"
export wxFRAME_NO_TASKBAR:      int : !foreign lua "wx.wxFRAME_NO_TASKBAR"
export wxFRAME_FLOAT_ON_PARENT: int : !foreign lua "wx.wxFRAME_FLOAT_ON_PARENT"
export wxFRAME_EX_CONTEXTHELP:  int : !foreign lua "wx.wxFRAME_EX_CONTEXTHELP"
export wxFRAME_SHAPED:          int : !foreign lua "wx.wxFRAME_SHAPED"
export wxFRAME_EX_METAL:        int : !foreign lua "wx.wxFRAME_EX_METAL"
export wxTHICK_FRAME:           int : !foreign lua "wx.wxTHICK_FRAME"
export wxTINY_CAPTION_HORIZ:    int : !foreign lua "wx.wxTINY_CAPTION_HORIZ"
export wxTINY_CAPTION_VERT:     int : !foreign lua "wx.wxTINY_CAPTION_VERT"
export wxST_SIZEGRIP:           int : !foreign lua "wx.wxST_SIZEGRIP"
export wxSB_NORMAL:             int : !foreign lua "wx.wxSB_NORMAL"
export wxSB_FLAT:               int : !foreign lua "wx.wxSB_FLAT"
export wxSB_RAISED:             int : !foreign lua "wx.wxSB_RAISED"

export wxUSER_ATTENTION_INFO:  wxEnum : !foreign lua "wx.wxUSER_ATTENTION_INFO"
export wxUSER_ATTENTION_ERROR: wxEnum : !foreign lua "wx.wxUSER_ATTENTION_ERROR"

export wxFULLSCREEN_NOMENUBAR:   wxEnum : !foreign lua "wx.wxFULLSCREEN_NOMENUBAR"
export wxFULLSCREEN_NOTOOLBAR:   wxEnum : !foreign lua "wx.wxFULLSCREEN_NOTOOLBAR"
export wxFULLSCREEN_NOSTATUSBAR: wxEnum : !foreign lua "wx.wxFULLSCREEN_NOSTATUSBAR"
export wxFULLSCREEN_NOBORDER:    wxEnum : !foreign lua "wx.wxFULLSCREEN_NOBORDER"
export wxFULLSCREEN_NOCAPTION:   wxEnum : !foreign lua "wx.wxFULLSCREEN_NOCAPTION"
export wxFULLSCREEN_ALL:         wxEnum : !foreign lua "wx.wxFULLSCREEN_ALL"

export wxApp :: !foreign struct {
	using wxEvtHandler,

	IsMainLoopRunning :: () -> bool !foreign lua "wx.wxApp.IsMainLoopRunning",

	Dispatch             :: (self:wxApp) !foreign method "Dispatch",
	ExitMainLoop         :: (self:wxApp) !foreign method "ExitMainLoop",
	GetAppName           :: (self:wxApp) -> string !foreign method "GetAppName",
	GetClassName         :: (self:wxApp) -> string !foreign method "GetClassName",
	GetExitOnFrameDelete :: (self:wxApp) -> bool !foreign method "GetExitOnFrameDelete",
	GetTopWindow         :: (self:wxApp) -> wxWindow !foreign method "GetTopWindow",
	GetUseBestVisual     :: (self:wxApp) -> bool !foreign method "GetUseBestVisual",
	GetVendorName        :: (self:wxApp) -> string !foreign method "GetVendorName",
	IsActive             :: (self:wxApp) -> bool !foreign method "IsActive",
	MainLoop             :: (self:wxApp) -> int !foreign method "MainLoop",
	Pending              :: (self:wxApp) -> bool !foreign method "Pending",
	SendIdleEvents       :: (self:wxApp, win:wxWindow, event:wxIdleEvent) -> bool !foreign method "SendIdleEvents",
	SetAppName           :: (self:wxApp, name:wxString|string) !foreign method "SetAppName",
	SetClassName         :: (self:wxApp, name:wxString|string) !foreign method "SetClassName",
	SetExitOnFrameDelete :: (self:wxApp, flag:bool) !foreign method "SetExitOnFrameDelete",
	SetTopWindow         :: (self:wxApp, window:wxWindow) !foreign method "SetTopWindow",
	SetVendorName        :: (self:wxApp, name:wxString|string) !foreign method "SetVendorName",
	SetUseBestVisual     :: (self:wxApp, flag:bool) !foreign method "SetUseBestVisual",
}

export wxTopLevelWindow :: !foreign struct {
	using wxWindow,

	GetDefaultItem       :: (self:wxTopLevelWindow) -> wxWindow !foreign method "GetDefaultItem",
	GetIcon              :: (self:wxTopLevelWindow) -> wxIcon !foreign method "GetIcon",
	GetTitle             :: (self:wxTopLevelWindow) -> string !foreign method "GetTitle",
	GetTmpDefaultItem    :: (self:wxTopLevelWindow) -> wxWindow !foreign method "GetTmpDefaultItem",
	Iconize              :: (self:wxTopLevelWindow, iconize:bool) !foreign method "Iconize",
	IsActive             :: (self:wxTopLevelWindow) -> bool !foreign method "IsActive",
	IsFullScreen         :: (self:wxTopLevelWindow) -> bool !foreign method "IsFullScreen",
	IsIconized           :: (self:wxTopLevelWindow) -> bool !foreign method "IsIconized",
	IsMaximized          :: (self:wxTopLevelWindow) -> bool !foreign method "IsMaximized",
	Maximize             :: (self:wxTopLevelWindow, maximize:bool) !foreign method "Maximize",
	RequestUserAttention :: (self:wxTopLevelWindow, flags:int=wxUSER_ATTENTION_INFO) !foreign method "RequestUserAttention",
	SetDefaultItem       :: (self:wxTopLevelWindow, win:wxWindow) -> wxWindow !foreign method "SetDefaultItem",
	SetIcon              :: (self:wxTopLevelWindow, icon:wxIcon) !foreign method "SetIcon",
	SetIcons             :: (self:wxTopLevelWindow, icons:wxIconBundle) !foreign method "SetIcons",
	SetShape             :: (self:wxTopLevelWindow, region:wxRegion) -> bool !foreign method "SetShape",
	SetTitle             :: (self:wxTopLevelWindow, title:wxString|string) !foreign method "SetTitle",
	SetTmpDefaultItem    :: (self:wxTopLevelWindow, win:wxWindow) -> wxWindow !foreign method "SetTmpDefaultItem",
	ShowFullScreen       :: (self:wxTopLevelWindow, show:bool, style:int--[[long]]=wxFULLSCREEN_ALL) -> bool !foreign method "ShowFullScreen",
}

export wxFrame :: !foreign struct {
	using wxTopLevelWindow,

	null: wxFrame : !foreign lua "wx.NULL",

	!call :: () -> wxFrame !foreign lua "wx.wxFrame",
	!call :: (parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxFrame") -> wxFrame !foreign lua "wx.wxFrame",

	Create              :: (self:wxFrame, parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxFrame") -> bool !foreign method "Create",
	CreateStatusBar     :: (self:wxFrame, number:int=1, style:int--[[long]]=0, id:wxWindowID=wxID_ANY, name:wxString|string="wxStatusBar") -> wxStatusBar !foreign method "CreateStatusBar",
	CreateToolBar       :: (self:wxFrame, style:int--[[long]]=0--[[bitwise(wxNO_BORDER|wxTB_HORIZONTAL)]], id:wxWindowID=wxID_ANY, name:wxString|string="wxToolBar") -> wxToolBar !foreign method "CreateToolBar",
	GetClientAreaOrigin :: (self:wxFrame) -> wxPoint !foreign method "GetClientAreaOrigin",
	GetMenuBar          :: (self:wxFrame) -> wxMenuBar !foreign method "GetMenuBar",
	GetStatusBar        :: (self:wxFrame) -> wxStatusBar !foreign method "GetStatusBar",
	GetStatusBarPane    :: (self:wxFrame) -> int !foreign method "GetStatusBarPane",
	GetToolBar          :: (self:wxFrame) -> wxToolBar !foreign method "GetToolBar",
	ProcessCommand      :: (self:wxFrame, id:int) !foreign method "ProcessCommand",
	SendSizeEvent       :: (self:wxFrame) !foreign method "SendSizeEvent",
	SetMenuBar          :: (self:wxFrame, menuBar:wxMenuBar) !foreign method "SetMenuBar",
	SetStatusBar        :: (self:wxFrame, statusBar:wxStatusBar) !foreign method "SetStatusBar",
	SetStatusBarPane    :: (self:wxFrame, n:int) !foreign method "SetStatusBarPane",
	SetStatusText       :: (self:wxFrame, text:wxString|string, number:int=0) !foreign method "SetStatusText",
	SetStatusWidths     :: (self:wxFrame, intTable:[]int) !foreign method "SetStatusWidths",
	SetToolBar          :: (self:wxFrame, toolBar:wxToolBar) !foreign method "SetToolBar",
}

export wxMiniFrame :: !foreign struct {
	using wxFrame,

	!call :: () -> wxMiniFrame !foreign lua "wx.wxMiniFrame",
	!call :: (parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxMiniFrame") -> wxMiniFrame !foreign lua "wx.wxMiniFrame",

	Create :: (self:wxMiniFrame, parent:wxWindow, id:wxWindowID, title:wxString|string, pos:wxPoint=wxDefaultPosition, size:wxSize=wxDefaultSize, style:int--[[long]]=wxDEFAULT_FRAME_STYLE, name:wxString|string="wxMiniFrame") -> bool !foreign method "Create",
}

export wxStatusBar :: !foreign struct {
	using wxWindow,

	!call :: () -> wxStatusBar !foreign lua "wx.wxStatusBar",
	!call :: (parent:wxWindow, id:wxWindowID, style:int--[[long]]=wxST_SIZEGRIP, name:wxString|string="wxStatusBar") -> wxStatusBar !foreign lua "wx.wxStatusBar",

	Create          :: (self:wxStatusBar, parent:wxWindow, id:wxWindowID, style:int--[[long]]=wxST_SIZEGRIP, name:wxString|string="wxStatusBar") -> bool !foreign method "Create",
	GetFieldRect    :: (self:wxStatusBar, i:int, rect:wxRect) -> bool !foreign method "GetFieldRect",
	GetFieldsCount  :: (self:wxStatusBar) -> int !foreign method "GetFieldsCount",
	GetStatusText   :: (self:wxStatusBar, ir:int=0) -> string !foreign method "GetStatusText",
	PopStatusText   :: (self:wxStatusBar, field:int=0) !foreign method "PopStatusText",
	PushStatusText  :: (self:wxStatusBar, str:wxString|string, field:int=0) !foreign method "PushStatusText",
	SetFieldsCount  :: (self:wxStatusBar, num:int|[]int) !foreign method "SetFieldsCount",
	SetMinHeight    :: (self:wxStatusBar, height:int) !foreign method "SetMinHeight",
	SetStatusText   :: (self:wxStatusBar, text:wxString|string, i:int=0) !foreign method "SetStatusText",
	SetStatusWidths :: (self:wxStatusBar, intTable:[]int) !foreign method "SetStatusWidths",
	SetStatusStyles :: (self:wxStatusBar, intTable:[]int) !foreign method "SetStatusStyles",
}

export wxGetApp :: () -> wxApp !foreign lua "wx.wxGetApp"
