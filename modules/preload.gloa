--[[============================================================
--=
--=  Gl√≥a preload module
--=
--=  This module is imported automatically in every file and
--=  thus everything here is always available everywhere.
--=
--==============================================================

	TypeInfo
	TypeInfoArray
	TypeInfoCompound
	TypeInfoEnum
	TypeInfoFunction
	TypeInfoStruct
	TypeInfoVararg

--============================================================]]

export TypeTag :: enum {
	-- @Compiler @Robustness: Use this here:  ANY :: !compiler "typeTagAny",
	ANY         :: 1,
	BOOL        :: 2,
	INT         :: 3,
	NONE        :: 4,
	FLOAT       :: 5,
	STRING      :: 6,
	TABLE       :: 7,
	TYPE        :: 8,
	VOID        :: 0,
	PLACEHOLDER :: 9,
	ARRAY       :: 10,
	VARARG      :: 11,
	FUNCTION    :: 12,
	STRUCT      :: 13,
	ENUM        :: 14,
	COMPOUND    :: 16,
}

export TypeInfo :: !foreign struct {
	tag = TypeTag.VOID,
}

export TypeInfoArray :: !foreign struct {
	using TypeInfo,
	itemType:type = none,
}
export TypeInfoVararg :: !foreign struct {
	using TypeInfo,
	itemType:type = none,
}

local Argument :: !foreign struct {
	argumentType:type = none,
	required:bool,
}
export TypeInfoFunction :: !foreign struct {
	using TypeInfo,
	argumentsIn:[]Argument,
	argumentsOut:[]Argument,
}

local StructMember :: !foreign struct {
	name:string,
	memberType:type = none,
}
export TypeInfoStruct :: !foreign struct {
	using TypeInfo,
	members:[]StructMember,
}

local EnumMember :: !foreign struct {
	name:string,
}
export TypeInfoEnum :: !foreign struct {
	using TypeInfo,
	memberType:type = none,
	members:[]EnumMember,
}

export TypeInfoCompound :: !foreign struct {
	using TypeInfo,
	types:[]type,
}
