--[[============================================================
--=
--=  Glóa utils module
--=
--==============================================================

	getProgramArguments, getCommandLineArguments
	wrapFunctionInGloaErrorHandler

--============================================================]]

-- Get the command line arguments for the program. (Also see getCompilerArguments)
export getProgramArguments :: () -> []string !foreign compiler "getProgramArguments"

-- Get all arguments from the command line, including Lua's arguments at index
-- 0 and below (https://www.lua.org/manual/5.1/manual.html#6). At compile-time
-- it also includes compiler arguments.
export getCommandLineArguments :: () -> []string !foreign compiler "getCommandLineArguments"

--
-- Make Glóa handle errors triggered by a function.
--
-- This is useful if an external library or framework tries to handle an error
-- triggered by a callback provided by you, but you instead want to trigger a
-- normal Glóa error before the library knows what happened.
--
export wrapFunctionInGloaErrorHandler :: (func:any) -> ...any !foreign compiler "wrapFunctionInGloaErrorHandler"
