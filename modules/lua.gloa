--[[============================================================
--=
--=  GlÃ³a Lua module
--=
--==============================================================

	ENVIRONMENT
	VERSION_STRING

	getType
	doFile, loadFile, loadString

	-- Enums:
	LuaType

--============================================================]]

export VERSION_STRING : string : !foreign lua "_VERSION"
export ENVIRONMENT    : table  : !foreign lua "_G"

export LuaType :: enum {
	BOOLEAN  :: "boolean",
	FUNCTION :: "function",
	NIL      :: "nil",
	NUMBER   :: "number",
	STRING   :: "string",
	TABLE    :: "table",
	THREAD   :: "thread",   -- Coroutine.
	USERDATA :: "userdata", -- C data.
	-- CDATA :: "cdata",    -- Special type by LuaFFI. (Not sure it should be included here.)
}
export getType :: (v:any) -> LuaType !foreign lua "type"

export doFile :: (path:string) -> ...any !foreign lua "dofile"

export loadFile :: (path:string, $ChunkType:Type, chunkName="") -> (success:bool, chunk:ChunkType, err:string) {
	local _loadfile :: (path:string, chunkName="") -> (chunk:any, err:string) !foreign lua "loadfile"

	local chunk, err = _loadfile(path, chunkName)
	if chunk == nil  return false, NULL, err

	return true, cast(ChunkType)chunk, ""
}

export loadString :: (lua:string, $ChunkType:Type, chunkName="") -> (success:bool, chunk:ChunkType, err:string) {
	local _loadstring :: (lua:string, chunkName="") -> (chunk:any, err:string) !foreign lua "loadstring"

	local chunk, err = _loadstring(lua, chunkName)
	if chunk == nil  return false, NULL, err

	return true, cast(ChunkType)chunk, ""
}

-- Not sure this function is really needed. Lua modules should maybe always be
-- required directly inside !foreign expressions or possibly using !preload.
-- export requireModule :: (moduleName:string) -> any !foreign lua "require"
