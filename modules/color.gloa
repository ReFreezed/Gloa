--[[============================================================
--=
--=  GlÃ³a color module
--=
--==============================================================

	rgbToHsl, hslToRgb
	rgbToHsv, hsvToRgb

--============================================================]]

local math :: !import "math"



export rgbToHsl :: (r,g,b:float) -> (h,s,l:float) {
	local max = math.max(r, g, b)
	local min = math.min(r, g, b)

	local h, s, l: float = NULL, NULL, NULL
	l = (max+min)/2

	if max == min {
		h, s = 0, 0 -- Achromatic.
	} else {
		local d = max-min
		s = (l > .5) ? d/(2-max-min) : d/(max+min)

		if max == r {
			h = (g-b)/d
			if g < b {  h = h+6  }
		} elseif max == g {
			h = (b-r)/d+2
		} elseif max == b {
			h = (r-g)/d+4
		}

		h = h/6
	}

	return h, s, l
}

export hslToRgb :: (h,s,l:float) -> (r,g,b:float) {
	local r, g, b: float = NULL, NULL, NULL

	if s == 0 {
		r, g, b = l, l, l -- Achromatic.
	} else {
		local q = (l < .5) ? l*(1+s) : l+s-l*s
		local p = 2*l-q

		local hue2rgb :: (p,q,t:float) -> float {
			if t < 0    t = t+1
			if t > 1    t = t-1
			if t < 1/6  return p+(q-p)*6*t
			if t < 1/2  return q
			if t < 2/3  return p+(q-p)*(2/3-t)*6
			return p
		}
		r = hue2rgb(p, q, h+1/3)
		g = hue2rgb(p, q, h)
		b = hue2rgb(p, q, h-1/3)
	}

	return r, g, b
}



export rgbToHsv :: (r,g,b:float) -> (h,s,v:float) {
	local max, min = math.max(r, g, b), math.min(r, g, b)
	local h, s, v: float = NULL, NULL, NULL
	v = max

	local d = max-min
	s       = (max == 0) ? .0 : d/max

	if max == min {
		h = 0 -- Achromatic.
	} else {
		if max == r {
			h = (g-b)/d
			if g < b {  h = h+6  }
		} elseif max == g {
			h = (b-r)/d+2
		} elseif max == b {
			h = (r-g)/d+4
		}
		h = h/6
	}

	return h, s, v
}

export hsvToRgb :: (h,s,v:float) -> (r,g,b:float) {
	local r, g, b: float = NULL, NULL, NULL

	local i = math.floor(h*6)
	local f = h*6-i
	local p = v*(1-s)
	local q = v*(1-f*s)
	local t = v*(1-(1-f)*s)

	i = i%6

	if     i == 0  r, g, b = v, t, p
	elseif i == 1  r, g, b = q, v, p
	elseif i == 2  r, g, b = p, v, t
	elseif i == 3  r, g, b = p, q, v
	elseif i == 4  r, g, b = t, p, v
	else           r, g, b = v, p, q

	return r, g, b
}


