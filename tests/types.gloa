--
-- Type test.
--



-- [[ Simple declarations.
--------------------------------

local myNum1 = 10
local myNum2:int = 20
local myNum3 = int

local myVar:MyType2 = 555
local MyType2 :: MyType1
local MyType1 :: int

local myInt = 10
local myInt2 : typeOf(myInt)

-- Errors:

-- local coolVar:CoolType3 = true
-- local CoolType3 :: CoolType2
-- local CoolType2 :: CoolType1
-- local CoolType1 :: 5 -- Ints are not types!

-- local myVar :: string -- Redeclaration.

-- local possible = nope -- Undeclared identifier.

-- local maybe : typeOf(nope) -- Undeclared identifier.

-- local a:b -- Circular dependency.
-- local b:a

-- @Incomplete:
-- local myInt3 : typeOf(myInt) = "nope" -- Type/value type mismatch.
--]]



--[[ Function declarations.
--------------------------------

-- local main :: () -> void {
-- }

local mySig :: (arg1:string, arg2,arg3:int) -> bool, string
local mySig2 :: (arg1:string, arg2,arg3:int) -> bool, string
local mySig3 :: (arg1:int, arg2,arg3:int) -> bool, string
local myFunc:mySig : (arg1:string, arg2,arg3:int) -> bool, string {}

-- local mySig :: (a:int,b:nope) -- Error: Undeclared identifier.
--]]


