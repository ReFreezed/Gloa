--
-- Basic test.
--

local SEVEN1 :: 1+2*3
local seven1  = SEVEN1

local TWO    :: 2
local SEVEN2 :: 1+TWO*3
local seven2  = SEVEN2

local noopRef = noop

local callTest = () {
	noop()
	performAdditions(2)
}

local performAdditions :: (a:int) -> int {
	local x = -(-1) + a * (2+1)
	local y:int -- Default value for ints is 0.
	return x+y
}

local noop :: () {}

global INT     :: int
global typeVar1 = string
global typeVar2 = INT

local one, two = "1", 2

local main :: () -> void {
	local a = 1
	local b = a

	local oneInTwoOut1 :: (a:int) -> int, int { return a, 2*a }
	local one1, two1, three1 : int = 5, oneInTwoOut1(99)

	local MySig :: (arg1:string, arg2,arg3:int) -> bool, string
	local myFunc1:MySig : (arg1:string, arg2,arg3:int) -> bool, string { return true, "foo" }
	local mySig1 = MySig
	local mySig2 = MySig

	-- local testFuncReturningFunc :: () {
	-- 	local funcReturningFunc :: () -> (n:int)->string {
	-- 		return (n:int) -> string {
	-- 			return "foo"
	-- 		}
	-- 	}
	-- 	local theString = funcReturningFunc()(5)
	-- }
}
