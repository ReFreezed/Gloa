--
-- Deep compilation test.
--

!run compileOthers({
	"deepCompilation.1.gloa",
	"deepCompilation.2.gloa",
})

local compileOthers :: (paths:[]string) {
	!import "basic"
	!import "string"
	!import "os"
	!import "compiler"

	local options      = getBuildOptions()
	options.outputFile = false
	setBuildOptions(options)

	for paths {
		print("Compiling "..it.."...")
		compile(it)
	}
	print("Both compiled!")

	for paths {
		local path
			= getProjectDirectory().."/"
			..replacePattern(it, "%.gloa$", ".lua")

		print("Running "..path.."...")

		local args: []string = {path}
		local ok, err, code  = execute("lua", args)

		if not (ok and code == 0)
			error(err ?: "Failed!")
	}
	print("Both ran!")
}
