--
-- GlÃ³a test suite
--

local getTestFiles :: () -> []string {
	return {
		"tests/types.gloa",
		"tests/basic.gloa",
		"tests/modules.gloa",
		"examples/lovelySnake/main.gloa",
	}
}

local COMPILER_OPTIONS = "--debug --nogc --silent"

!import "basic"
!import "string"

local main :: () {
	local COMPILER_PATH:string : !foreign compiler "COMPILER_PATH"

	local run :: (cmd:string) -> int !foreign lua "os.execute"

	local failCount = 0
	local lines:[]string

	local testFiles = getTestFiles()

	for testFiles {
		local cmd  = format([["lua "%s" %s "%s""]], COMPILER_PATH, COMPILER_OPTIONS, it)
		local code = run(cmd)

		if code == 0 {
			insert(lines, format("ok      %s", it))
		} else {
			insert(lines, format("FAILED  %s", it))
			failCount = failCount+1
		}
	}

	print()
	print(repeat("-", 64))
	for lines  print(it)
	print(repeat("-", 64))
	if failCount == 0
		printf("Completed all %d tests successfully. Yay!", #testFiles)
	else
		printf("Failed %d of %d", failCount, #testFiles)
	print()
}
